--
-- Script was generated by Devart dbForge Studio 2020 for MySQL, Version 9.0.391.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 04/09/2020 09:42:25
-- Server version: 5.7.18
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

CREATE DATABASE IF NOT EXISTS videomanage
	CHARACTER SET utf8mb4
	COLLATE utf8mb4_general_ci;

--
-- Set default database
--
USE videomanage;

--
-- Create table `services_types_typological`
--
CREATE TABLE services_types_typological (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  type TEXT DEFAULT NULL,
  code TEXT DEFAULT NULL,
  description LONGTEXT DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 6,
AVG_ROW_LENGTH = 3276,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `services_route_table`
--
CREATE TABLE services_route_table (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  business_ip VARCHAR(5000) NOT NULL DEFAULT '' COMMENT 'ip o dominio del servizio web relativo al videomanage',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 6,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `services`
--
CREATE TABLE services (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  protocol VARCHAR(50) DEFAULT '',
  url LONGTEXT DEFAULT NULL,
  port INT(10) UNSIGNED DEFAULT 0,
  path LONGTEXT DEFAULT NULL,
  user LONGTEXT DEFAULT NULL,
  password_2 VARCHAR(50) DEFAULT '',
  file_system_path LONGTEXT NOT NULL,
  active VARCHAR(1) NOT NULL DEFAULT '',
  alias VARCHAR(50) NOT NULL DEFAULT '',
  ftp VARCHAR(1) NOT NULL DEFAULT '',
  return_servlet_url LONGTEXT DEFAULT NULL,
  web_server_url LONGTEXT DEFAULT NULL,
  channel_manifest_url LONGTEXT DEFAULT NULL,
  channel_code VARCHAR(50) DEFAULT NULL,
  channel_description LONGTEXT DEFAULT NULL,
  recording_service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  expiring_hours_time INT(10) UNSIGNED NOT NULL DEFAULT 0,
  services_route_table_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  services_type_typological_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  server_wowza_url TEXT DEFAULT NULL,
  delivery_url TEXT DEFAULT NULL COMMENT 'url della diretta tipicamente akamai',
  external_encoding_wf_url VARCHAR(5000) DEFAULT NULL,
  wowzaAppName VARCHAR(255) DEFAULT NULL,
  wowzaMasterStreamName VARCHAR(255) DEFAULT NULL,
  wowzaEndpointService VARCHAR(5000) DEFAULT NULL,
  screenshot_bitrate_live INT(11) UNSIGNED DEFAULT 1800,
  screenshot_bitrate_vod INT(11) UNSIGNED DEFAULT 1800,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 101,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `Index_2` on table `services`
--
ALTER TABLE services 
  ADD UNIQUE INDEX Index_2(alias);

--
-- Create index `Index_4` on table `services`
--
ALTER TABLE services 
  ADD INDEX Index_4(services_type_typological_id);

--
-- Create index `IX_services_channel_code` on table `services`
--
ALTER TABLE services 
  ADD INDEX IX_services_channel_code(channel_code);

--
-- Create foreign key
--
ALTER TABLE services 
  ADD CONSTRAINT FK_services_2 FOREIGN KEY (services_type_typological_id)
    REFERENCES services_types_typological(id);

--
-- Create foreign key
--
ALTER TABLE services 
  ADD CONSTRAINT FK_services_services_route_table_id FOREIGN KEY (services_route_table_id)
    REFERENCES services_route_table(id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create view `view_route_service`
--
CREATE 
VIEW view_route_service
AS
SELECT
  `services_route_table`.`business_ip` AS `business_ip`,
  `services`.`channel_code` AS `channel_code`,
  `services`.`id` AS `service_id`
FROM (`services`
  JOIN `services_route_table`
    ON ((`services`.`services_route_table_id` = `services_route_table`.`id`)));

--
-- Create view `view_recorded_services`
--
CREATE 
VIEW view_recorded_services
AS
SELECT
  `services`.`alias` AS `alias`,
  `services_2`.`alias` AS `rec_service`,
  `services`.`id` AS `service_id`,
  `services_2`.`id` AS `recorded_service_id`
FROM ((`services`
  JOIN `services` `services_1`
    ON ((`services`.`recording_service_id` = `services_1`.`recording_service_id`)))
  LEFT JOIN `services` `services_2`
    ON ((`services_1`.`recording_service_id` = `services_2`.`id`)))
WHERE (`services`.`recording_service_id` > 0);

--
-- Create view `bm_view_videomanage_channels`
--
CREATE 
VIEW bm_view_videomanage_channels
AS
SELECT
  `services`.`id` AS `id`,
  `services`.`alias` AS `alias`,
  `services`.`channel_code` AS `channel_code`,
  CONCAT(`services`.`channel_description`, CONVERT(IF((`services_types_typological`.`code` = 'PRM_SOC'), '-SOCIAL', '') USING utf8mb4)) AS `channel_description`
FROM (`services`
  JOIN `services_types_typological`
    ON ((`services_types_typological`.`id` = `services`.`services_type_typological_id`)))
WHERE ((`services`.`ftp` = 'N')
AND (`services`.`active` = 'Y')
AND (`services_types_typological`.`code` = 'PRM'));

--
-- Create view `bm_view_channels_type`
--
CREATE 
VIEW bm_view_channels_type
AS
SELECT
  `services`.`url` AS `url`,
  `services`.`alias` AS `alias`,
  `services`.`channel_code` AS `channel_code`,
  `services`.`channel_description` AS `channel_description`,
  `services`.`delivery_url` AS `delivery_url`,
  `services_route_table`.`business_ip` AS `business_ip`,
  `services_types_typological`.`code` AS `type`,
  `services`.`id` AS `id`
FROM ((`services`
  JOIN `services_route_table`
    ON ((`services`.`services_route_table_id` = `services_route_table`.`id`)))
  JOIN `services_types_typological`
    ON ((`services`.`services_type_typological_id` = `services_types_typological`.`id`)));

--
-- Create table `xml_highlights`
--
CREATE TABLE xml_highlights (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  xml LONGTEXT DEFAULT NULL,
  mediapolis_url LONGTEXT DEFAULT NULL,
  path LONGTEXT DEFAULT NULL,
  filename LONGTEXT DEFAULT NULL,
  service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  category LONGTEXT NOT NULL,
  event_id VARCHAR(190) NOT NULL DEFAULT '',
  changed VARCHAR(1) NOT NULL DEFAULT 'N',
  direct_url LONGTEXT DEFAULT NULL,
  gson_mediapolis_url LONGTEXT DEFAULT NULL,
  response_for_last_call VARCHAR(500) DEFAULT NULL,
  user_id INT(10) NOT NULL DEFAULT 0,
  group_id INT(10) NOT NULL DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 4687,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `UK_xml_highlights_event_id` on table `xml_highlights`
--
ALTER TABLE xml_highlights 
  ADD UNIQUE INDEX UK_xml_highlights_event_id(event_id);

--
-- Create foreign key
--
ALTER TABLE xml_highlights 
  ADD CONSTRAINT FK_xml_highlights_services_id FOREIGN KEY (service_id)
    REFERENCES services(id) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create view `view_direct_url_hl`
--
CREATE 
VIEW view_direct_url_hl
AS
SELECT
  `xml_highlights`.`mediapolis_url` AS `mediapolis_url`,
  `services`.`alias` AS `service_id`,
  `xml_highlights`.`event_id` AS `event_id`,
  `xml_highlights`.`xml` AS `xml`,
  `xml_highlights`.`direct_url` AS `direct_url`,
  `xml_highlights`.`id` AS `id`
FROM (`xml_highlights`
  JOIN `services`
    ON ((`xml_highlights`.`service_id` = `services`.`id`)));

--
-- Create table `xml_highlights_produced_screenshots`
--
CREATE TABLE xml_highlights_produced_screenshots (
  id BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
  xml_highlights_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  path MEDIUMTEXT DEFAULT NULL,
  filename MEDIUMTEXT DEFAULT NULL,
  clips_id VARCHAR(2000) DEFAULT '0',
  mediapolis_url MEDIUMTEXT DEFAULT NULL,
  direct_url MEDIUMTEXT DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 2730,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create foreign key
--
ALTER TABLE xml_highlights_produced_screenshots 
  ADD CONSTRAINT FK_xml_highlights_produced_screenshots_1 FOREIGN KEY (xml_highlights_id)
    REFERENCES xml_highlights(id);

--
-- Create table `service_qualities`
--
CREATE TABLE service_qualities (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  quality VARCHAR(255) NOT NULL DEFAULT '',
  related_url VARCHAR(5000) NOT NULL DEFAULT '',
  master_quality VARCHAR(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 3047,
AVG_ROW_LENGTH = 1638,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `IX_service_qualities_master_quality` on table `service_qualities`
--
ALTER TABLE service_qualities 
  ADD INDEX IX_service_qualities_master_quality(master_quality);

--
-- Create index `IX_service_qualities_quality` on table `service_qualities`
--
ALTER TABLE service_qualities 
  ADD INDEX IX_service_qualities_quality(quality(191));

--
-- Create foreign key
--
ALTER TABLE service_qualities 
  ADD CONSTRAINT FK_service_qualities_services_id FOREIGN KEY (service_id)
    REFERENCES services(id);

--
-- Create view `view_service_qualities`
--
CREATE 
VIEW view_service_qualities
AS
SELECT
  `services`.`alias` AS `alias`,
  `service_qualities`.`quality` AS `quality`,
  `service_qualities`.`related_url` AS `related_url`,
  `service_qualities`.`master_quality` AS `master_quality`,
  `service_qualities`.`service_id` AS `service_id`
FROM (`services`
  JOIN `service_qualities`
    ON ((`services`.`id` = `service_qualities`.`service_id`)));

--
-- Create table `bm_exraisat_channels`
--
CREATE TABLE bm_exraisat_channels (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  service_id INT(10) UNSIGNED DEFAULT NULL,
  channel_code VARCHAR(255) DEFAULT NULL,
  channel_name VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 24,
AVG_ROW_LENGTH = 1170,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create foreign key
--
ALTER TABLE bm_exraisat_channels 
  ADD CONSTRAINT FK_bm_exraisat_channels_services_id FOREIGN KEY (service_id)
    REFERENCES services(id);

--
-- Create table `bm_events`
--
CREATE TABLE bm_events (
  id BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT 'id dell''evento',
  service_id INT(10) UNSIGNED NOT NULL,
  mediapolis_category_id BIGINT(20) NOT NULL,
  feedId VARCHAR(500) DEFAULT NULL,
  name MEDIUMTEXT DEFAULT NULL,
  description MEDIUMTEXT DEFAULT NULL,
  start_date DATETIME DEFAULT NULL,
  end_date DATETIME DEFAULT NULL,
  creation_date TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  status TINYINT(4) DEFAULT 0 COMMENT '1-> in lavorazione, 2->lavorato, 3-> pubblicato',
  live TINYINT(4) NOT NULL DEFAULT 1 COMMENT '1 se l''evento e'' un live',
  online TINYINT(1) NOT NULL DEFAULT 0,
  used_app VARCHAR(50) DEFAULT NULL,
  last_modified TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  special_event VARCHAR(50) DEFAULT NULL COMMENT 'EURO2016',
  subtitle TINYINT(1) DEFAULT 0 COMMENT '1-0 se la trasmissione prevede i sottotitoli',
  subtitle_company INT(11) DEFAULT -1 COMMENT 'azienda che gestisce i sottotitoli',
  group_id INT(11) NOT NULL DEFAULT -1 COMMENT 'id del gruppo di appartenza',
  creator INT(11) DEFAULT -1 COMMENT 'id dell''utente che ha creato l''evento',
  last_modifier INT(11) DEFAULT -1 COMMENT 'utente che ha modificato l''evento',
  hl TINYINT(1) DEFAULT 0,
  is_backup TINYINT(1) NOT NULL DEFAULT 0,
  rec_from DATETIME DEFAULT NULL,
  rec_to DATETIME DEFAULT NULL,
  rec_status VARCHAR(4) DEFAULT NULL,
  rec_id VARCHAR(50) DEFAULT NULL COMMENT 'id del registrato',
  geoprotection TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  exclusive_role_lock VARCHAR(50) DEFAULT NULL,
  make_ads TINYINT(1) NOT NULL DEFAULT 0,
  forceRecordedButton TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  cliptype_selection VARCHAR(50) DEFAULT NULL,
  drm_flag TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'flag che indica se applicare o meno il drm',
  drm_category_error TINYINT(1) UNSIGNED ZEROFILL NOT NULL DEFAULT 0 COMMENT 'se true è presente un errore tra categoria e drm',
  multiaudio TINYINT(1) UNSIGNED DEFAULT 0 COMMENT 'true se prevede multiaudio',
  multiaudioError TINYINT(1) UNSIGNED DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 1350119,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'elenco delle trasmisioni da lavorare';

--
-- Create foreign key
--
ALTER TABLE bm_events 
  ADD CONSTRAINT FK_bm_events_services_id FOREIGN KEY (service_id)
    REFERENCES services(id) ON DELETE NO ACTION ON UPDATE NO ACTION;

DELIMITER $$

--
-- Create procedure `bm_insertUpdateEvent`
--
CREATE PROCEDURE bm_insertUpdateEvent(IN pEventId BIGINT(20), IN pCategoryId BIGINT(20), IN pServiceId INT(10), IN pStartDate DATETIME, IN pEndDate DATETIME, IN pName TEXT, IN pDEscription TEXT, IN pStatus TINYINT(4), IN pIsLive TINYINT(1), IN pOnLine TINYINT(1), IN pSpecialEvent VARCHAR(50),IN pUserId int(11),IN pGroupId INT(11))
BEGIN
  DECLARE bEvent TINYINT(1) DEFAULT 0;
SELECT
  IF(id > 0, 1, 0) INTO bEvent
FROM bm_events
WHERE id = pEventId;

  IF bEvent = 0 THEN
   IF pEventId > 0 AND pEventId <> "" AND pEventId IS NOT NULL THEN
INSERT INTO bm_events (id, service_id, mediapolis_category_id, name, description, start_date, end_date, creation_date, status, live, online, used_app, last_modified, special_event, group_id, last_modifier, creator)
  VALUES (pEventId, pServiceId, pCategoryId, pName, pDEscription, pStartDate, pEndDate, NOW(), 0, pIsLive, pOnLine, "", NOW(), pSpecialEvent, pGroupId, pUserId, pUserId);
ELSE
INSERT INTO bm_events (service_id, mediapolis_category_id, name, description, start_date, end_date, creation_date, status, live, online, used_app, last_modified, special_event, group_id, last_modifier, creator)
  VALUES (pServiceId, pCategoryId, pName, pDEscription, pStartDate, pEndDate, NOW(), 0, pIsLive, pOnLine, "", NOW(), pSpecialEvent, pGroupId, pUserId, pUserId);
END IF;
ELSE
UPDATE bm_events
SET service_id = pServiceId,
    mediapolis_category_id = pCategoryId,
    name = pName,
    description = pDEscription,
    start_date = pStartDate,
    end_date = pEndDate,
    last_modified = NOW(),
    special_event = pSpecialEvent,
    last_modifier = pUserId
WHERE id = pEventId;
END IF;
END
$$

DELIMITER ;

--
-- Create table `bm_channels`
--
CREATE TABLE bm_channels (
  service_id INT(10) UNSIGNED NOT NULL,
  description VARCHAR(255) DEFAULT NULL,
  palinsesto_url TEXT DEFAULT NULL,
  mediapolis_category INT(11) NOT NULL DEFAULT -1 COMMENT 'Default mediapolis category',
  `order` INT(10) UNSIGNED DEFAULT 0,
  epgname VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (service_id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'elenco dei canali configurati';

--
-- Create foreign key
--
ALTER TABLE bm_channels 
  ADD CONSTRAINT FK_bm_channels_services_id FOREIGN KEY (service_id)
    REFERENCES services(id);

--
-- Create table `bm_applications`
--
CREATE TABLE bm_applications (
  id INT(11) NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  code VARCHAR(50) NOT NULL,
  descrizione VARCHAR(255) DEFAULT NULL,
  active TINYINT(1) NOT NULL DEFAULT 0,
  showImage TINYINT(1) DEFAULT 0,
  has_hl_live TINYINT(1) DEFAULT 0 COMMENT 'true se prevende gli hl su live',
  summary TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'abilita il summary sull''applicazione',
  push_notification TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'modulo di invio notifica',
  use_tag_video_for_screenshot TINYINT(1) DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 9,
AVG_ROW_LENGTH = 3276,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'elenco delle applicazioni';

--
-- Create table `bm_specialEvents`
--
CREATE TABLE bm_specialEvents (
  id INT(11) NOT NULL AUTO_INCREMENT,
  description VARCHAR(255) DEFAULT NULL,
  code VARCHAR(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  application_id INT(11) NOT NULL,
  bumper TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'stabilisce se l''evento prevede il bumper',
  showComboTime TINYINT(1) NOT NULL DEFAULT 0,
  support_service_alias VARCHAR(255) DEFAULT '',
  time_part_in_hl TINYINT(4) DEFAULT 0 COMMENT 'abilita l''invio del cambo categoria nell''xml degli HL',
  module VARCHAR(255) DEFAULT NULL,
  is_category_required TINYINT(4) DEFAULT 0 COMMENT 'indica che e'' obbligatorio selezionare una categoria nell''editor',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 13,
AVG_ROW_LENGTH = 1638,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `module` on table `bm_specialEvents`
--
ALTER TABLE bm_specialEvents 
  ADD UNIQUE INDEX module(module);

--
-- Create foreign key
--
ALTER TABLE bm_specialEvents 
  ADD CONSTRAINT FK_bm_specialEvents_bm_applications_id FOREIGN KEY (application_id)
    REFERENCES bm_applications(id);

--
-- Create view `bm_view_special_events`
--
CREATE 
VIEW bm_view_special_events
AS
SELECT
  `bm_specialEvents`.`id` AS `id`,
  `bm_specialEvents`.`description` AS `description`,
  `bm_specialEvents`.`code` AS `code`,
  `bm_applications`.`name` AS `application_name`,
  `bm_applications`.`code` AS `application_code`,
  `bm_specialEvents`.`module` AS `module`,
  `bm_specialEvents`.`bumper` AS `bumper`,
  `bm_specialEvents`.`showComboTime` AS `showComboTime`,
  `bm_specialEvents`.`support_service_alias` AS `support_service_alias`,
  `bm_specialEvents`.`time_part_in_hl` AS `time_part_in_hl`,
  `services_route_table`.`business_ip` AS `business_ip`,
  `bm_specialEvents`.`is_category_required` AS `is_category_required`
FROM (((`bm_specialEvents`
  JOIN `bm_applications`
    ON ((`bm_specialEvents`.`application_id` = `bm_applications`.`id`)))
  JOIN `services_route_table`)
  JOIN `services`
    ON (((`services`.`services_route_table_id` = `services_route_table`.`id`)
    AND (`services`.`alias` = `bm_specialEvents`.`support_service_alias`))));

--
-- Create table `bm_groups`
--
CREATE TABLE bm_groups (
  id INT(11) NOT NULL AUTO_INCREMENT COMMENT 'id del gruppo',
  name TEXT DEFAULT NULL COMMENT 'nome del gruppo',
  description TEXT DEFAULT NULL COMMENT 'descrizione',
  code VARCHAR(50) DEFAULT NULL,
  default_page_after_login VARCHAR(500) DEFAULT 'palinsesto.htm',
  visible_day_in_palinsesto INT(10) DEFAULT 7,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 29,
AVG_ROW_LENGTH = 963,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `bm_schedule_palinsesto`
--
CREATE TABLE bm_schedule_palinsesto (
  id INT(11) NOT NULL AUTO_INCREMENT,
  channel_id INT(10) UNSIGNED DEFAULT NULL,
  group_id INT(11) DEFAULT NULL,
  schedule TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  forceSend TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  schedule_time VARCHAR(500) DEFAULT NULL,
  richiesta_GG_pal INT(11) NOT NULL DEFAULT 1,
  richiesta_GG_New_pal INT(11) NOT NULL DEFAULT -1,
  data_file_inviato TIMESTAMP NULL DEFAULT NULL,
  data_file_inviato_forced DATETIME DEFAULT NULL,
  numero_gg_Palinsesto INT(2) NOT NULL DEFAULT -7 COMMENT 'arco temporale in cui x esempio una puntata di Peppa Pig su un canale viene trasmesso',
  ftp_watchFolder TEXT DEFAULT NULL,
  ftp_xml TEXT DEFAULT NULL,
  generate_palinsesto_entry TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'se true genera una entry nel palinsesto',
  generate_smooth_streaming TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  not_autopublish TINYINT(1) UNSIGNED DEFAULT 0 COMMENT 'se 1=> non pubblica in automatico su mediapolis le trasmissioni acquisite se 0=>pubblica automaticamente',
  is_shared TINYINT(4) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'se 1 rappresenta un watchfolder condiviso tra canali',
  automatic TINYINT(1) UNSIGNED DEFAULT 0 COMMENT 'aggiorna quando si rivelano differenze nel palinsesto',
  last_service_hash VARCHAR(1000) DEFAULT NULL COMMENT 'hash del file json relativo al servizio',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 29,
AVG_ROW_LENGTH = 1365,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `UK_bm_schedule_palinsesto_channel_id` on table `bm_schedule_palinsesto`
--
ALTER TABLE bm_schedule_palinsesto 
  ADD INDEX UK_bm_schedule_palinsesto_channel_id(channel_id);

--
-- Create foreign key
--
ALTER TABLE bm_schedule_palinsesto 
  ADD CONSTRAINT FK_bm_schedule_palinsesto_group_id FOREIGN KEY (group_id)
    REFERENCES bm_groups(id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create foreign key
--
ALTER TABLE bm_schedule_palinsesto 
  ADD CONSTRAINT FK_bm_schedule_palinsesto_services_id FOREIGN KEY (channel_id)
    REFERENCES services(id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create view `bm_view_schedule_palinsesto`
--
CREATE 
VIEW bm_view_schedule_palinsesto
AS
SELECT
  `bm_schedule_palinsesto`.`id` AS `id`,
  `bm_schedule_palinsesto`.`channel_id` AS `channel_id`,
  `bm_schedule_palinsesto`.`group_id` AS `group_id`,
  `bm_schedule_palinsesto`.`schedule` AS `schedule`,
  `bm_schedule_palinsesto`.`richiesta_GG_pal` AS `richiesta_GG_pal`,
  `bm_schedule_palinsesto`.`richiesta_GG_New_pal` AS `richiesta_GG_New_pal`,
  `bm_schedule_palinsesto`.`data_file_inviato` AS `data_file_inviato`,
  `bm_schedule_palinsesto`.`numero_gg_Palinsesto` AS `numero_gg_Palinsesto`,
  `bm_schedule_palinsesto`.`schedule_time` AS `schedule_time`,
  `bm_exraisat_channels`.`channel_name` AS `channel_code`,
  `services`.`channel_code` AS `alias`,
  `bm_exraisat_channels`.`channel_code` AS `raitv_channel_code`,
  `services`.`channel_code` AS `videocut_channel_code`,
  `bm_schedule_palinsesto`.`forceSend` AS `forceSend`,
  `bm_schedule_palinsesto`.`ftp_watchFolder` AS `ftp_watchFolder`,
  `bm_schedule_palinsesto`.`ftp_xml` AS `ftp_xml`,
  `bm_schedule_palinsesto`.`generate_palinsesto_entry` AS `generate_palinsesto_entry`,
  `bm_schedule_palinsesto`.`not_autopublish` AS `not_autopublish`,
  `bm_schedule_palinsesto`.`is_shared` AS `is_shared`,
  `bm_schedule_palinsesto`.`automatic` AS `automatic`
FROM ((`bm_schedule_palinsesto`
  LEFT JOIN `bm_exraisat_channels`
    ON ((`bm_schedule_palinsesto`.`channel_id` = `bm_exraisat_channels`.`service_id`)))
  JOIN `services`
    ON ((`bm_schedule_palinsesto`.`channel_id` = `services`.`id`)));

--
-- Create table `bm_palinsesto_ricevuto`
--
CREATE TABLE bm_palinsesto_ricevuto (
  id INT(11) NOT NULL AUTO_INCREMENT,
  data_ricevuto TIMESTAMP NULL DEFAULT NULL,
  data_inviato TIMESTAMP NULL DEFAULT NULL,
  id_messa_in_onda VARCHAR(45) DEFAULT NULL,
  id_bm_schedule_palinsesto INT(11) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 32670,
AVG_ROW_LENGTH = 49,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `fk_bm_schedule_palinsesto_idx` on table `bm_palinsesto_ricevuto`
--
ALTER TABLE bm_palinsesto_ricevuto 
  ADD UNIQUE INDEX fk_bm_schedule_palinsesto_idx(id_bm_schedule_palinsesto, id_messa_in_onda);

--
-- Create foreign key
--
ALTER TABLE bm_palinsesto_ricevuto 
  ADD CONSTRAINT fk_bm_schedule_palinsesto FOREIGN KEY (id_bm_schedule_palinsesto)
    REFERENCES bm_schedule_palinsesto(id) ON DELETE NO ACTION ON UPDATE NO ACTION;

DELIMITER $$

--
-- Create function `getDataRicevuto`
--
CREATE FUNCTION getDataRicevuto(pMessaInOnda VARCHAR(255),
                                            pChannelId   INT(11),
                                            pGroupId     INT(11)
                                            )
  RETURNS DATETIME
  DETERMINISTIC
BEGIN
  DECLARE dataRecived DATETIME DEFAULT NULL;

SELECT
  a.data_ricevuto INTO dataRecived
FROM bm_palinsesto_ricevuto a
  INNER JOIN bm_schedule_palinsesto b
    ON a.id_bm_schedule_palinsesto = b.id
WHERE a.id_messa_in_onda = pMessaInOnda
AND b.channel_id = pChannelId
AND b.group_id = pGroupId;
  RETURN dataRecived;
END
$$

--
-- Create function `getDataInviato`
--
CREATE FUNCTION getDataInviato(pMessaInOnda VARCHAR(255),
                                            pChannelId   INT(11),
                                            pGroupId     INT(11)
                                            )
  RETURNS DATETIME
  DETERMINISTIC
BEGIN
  DECLARE dataRecived DATETIME DEFAULT NULL;

SELECT
  a.data_inviato INTO dataRecived
FROM bm_palinsesto_ricevuto a
  INNER JOIN bm_schedule_palinsesto b
    ON a.id_bm_schedule_palinsesto = b.id
WHERE a.id_messa_in_onda = pMessaInOnda
AND b.channel_id = pChannelId
AND b.group_id = pGroupId;
  RETURN dataRecived;
END
$$

DELIMITER ;

--
-- Create table `bm_palinsesti`
--
CREATE TABLE bm_palinsesti (
  id INT(11) NOT NULL AUTO_INCREMENT,
  channel_id INT(10) UNSIGNED NOT NULL COMMENT 'id del canale',
  evento_id VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'id dell''evento',
  messa_in_onda_id VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci DEFAULT NULL,
  programma_id VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  feed_id VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  channel_reference VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'nome del canale letto nell''html',
  titolo TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'titolo della trasmissione',
  descrizione TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'descrizione dell''evento',
  ora TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'ora di inizio della trasmissione',
  fine TIMESTAMP NULL DEFAULT NULL COMMENT 'ora di fine della trasmissione',
  duration VARCHAR(255) DEFAULT NULL,
  datadisponibilita VARCHAR(50) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'Data inizio disponibilità',
  datafinedisponibilita VARCHAR(50) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'data fine disponibilità',
  image TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'link relativo all''immagine',
  web TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'link al sito web',
  mediapoliscategory VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'id della categoria di mediapolis',
  diritti_1 TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  diritti_2 TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  diritti_3 TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  diritti_4 TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  diritti_5 TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  fascia_oraria VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'fascia oraria della trasmissione',
  fascia_oraria_url TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'url relativo alla fascia oraria',
  palinsesto_url TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'url relativo al palinsesto',
  lavorabile TINYINT(1) DEFAULT 1,
  is_online TINYINT(1) DEFAULT 0 COMMENT '1 se l''evento e'' online',
  status TINYINT(4) DEFAULT 0 COMMENT 'status di lavorazione dell''evento',
  is_live TINYINT(1) DEFAULT NULL COMMENT '1 => se l''evento è live',
  used_app VARCHAR(50) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  special_event VARCHAR(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'EURO2016 => europei',
  make_hl TINYINT(1) DEFAULT 0,
  subtitle TINYINT(1) DEFAULT 0 COMMENT '1-0 se la trasmissione prevede i sottotitoli',
  subtitle_company INT(11) DEFAULT -1 COMMENT 'azienda che gestisce i sottotitoli',
  group_id INT(11) NOT NULL DEFAULT -1,
  creator INT(11) NOT NULL DEFAULT -1 COMMENT 'utente che ha creato il record',
  last_modifier INT(11) NOT NULL DEFAULT -1 COMMENT 'ultimo utente che ha modificato il record',
  media_url TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT 'url del midia playabile',
  is_rce TINYINT(1) NOT NULL DEFAULT 0,
  cms_mediapolis_url TEXT DEFAULT NULL COMMENT 'mediapolis url proveniente dai cms',
  is_backup TINYINT(1) NOT NULL DEFAULT 0,
  epg_tel_filename VARCHAR(500) DEFAULT NULL COMMENT 'nome del file che verrà utilizzato nell''ep di cubovision',
  epg_tel_mediapolis_url MEDIUMTEXT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'url mediapolis per cubovision',
  epg_request_filename_status VARCHAR(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N' COMMENT 'NULL non inviata N non inviati W in attesa di risposta Y inviati E error',
  rec_from DATETIME DEFAULT NULL COMMENT 'Data inizio scelta per la registrazione',
  rec_to DATETIME DEFAULT NULL COMMENT 'data di fine scelta per la registrazione',
  rec_status VARCHAR(4) DEFAULT NULL,
  rec_id VARCHAR(50) DEFAULT NULL COMMENT 'id del registrato',
  exclusive_role_lock VARCHAR(255) DEFAULT NULL COMMENT 'id del ruolo che ha la gestione esclusiva del record',
  make_ads TINYINT(1) NOT NULL DEFAULT 0,
  forceRecordedButton TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  cliptype_selection VARCHAR(50) DEFAULT NULL,
  epg_medipolis_url_changed TINYINT(1) UNSIGNED DEFAULT 0,
  is_from_archive TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'true se la trasmissione prevede lavorazione da archivio',
  drm_flag TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'flag se presente o meno drm ha valore 0 o 1 e corrisponde a drm in html',
  drm_category_error TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'se true è presente un errore tra categoria e flag drm',
  archiveCode VARCHAR(255) DEFAULT NULL COMMENT 'codice dell''archivio scelto per l''evento di palinsesto',
  originaFilename VARCHAR(5000) DEFAULT NULL COMMENT 'nome originale del filename acquisito dal wotch folder',
  editable TINYINT(1) UNSIGNED DEFAULT 1,
  multiaudio TINYINT(1) UNSIGNED DEFAULT 0,
  multiaudioError TINYINT(1) UNSIGNED DEFAULT 0,
  PRIMARY KEY (id),
  UNIQUE INDEX UK_bm_palinsesti_id(id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 1350118,
AVG_ROW_LENGTH = 722,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `IX_bm_palinsesti_channel_id` on table `bm_palinsesti`
--
ALTER TABLE bm_palinsesti 
  ADD INDEX IX_bm_palinsesti_channel_id(channel_id);

--
-- Create index `IX_bm_palinsesti_group_id` on table `bm_palinsesti`
--
ALTER TABLE bm_palinsesti 
  ADD INDEX IX_bm_palinsesti_group_id(group_id);

--
-- Create index `IX_bm_palinsesti_messa_in_onda_id` on table `bm_palinsesti`
--
ALTER TABLE bm_palinsesti 
  ADD INDEX IX_bm_palinsesti_messa_in_onda_id(messa_in_onda_id);

--
-- Create index `IX_bm_palinsesti_ora` on table `bm_palinsesti`
--
ALTER TABLE bm_palinsesti 
  ADD INDEX IX_bm_palinsesti_ora(ora);

--
-- Create foreign key
--
ALTER TABLE bm_palinsesti 
  ADD CONSTRAINT FK_bm_palinsesti_bm_groups_id FOREIGN KEY (group_id)
    REFERENCES bm_groups(id) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create foreign key
--
ALTER TABLE bm_palinsesti 
  ADD CONSTRAINT FK_bm_palinsesti_services_id FOREIGN KEY (channel_id)
    REFERENCES services(id) ON DELETE CASCADE ON UPDATE CASCADE;

DELIMITER $$

--
-- Create function `getTrasmissionEnd`
--
CREATE FUNCTION getTrasmissionEnd(pChannelId INT(11), pGroupId INT(11), pOra DATETIME)
  RETURNS DATETIME
BEGIN
DECLARE pEnd DATETIME DEFAULT NULL;

SELECT
  ora INTO pEnd
FROM bm_palinsesti
WHERE channel_id = pChannelId
AND group_id = pGroupId
AND ora > pOra
ORDER BY ora
LIMIT
1;

RETURN pEnd;
END
$$

--
-- Create procedure `bm_insertUpdatePalinsestiNoOverWrite`
--
CREATE PROCEDURE bm_insertUpdatePalinsestiNoOverWrite(IN pId                    INT(11),
                                                           IN pChannelId             INT(11),
                                                           IN pEventoId              VARCHAR(255),
                                                           IN pMessaInOndaId         VARCHAR(255),
                                                           IN pProgrammaId           VARCHAR(255),
                                                           IN pTitolo                TEXT,
                                                           IN pDescrizione           TEXT,
                                                           IN pOra                   TIMESTAMP,
                                                           IN pDataDisponibilita     VARCHAR(50),
                                                           IN pDataFinedisponibilita VARCHAR(50),
                                                           IN pImage                 TEXT,
                                                           IN pWeb                   TEXT,
                                                           IN pMediapolisCategory    VARCHAR(255),
                                                           IN pDiritti1              TEXT,
                                                           IN pDiritti2              TEXT,
                                                           IN pDiritti3              TEXT,
                                                           IN pDiritti4              TEXT,
                                                           IN pDiritti5              TEXT,
                                                           IN pLavorabile            TINYINT(1),
                                                           IN pStatus                TINYINT(4),
                                                           IN pIsOnline              TINYINT(1),
                                                           IN pIsLive                TINYINT(1),
                                                           IN pFasciaOraria          VARCHAR(255),
                                                           IN pFasciaOrariaUrl       TEXT,
                                                           IN pPalinsestoUrl         TEXT,
                                                           IN pSpecialEvents         VARCHAR(50),
                                                           IN pGroupId               INT(11),
                                                           IN pCreator               INT(11),
                                                           IN pModifier              INT(11),
                                                           IN pFeedId                VARCHAR(255),
                                                           IN pChannelReference      VARCHAR(255),
                                                           IN pEndTrasmission        TIMESTAMP
                                                           )
BEGIN
  DECLARE _id INT(11) DEFAULT -1;

SELECT
  id INTO _id
FROM bm_palinsesti
WHERE id = pId
LIMIT
1;

  IF _id > 0 THEN

UPDATE bm_palinsesti
SET fine = pEndTrasmission,
    titolo = pTitolo,
    descrizione = pDescrizione,
    datadisponibilita = pDataDisponibilita,
    datafinedisponibilita = pDataFinedisponibilita,
    ora = pOra,
    mediapoliscategory = pMediapolisCategory,
    lavorabile = pLavorabile,
    fascia_oraria = pFasciaOraria,
    fascia_oraria_url = pFasciaOrariaUrl,
    palinsesto_url = pPalinsestoUrl,
    messa_in_onda_id = pMessaInOndaId,
    programma_id = pProgrammaId,
    evento_id = pEventoId,
    diritti_1 = pDiritti1,
    diritti_2 = pDiritti2,
    diritti_3 = pDiritti3,
    diritti_4 = pDiritti4,
    diritti_5 = pDiritti5,
    image = pImage,
    web = pWeb,
    special_event = pSpecialEvents,
    last_modifier = pModifier,
    feed_id = pFeedId,
    channel_reference = pChannelReference
WHERE id = _id
AND status <= 0;

ELSE

INSERT INTO bm_palinsesti (id, fine, channel_id, evento_id, messa_in_onda_id, programma_id, titolo, descrizione, ora, datadisponibilita, datafinedisponibilita, image, web, mediapoliscategory, diritti_1, diritti_2, diritti_3, diritti_4, diritti_5, lavorabile, `status`, is_online, is_live, fascia_oraria, fascia_oraria_url, palinsesto_url, special_event, last_modifier, creator, group_id, feed_id, channel_reference)
  VALUES (IF(pId > 0, pId, NULL), pEndTrasmission, pChannelId, pEventoId, pMessaInOndaId, pProgrammaId, pTitolo, pDescrizione, pOra, pDataDisponibilita, pDataFinedisponibilita, pImage, pWeb, pMediapolisCategory, pDiritti1, pDiritti2, pDiritti3, pDiritti4, pDiritti5, pLavorabile, pStatus, pIsOnline, pIsLive, pFasciaOraria, pFasciaOrariaUrl, pPalinsestoUrl, pSpecialEvents, pModifier, pCreator, pGroupId, pFeedId, pChannelReference);
END IF;
END
$$

--
-- Create procedure `bm_insertUpdatePalinsesti`
--
CREATE PROCEDURE bm_insertUpdatePalinsesti(IN pId INT(11), IN pChannelId INT(11), IN pEventoId VARCHAR(255), IN pMessaInOndaId VARCHAR(255), IN pProgrammaId VARCHAR(255), IN pTitolo TEXT, IN pDescrizione TEXT, IN pOra TIMESTAMP, IN pDataDisponibilita VARCHAR(50), IN pDataFinedisponibilita VARCHAR(50), IN pImage TEXT, IN pWeb TEXT, IN pMediapolisCategory VARCHAR(255), IN pDiritti1 TEXT, IN pDiritti2 TEXT, IN pDiritti3 TEXT, IN pDiritti4 TEXT, IN pDiritti5 TEXT, IN pLavorabile TINYINT(1), IN pStatus TINYINT(4), IN pIsOnline TINYINT(1), IN pIsLive TINYINT(1), IN pFasciaOraria VARCHAR(255), IN pFasciaOrariaUrl TEXT, IN pPalinsestoUrl TEXT, IN pSpecialEvents VARCHAR(50), IN pGroupId INT(11), IN pCreator INT(11), IN pModifier INT(11), IN pFeedId VARCHAR(255), IN pChannelReference VARCHAR(255), IN pEndTrasmission TIMESTAMP)
BEGIN
  DECLARE _id INT(11) DEFAULT -1;

SELECT
  id INTO _id
FROM bm_palinsesti
WHERE id = pId
LIMIT
1;

  IF _id <= 0 THEN
SELECT
  id INTO _id
FROM bm_palinsesti
WHERE evento_id COLLATE utf8mb4_general_ci = pEventoId COLLATE utf8mb4_general_ci <> NULL
AND evento_id COLLATE utf8mb4_general_ci <> ""
AND evento_id COLLATE utf8mb4_general_ci = pEventoId COLLATE utf8mb4_general_ci
LIMIT
1;

END IF;

  IF _id > 0 THEN

UPDATE bm_palinsesti
SET titolo = pTitolo,
    descrizione = pDescrizione,
    datadisponibilita = pDataDisponibilita,
    datafinedisponibilita = pDataFinedisponibilita,
    ora = pOra,
    fine = pEndTrasmission,
    mediapoliscategory = pMediapolisCategory,
    lavorabile = pLavorabile,
    fascia_oraria = pFasciaOraria,
    fascia_oraria_url = pFasciaOrariaUrl,
    palinsesto_url = pPalinsestoUrl,
    messa_in_onda_id = pMessaInOndaId,
    programma_id = pProgrammaId,
    evento_id = pEventoId,
    diritti_1 = pDiritti1,
    diritti_2 = pDiritti2,
    diritti_3 = pDiritti3,
    diritti_4 = pDiritti4,
    diritti_5 = pDiritti5,
    image = pImage,
    web = pWeb,
    special_event = pSpecialEvents,
    last_modifier = pModifier,
    feed_id = pFeedId,
    channel_reference = pChannelReference
WHERE id = _id;
ELSE

INSERT INTO bm_palinsesti (id, fine, channel_id, evento_id, messa_in_onda_id, programma_id, titolo, descrizione, ora, datadisponibilita, datafinedisponibilita, image, web, mediapoliscategory, diritti_1, diritti_2, diritti_3, diritti_4, diritti_5, lavorabile, `status`, is_online, is_live, fascia_oraria, fascia_oraria_url, palinsesto_url, special_event, last_modifier, creator, group_id, feed_id, channel_reference)
  VALUES (IF(pId > 0, pId, NULL), pEndTrasmission, pChannelId, pEventoId, pMessaInOndaId, pProgrammaId, pTitolo, pDescrizione, pOra, pDataDisponibilita, pDataFinedisponibilita, pImage, pWeb, pMediapolisCategory, pDiritti1, pDiritti2, pDiritti3, pDiritti4, pDiritti5, pLavorabile, pStatus, pIsOnline, pIsLive, pFasciaOraria, pFasciaOrariaUrl, pPalinsestoUrl, pSpecialEvents, pModifier, pCreator, pGroupId, pFeedId, pChannelReference);
END IF;
END
$$

DELIMITER ;

--
-- Create view `view_filename_wf_for_test`
--
CREATE 
VIEW view_filename_wf_for_test
AS
SELECT
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`fine` AS `fine`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `epg_tel_mediapolis_url`,
  `bm_palinsesti`.`epg_request_filename_status` AS `epg_request_filename_status`,
  `bm_schedule_palinsesto`.`schedule` AS `schedule`,
  `bm_schedule_palinsesto`.`ftp_watchFolder` AS `ftp_watchFolder`,
  `bm_schedule_palinsesto`.`ftp_xml` AS `ftp_xml`,
  `bm_schedule_palinsesto`.`generate_palinsesto_entry` AS `generate_palinsesto_entry`,
  `bm_exraisat_channels`.`channel_code` AS `channel_code`,
  `bm_exraisat_channels`.`channel_name` AS `channel_name`,
  CONCAT(`bm_exraisat_channels`.`channel_code`, '.', CONVERT(`bm_palinsesti`.`messa_in_onda_id` USING utf8mb4), '.00.mp4') AS `filename`,
  `bm_palinsesto_ricevuto`.`data_inviato` AS `data_inviato`,
  `bm_palinsesto_ricevuto`.`data_ricevuto` AS `data_ricevuto`
FROM (((`bm_palinsesto_ricevuto`
  JOIN `bm_schedule_palinsesto`
    ON ((`bm_palinsesto_ricevuto`.`id_bm_schedule_palinsesto` = `bm_schedule_palinsesto`.`id`)))
  JOIN `bm_palinsesti`
    ON (((`bm_palinsesti`.`channel_id` = `bm_schedule_palinsesto`.`channel_id`)
    AND (`bm_palinsesti`.`group_id` = `bm_schedule_palinsesto`.`group_id`)
    AND ((CONVERT(`bm_palinsesti`.`messa_in_onda_id` USING utf8) COLLATE utf8_general_ci) = (CONVERT(`bm_palinsesto_ricevuto`.`id_messa_in_onda` USING utf8) COLLATE utf8_general_ci)))))
  JOIN `bm_exraisat_channels`
    ON ((`bm_exraisat_channels`.`service_id` = `bm_schedule_palinsesto`.`channel_id`)));

--
-- Create view `bm_view_palinsesto_xmlrequest`
--
CREATE 
VIEW bm_view_palinsesto_xmlrequest
AS
SELECT
  `a`.`id` AS `ID_PALINSESTO_SCHEDULATO`,
  `b`.`id` AS `ID_PAL`,
  `b`.`ora` AS `ora`,
  `services`.`channel_code` AS `alias`,
  `b`.`group_id` AS `group_id`,
  `b`.`channel_id` AS `channel_id`,
  `b`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `a`.`richiesta_GG_pal` AS `richiesta_GG_pal`,
  `a`.`richiesta_GG_New_pal` AS `richiesta_GG_New_pal`,
  (SELECT
      `c`.`data_inviato`
    FROM `bm_palinsesto_ricevuto` `c`
    WHERE ((`c`.`id_bm_schedule_palinsesto` = `a`.`id`)
    AND (CONVERT(`b`.`messa_in_onda_id` USING utf8) = CONVERT(`c`.`id_messa_in_onda` USING utf8))) LIMIT 1) AS `DATA_INVIATO`,
  (SELECT
      `c`.`data_ricevuto`
    FROM `bm_palinsesto_ricevuto` `c`
    WHERE ((`c`.`id_bm_schedule_palinsesto` = `a`.`id`)
    AND (CONVERT(`b`.`messa_in_onda_id` USING utf8) = CONVERT(`c`.`id_messa_in_onda` USING utf8))) LIMIT 1) AS `DATA_RICEVUTO`
FROM ((`bm_schedule_palinsesto` `a`
  JOIN `bm_palinsesti` `b`
    ON (((`b`.`group_id` = `a`.`group_id`)
    AND (`a`.`channel_id` = `b`.`channel_id`))))
  JOIN `services`
    ON ((`a`.`channel_id` = `services`.`id`)))
WHERE ((`b`.`messa_in_onda_id` <> '')
AND (`b`.`messa_in_onda_id` IS NOT NULL)
AND (`a`.`ftp_xml` IS NOT NULL)
AND (`a`.`ftp_xml` <> '')
AND (`a`.`ftp_watchFolder` IS NOT NULL)
AND (`a`.`ftp_watchFolder` <> '')
AND (`a`.`schedule` = 1)
AND (`b`.`lavorabile` = 1)
AND (`b`.`status` = 0)
AND (`b`.`drm_category_error` = 0)
AND (`b`.`editable` = 1))
ORDER BY `b`.`messa_in_onda_id`;

--
-- Create view `bm_view_events_for_mails`
--
CREATE 
VIEW bm_view_events_for_mails
AS
SELECT
  `bm_palinsesti`.`channel_id` AS `service_id`,
  `bm_palinsesti`.`id` AS `event_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`ora` AS `inizio`,
  `bm_palinsesti`.`fine` AS `fine`,
  'palinsesti' AS `sorgente`,
  `bm_palinsesti`.`drm_flag` AS `drm_flag`,
  `bm_palinsesti`.`drm_category_error` AS `drm_category_error`
FROM `bm_palinsesti` UNION SELECT
  `bm_events`.`service_id` AS `service_id`,
  `bm_events`.`id` AS `event_id`,
  `bm_events`.`name` AS `titolo`,
  `bm_events`.`start_date` AS `inizio`,
  `bm_events`.`end_date` AS `fine`,
  'trasmissioni_extra' AS `sorgente`,
  `bm_events`.`drm_flag` AS `drm_flag`,
  `bm_events`.`drm_category_error` AS `drm_category_error`
FROM `bm_events`;

--
-- Create table `bm_channels_users_group`
--
CREATE TABLE bm_channels_users_group (
  channel_id INT(10) UNSIGNED NOT NULL COMMENT 'id del canale',
  group_id INT(11) NOT NULL,
  default_category INT(11) UNSIGNED NOT NULL,
  `order` INT(10) UNSIGNED NOT NULL DEFAULT 0,
  scheduling_type VARCHAR(50) DEFAULT NULL COMMENT 'tipo di esecuzione CUSTOM_FOR_DAY,FOR_MONTH',
  scheduler_hour VARCHAR(255) DEFAULT NULL COMMENT 'ora di esecuzione della schedulazione hh:mm',
  scheduler_lasttime DATETIME DEFAULT NULL COMMENT 'data ultima schedulazione',
  automatic_update TINYINT(1) NOT NULL DEFAULT 0 COMMENT '1 se necessita di update automatico',
  execution_status VARCHAR(50) DEFAULT NULL COMMENT 'OK oppure Errore oppure NULL',
  epg TINYINT(1) NOT NULL DEFAULT 0,
  epg_cubo TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (channel_id, group_id, default_category)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 204,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `FK_bm_channels_users_group_bm_mediapolis_categories_category_id` on table `bm_channels_users_group`
--
ALTER TABLE bm_channels_users_group 
  ADD INDEX FK_bm_channels_users_group_bm_mediapolis_categories_category_id(default_category);

--
-- Create index `IX_bm_channels_users_group_channel_id` on table `bm_channels_users_group`
--
ALTER TABLE bm_channels_users_group 
  ADD INDEX IX_bm_channels_users_group_channel_id(channel_id);

--
-- Create foreign key
--
ALTER TABLE bm_channels_users_group 
  ADD CONSTRAINT FK_bm_channels_users_group_bm_channels_service_id FOREIGN KEY (channel_id)
    REFERENCES bm_channels(service_id);

--
-- Create foreign key
--
ALTER TABLE bm_channels_users_group 
  ADD CONSTRAINT FK_bm_channels_users_group_bm_groups_id FOREIGN KEY (group_id)
    REFERENCES bm_groups(id);

DELIMITER $$

--
-- Create procedure `bm_insertUpdateChannel`
--
CREATE PROCEDURE bm_insertUpdateChannel(IN pServiceId             INT(10),
                                                       IN pDescription           TEXT,
                                                       IN pPalinsestoUrl         TEXT,
                                                       IN pOrdineVisualizzazione INT(10),
                                                       IN pDefaultMediapolis     INT(11),
                                                       IN pUserGroup             INT(11)
                                                       )
BEGIN
  
  declare isMpChanged tinyint(1) default 0;
  declare oldCategory int(11) default -1;


INSERT INTO bm_channels (service_id, description, palinsesto_url, mediapolis_category)
  VALUES (pServiceId, pDescription, pPalinsestoUrl, pDefaultMediapolis)
ON DUPLICATE KEY UPDATE
description = pDescription,
palinsesto_url = pPalinsestoUrl,
mediapolis_category = pDefaultMediapolis,
`order` = pOrdineVisualizzazione;


INSERT INTO bm_channels_users_group (channel_id, group_id, default_category, `order`)
  VALUES (pServiceId, pUserGroup, pDefaultMediapolis, pOrdineVisualizzazione)
ON DUPLICATE KEY UPDATE
default_category = pDefaultMediapolis;





END
$$

DELIMITER ;

--
-- Create view `view_palinsesto_details`
--
CREATE 
VIEW view_palinsesto_details
AS
SELECT
  `bm_palinsesti`.`id` AS `event_id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_channels`.`epgname` AS `channel_name`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`fine` AS `fine`,
  `bm_palinsesti`.`status` AS `status`,
  `getDataInviato`(`bm_palinsesti`.`messa_in_onda_id`, `bm_palinsesti`.`channel_id`, `bm_palinsesti`.`group_id`) AS `data_inviato`,
  `getDataRicevuto`(`bm_palinsesti`.`messa_in_onda_id`, `bm_palinsesti`.`channel_id`, `bm_palinsesti`.`group_id`) AS `data_ricevuto`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `epg_tel_mediapolis_url`,
  `bm_palinsesti`.`epg_request_filename_status` AS `epg_request_filename_status`,
  IF(`bm_palinsesti`.`is_online`, 'true', 'false') AS `is_online`,
  IF(`bm_palinsesti`.`lavorabile`, 'true', 'false') AS `lavorabile`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_groups`.`name` AS `group_name`,
  IF(((`bm_schedule_palinsesto`.`generate_smooth_streaming` IS NOT NULL) AND (`bm_schedule_palinsesto`.`generate_smooth_streaming` = 1)), 1, `bm_channels_users_group`.`epg_cubo`) AS `need_smooth`
FROM ((((`bm_palinsesti`
  JOIN `bm_groups`
    ON ((`bm_palinsesti`.`group_id` = `bm_groups`.`id`)))
  JOIN `bm_channels`
    ON ((`bm_palinsesti`.`channel_id` = `bm_channels`.`service_id`)))
  JOIN `bm_channels_users_group`
    ON (((`bm_channels_users_group`.`group_id` = `bm_groups`.`id`)
    AND (`bm_channels_users_group`.`channel_id` = `bm_channels`.`service_id`))))
  LEFT JOIN `bm_schedule_palinsesto`
    ON (((`bm_palinsesti`.`channel_id` = `bm_schedule_palinsesto`.`channel_id`)
    AND (`bm_palinsesti`.`group_id` = `bm_schedule_palinsesto`.`group_id`))))
WHERE (((`bm_groups`.`code` = 'RAITV')
OR (`bm_groups`.`code` = 'RAISAT'))
AND (`bm_palinsesti`.`ora` BETWEEN (CONCAT(CURDATE(), ' 00:00:00') - INTERVAL 50 DAY) AND (CONCAT(CURDATE(), ' 23:59:59') + INTERVAL 2 DAY)))
ORDER BY `bm_channels`.`epgname`, `bm_palinsesti`.`ora` DESC;

--
-- Create view `view_groups_to_update`
--
CREATE 
VIEW view_groups_to_update
AS
SELECT
  `bm_channels_users_group`.`channel_id` AS `channel_id`,
  `bm_channels_users_group`.`default_category` AS `default_category`,
  `bm_channels_users_group`.`scheduling_type` AS `scheduling_type`,
  `bm_channels_users_group`.`scheduler_hour` AS `scheduler_hour`,
  `bm_channels_users_group`.`scheduler_lasttime` AS `scheduler_lasttime`,
  `bm_channels_users_group`.`automatic_update` AS `automatic_update`,
  `services`.`channel_code` AS `channel_code`,
  `bm_channels_users_group`.`group_id` AS `group_id`,
  `bm_groups`.`code` AS `group_code`,
  `bm_channels`.`palinsesto_url` AS `palinsesto_url`,
  `bm_channels`.`description` AS `channel_description`,
  `bm_groups`.`name` AS `group_description`,
  `bm_channels_users_group`.`execution_status` AS `execution_status`,
  `bm_schedule_palinsesto`.`id` AS `schedule_palinsesto_id`,
  `bm_schedule_palinsesto`.`not_autopublish` AS `not_autopublish`,
  IF(ISNULL(`bm_schedule_palinsesto`.`schedule`), 0, `bm_schedule_palinsesto`.`schedule`) AS `schedule_sender`,
  `bm_schedule_palinsesto`.`schedule_time` AS `scheduler_sender_hour`,
  `bm_schedule_palinsesto`.`data_file_inviato` AS `last_send`,
  `bm_schedule_palinsesto`.`data_file_inviato_forced` AS `data_file_inviato_forced`,
  `bm_schedule_palinsesto`.`ftp_watchFolder` AS `ftp_watchFolder`,
  `bm_schedule_palinsesto`.`ftp_xml` AS `ftp_xml`,
  `bm_schedule_palinsesto`.`generate_palinsesto_entry` AS `generate_palinsesto_entry`,
  `bm_schedule_palinsesto`.`generate_smooth_streaming` AS `generate_smooth_streaming`,
  `bm_schedule_palinsesto`.`is_shared` AS `is_shared`,
  `bm_schedule_palinsesto`.`automatic` AS `automatic`,
  `services`.`external_encoding_wf_url` AS `external_encoding_wf_url`
FROM ((((`bm_channels_users_group`
  JOIN `bm_groups`
    ON ((`bm_channels_users_group`.`group_id` = `bm_groups`.`id`)))
  JOIN `bm_channels`
    ON ((`bm_channels_users_group`.`channel_id` = `bm_channels`.`service_id`)))
  JOIN `services`
    ON ((`bm_channels`.`service_id` = `services`.`id`)))
  LEFT JOIN `bm_schedule_palinsesto`
    ON (((`bm_schedule_palinsesto`.`group_id` = `bm_groups`.`id`)
    AND (`bm_schedule_palinsesto`.`channel_id` = `services`.`id`))))
WHERE (`bm_channels_users_group`.`automatic_update` = 1);

--
-- Create view `bm_view_repliche_palinsesto_in_week`
--
CREATE 
VIEW bm_view_repliche_palinsesto_in_week
AS
SELECT DISTINCT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`lavorabile` AS `lavorabile`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `epg_tel_mediapolis_url`,
  `bm_palinsesti`.`epg_request_filename_status` AS `epg_request_filename_status`
FROM ((`bm_schedule_palinsesto`
  JOIN `bm_palinsesti`
    ON (((`bm_schedule_palinsesto`.`channel_id` = `bm_palinsesti`.`channel_id`)
    AND (`bm_schedule_palinsesto`.`group_id` = `bm_palinsesti`.`group_id`))))
  JOIN `bm_channels_users_group`
    ON (((`bm_schedule_palinsesto`.`group_id` = `bm_channels_users_group`.`group_id`)
    AND (`bm_schedule_palinsesto`.`channel_id` = `bm_channels_users_group`.`channel_id`))))
WHERE (((`bm_schedule_palinsesto`.`schedule` = 1)
OR (`bm_schedule_palinsesto`.`generate_smooth_streaming` = 1))
AND ((`bm_channels_users_group`.`epg_cubo` = 1)
OR (`bm_channels_users_group`.`epg` = 1)
OR (`bm_schedule_palinsesto`.`generate_palinsesto_entry` = 1))
AND (ISNULL(`bm_palinsesti`.`epg_tel_filename`)
OR (`bm_palinsesti`.`epg_tel_filename` = ''))
AND (`bm_palinsesti`.`lavorabile` = 1)
AND (`bm_palinsesti`.`is_online` = 1)
AND (`bm_palinsesti`.`messa_in_onda_id` IS NOT NULL)
AND (`bm_palinsesti`.`messa_in_onda_id` <> '')
AND (ISNULL(`bm_palinsesti`.`epg_request_filename_status`)
OR (`bm_palinsesti`.`epg_request_filename_status` = '')
OR (`bm_palinsesti`.`epg_request_filename_status` = 'N'))
AND (`bm_palinsesti`.`ora` BETWEEN (CURDATE() - INTERVAL (ABS(`bm_schedule_palinsesto`.`numero_gg_Palinsesto`) + 1) DAY) AND (CONCAT(CURDATE(), ' 23:59:59') + INTERVAL 1 DAY)))
ORDER BY `bm_palinsesti`.`id`, `bm_palinsesti`.`messa_in_onda_id`, `bm_palinsesti`.`channel_id`, `bm_palinsesti`.`group_id`;

--
-- Create view `bm_view_repliche_palinsesto`
--
CREATE 
VIEW bm_view_repliche_palinsesto
AS
SELECT DISTINCT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`lavorabile` AS `lavorabile`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `epg_tel_mediapolis_url`,
  `bm_palinsesti`.`epg_request_filename_status` AS `epg_request_filename_status`,
  1 AS `repliche`
FROM ((`bm_palinsesti`
  JOIN `bm_channels_users_group`
    ON (((`bm_palinsesti`.`channel_id` = `bm_channels_users_group`.`channel_id`)
    AND (`bm_palinsesti`.`group_id` = `bm_channels_users_group`.`group_id`))))
  JOIN `bm_schedule_palinsesto`
    ON (((`bm_schedule_palinsesto`.`channel_id` = `bm_palinsesti`.`channel_id`)
    AND (`bm_schedule_palinsesto`.`group_id` = `bm_palinsesti`.`group_id`))))
WHERE (((`bm_channels_users_group`.`epg_cubo` = 1)
OR (`bm_channels_users_group`.`epg` = 1)
OR (`bm_schedule_palinsesto`.`generate_palinsesto_entry` = 1))
AND (`bm_palinsesti`.`lavorabile` = 1)
AND ((`bm_schedule_palinsesto`.`schedule` = 1)
OR (`bm_schedule_palinsesto`.`generate_palinsesto_entry` = 1))
AND (`bm_palinsesti`.`epg_request_filename_status` <> 'Y')
AND (`bm_palinsesti`.`ora` BETWEEN (CONCAT(CURDATE(), ' 00:00:00') - INTERVAL (ABS(`bm_schedule_palinsesto`.`numero_gg_Palinsesto`) + 1) DAY) AND (CONCAT(CURDATE(), ' 23:59:59') + INTERVAL 1 DAY)));

--
-- Create view `bm_view_items_palinsesto_week`
--
CREATE 
VIEW bm_view_items_palinsesto_week
AS
SELECT DISTINCT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`fine` AS `fine`,
  `bm_palinsesti`.`mediapoliscategory` AS `mediapoliscategory`,
  `bm_palinsesti`.`lavorabile` AS `lavorabile`,
  `bm_palinsesti`.`is_online` AS `is_online`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `epg_tel_mediapolis_url`,
  `bm_palinsesti`.`epg_request_filename_status` AS `epg_request_filename_status`,
  1 AS `repliche`
FROM ((`bm_palinsesti`
  JOIN `bm_channels_users_group`
    ON (((`bm_palinsesti`.`channel_id` = `bm_channels_users_group`.`channel_id`)
    AND (`bm_palinsesti`.`group_id` = `bm_channels_users_group`.`group_id`))))
  JOIN `bm_schedule_palinsesto`
    ON (((`bm_schedule_palinsesto`.`channel_id` = `bm_palinsesti`.`channel_id`)
    AND (`bm_schedule_palinsesto`.`group_id` = `bm_palinsesti`.`group_id`))))
WHERE (((`bm_channels_users_group`.`epg_cubo` = 1)
OR (`bm_channels_users_group`.`epg` = 1)
OR (`bm_schedule_palinsesto`.`generate_palinsesto_entry` = 1))
AND (`bm_palinsesti`.`lavorabile` = 1)
AND ((`bm_schedule_palinsesto`.`schedule` = 1)
OR (`bm_schedule_palinsesto`.`generate_palinsesto_entry` = 1))
AND (`bm_palinsesti`.`ora` BETWEEN (CONCAT(CURDATE(), ' 00:00:00') - INTERVAL (ABS(`bm_schedule_palinsesto`.`numero_gg_Palinsesto`) + 1) DAY) AND (CONCAT(CURDATE(), ' 23:59:59') + INTERVAL 1 DAY)));

--
-- Create table `masters_association`
--
CREATE TABLE masters_association (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  description MEDIUMTEXT DEFAULT NULL,
  bitrates MEDIUMTEXT DEFAULT NULL,
  creation_date TIMESTAMP NULL DEFAULT NULL,
  clip_online VARCHAR(1) NOT NULL DEFAULT 'N',
  rce_id MEDIUMTEXT DEFAULT NULL,
  event_id VARCHAR(500) DEFAULT NULL,
  event_name TEXT DEFAULT NULL,
  program_date MEDIUMTEXT DEFAULT NULL,
  clip_type MEDIUMTEXT DEFAULT NULL,
  distribution_date TIMESTAMP NULL DEFAULT NULL,
  markers LONGTEXT NOT NULL,
  is_deleted VARCHAR(1) NOT NULL DEFAULT 'N',
  category MEDIUMTEXT DEFAULT NULL,
  asset_filename MEDIUMTEXT DEFAULT NULL,
  source_generation_url MEDIUMTEXT DEFAULT NULL,
  service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  application_type VARCHAR(50) NOT NULL DEFAULT '',
  bumpers_name VARCHAR(500) DEFAULT NULL,
  feed_id VARCHAR(5000) DEFAULT NULL,
  distribution_types VARCHAR(5000) DEFAULT NULL,
  special_event_code VARCHAR(500) DEFAULT '',
  xml_ingestion TEXT DEFAULT NULL,
  id_mo VARCHAR(500) DEFAULT NULL,
  user_id INT(11) NOT NULL DEFAULT 0,
  group_id INT(11) NOT NULL DEFAULT 0,
  ads_time VARCHAR(500) DEFAULT NULL,
  rai_play_expire_date DATETIME NOT NULL DEFAULT '2999-12-12 23:59:59',
  cubovision_expire_date DATETIME NOT NULL DEFAULT '1970-01-01 00:00:00',
  is_raiplay_expired VARCHAR(1) NOT NULL DEFAULT 'N',
  is_smooth_streaming_expired VARCHAR(1) NOT NULL DEFAULT 'N',
  subtitle_company INT(11) NOT NULL DEFAULT -1,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 122294,
AVG_ROW_LENGTH = 585,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `FK_masters_association_services_id` on table `masters_association`
--
ALTER TABLE masters_association 
  ADD INDEX FK_masters_association_services_id(service_id);

--
-- Create index `IX_masters_association_application_type` on table `masters_association`
--
ALTER TABLE masters_association 
  ADD INDEX IX_masters_association_application_type(application_type);

--
-- Create index `IX_masters_association_event_id` on table `masters_association`
--
ALTER TABLE masters_association 
  ADD INDEX IX_masters_association_event_id(event_id(191));

--
-- Create index `UK_masters_association_id_mo` on table `masters_association`
--
ALTER TABLE masters_association 
  ADD INDEX UK_masters_association_id_mo(id_mo);

--
-- Create view `stats_num_clip_channels_groups`
--
CREATE 
VIEW stats_num_clip_channels_groups
AS
SELECT
  `masters_association`.`service_id` AS `channel_id`,
  `services`.`channel_code` AS `channel_code`,
  `services`.`channel_description` AS `channel_description`,
  `masters_association`.`group_id` AS `group_id`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`description` AS `group_description`,
  `bm_groups`.`code` AS `group_code`,
  COUNT(`services`.`id`) AS `num_clips`
FROM ((`masters_association`
  JOIN `services`
    ON ((`masters_association`.`service_id` = `services`.`id`)))
  JOIN `bm_groups`
    ON ((`masters_association`.`group_id` = `bm_groups`.`id`)))
WHERE (`masters_association`.`clip_online` = 'Y')
GROUP BY `masters_association`.`service_id`,
         `masters_association`.`group_id`;

--
-- Create view `bm_view_shared_works`
--
CREATE 
VIEW bm_view_shared_works
AS
SELECT
  `masters_association`.`id` AS `asset_id`,
  `masters_association`.`id_mo` AS `idMo`,
  `masters_association`.`creation_date` AS `creation_date`,
  `bm_palinsesti`.`titolo` AS `event_name`,
  `masters_association`.`event_id` AS `event_id`,
  CONCAT(`bm_exraisat_channels`.`channel_code`, `bm_palinsesti`.`id`) AS `archiveCode`,
  `bm_palinsesti`.`originaFilename` AS `originaFilename`
FROM (((`bm_palinsesti`
  JOIN `bm_schedule_palinsesto`
    ON (((`bm_palinsesti`.`channel_id` = `bm_schedule_palinsesto`.`channel_id`)
    AND (`bm_palinsesti`.`group_id` = `bm_schedule_palinsesto`.`group_id`))))
  JOIN `masters_association`
    ON ((`masters_association`.`event_id` = `bm_palinsesti`.`id`)))
  JOIN `bm_exraisat_channels`
    ON ((`bm_palinsesti`.`channel_id` = `bm_exraisat_channels`.`service_id`)))
WHERE ((`bm_schedule_palinsesto`.`is_shared` = 1)
AND (`masters_association`.`is_raiplay_expired` = 'N')
AND (`bm_palinsesti`.`status` >= 0)
AND (`masters_association`.`is_deleted` = 'N')
AND (`masters_association`.`id_mo` IS NOT NULL)
AND (`masters_association`.`id_mo` <> ''))
ORDER BY `masters_association`.`id` DESC;

--
-- Create table `smooth_streaming_asset_structure`
--
CREATE TABLE smooth_streaming_asset_structure (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  masters_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  type_2 VARCHAR(500) NOT NULL DEFAULT '',
  path VARCHAR(5000) NOT NULL DEFAULT '',
  filename VARCHAR(5000) NOT NULL DEFAULT '',
  bitrate INT(10) UNSIGNED NOT NULL DEFAULT 0,
  service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  category VARCHAR(500) NOT NULL DEFAULT '',
  direct_url VARCHAR(5000) NOT NULL DEFAULT '',
  mediapolis_url VARCHAR(5000) NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 46098,
AVG_ROW_LENGTH = 300,
CHARACTER SET utf8,
COLLATE utf8_general_ci;

--
-- Create foreign key
--
ALTER TABLE smooth_streaming_asset_structure 
  ADD CONSTRAINT FK_smooth_streaming_asset_structure_masters_association_id FOREIGN KEY (masters_id)
    REFERENCES masters_association(id) ON DELETE CASCADE ON UPDATE CASCADE;

DELIMITER $$

--
-- Create function `getSmDirectUrlFromMedipolisCms`
--
CREATE FUNCTION getSmDirectUrlFromMedipolisCms(pMediapolis TEXT)
  RETURNS TEXT CHARSET utf8
  DETERMINISTIC
BEGIN
DECLARE directUrl TEXT CHARSET UTF8 DEFAULT NULL;

SELECT
  direct_url INTO directUrl
FROM smooth_streaming_asset_structure p
  JOIN masters_association m
    ON (p.masters_id = m.id)
WHERE m.source_generation_url = pMediapolis
LIMIT
1;

RETURN directUrl;
END
$$

--
-- Create function `getSmDirectUrl`
--
CREATE FUNCTION getSmDirectUrl(pMasterId INT(11))
  RETURNS TEXT CHARSET utf8
  DETERMINISTIC
BEGIN
DECLARE directUrl TEXT DEFAULT NULL;

SELECT
  direct_url INTO directUrl
FROM smooth_streaming_asset_structure p
WHERE p.masters_id = pMasterId
LIMIT
1;

RETURN directUrl;
END
$$

DELIMITER ;

--
-- Create table `produced_srt_files`
--
CREATE TABLE produced_srt_files (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  masters_association_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  path VARCHAR(5000) NOT NULL DEFAULT '',
  filename VARCHAR(5000) NOT NULL DEFAULT '',
  published VARCHAR(1) NOT NULL DEFAULT 'N',
  mediapolis_url VARCHAR(5000) DEFAULT '',
  direct_url VARCHAR(1000) DEFAULT '',
  version_number TINYINT(3) UNSIGNED NOT NULL DEFAULT 0,
  date_2 TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 615,
AVG_ROW_LENGTH = 406,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create foreign key
--
ALTER TABLE produced_srt_files 
  ADD CONSTRAINT FK_produced_srt_files_masters_association_id FOREIGN KEY (masters_association_id)
    REFERENCES masters_association(id) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create table `produced_clips`
--
CREATE TABLE produced_clips (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  path MEDIUMTEXT DEFAULT NULL,
  filename MEDIUMTEXT DEFAULT NULL,
  date_start TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  date_end TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  ads LONGTEXT DEFAULT NULL,
  category MEDIUMTEXT DEFAULT NULL,
  event_id VARCHAR(500) DEFAULT NULL,
  published VARCHAR(1) NOT NULL DEFAULT 'N',
  mediapolis_url MEDIUMTEXT DEFAULT NULL,
  description MEDIUMTEXT DEFAULT NULL,
  description1 MEDIUMTEXT DEFAULT NULL,
  description2 MEDIUMTEXT DEFAULT NULL,
  masters_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  bitrate INT(10) UNSIGNED NOT NULL DEFAULT 0,
  service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  first_distributed VARCHAR(1) NOT NULL DEFAULT 'N',
  request_date TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  creation_date TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  distribution_date TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  is_deleted VARCHAR(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 540820,
AVG_ROW_LENGTH = 612,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `IX_produced_clips_creation_date` on table `produced_clips`
--
ALTER TABLE produced_clips 
  ADD INDEX IX_produced_clips_creation_date(creation_date);

--
-- Create index `IX_produced_clips_event_id` on table `produced_clips`
--
ALTER TABLE produced_clips 
  ADD INDEX IX_produced_clips_event_id(event_id(191));

--
-- Create foreign key
--
ALTER TABLE produced_clips 
  ADD CONSTRAINT FK_produced_clips_masters_association_id FOREIGN KEY (masters_id)
    REFERENCES masters_association(id) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create foreign key
--
ALTER TABLE produced_clips 
  ADD CONSTRAINT FK_produced_clips_services_id FOREIGN KEY (service_id)
    REFERENCES services(id) ON DELETE CASCADE ON UPDATE CASCADE;

DELIMITER $$

--
-- Create function `getSmDirectUrlFromMedipolis`
--
CREATE FUNCTION getSmDirectUrlFromMedipolis(pMediapolis TEXT)
  RETURNS TEXT CHARSET utf8
  DETERMINISTIC
BEGIN
DECLARE directUrl TEXT CHARSET UTF8 DEFAULT NULL;

SELECT
  direct_url INTO directUrl
FROM smooth_streaming_asset_structure p
  JOIN produced_clips pp
    ON p.masters_id = pp.masters_id
  JOIN masters_association m
    ON (p.masters_id = m.id)
WHERE pp.mediapolis_url = pMediapolis
OR m.source_generation_url = pMediapolis
LIMIT
1;

RETURN directUrl;
END
$$

DELIMITER ;

--
-- Create view `view_tmp_table_empty_filename`
--
CREATE 
VIEW view_tmp_table_empty_filename
AS
SELECT DISTINCT
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  (SELECT
      REPLACE(`p`.`filename`, '.mp4', '%')
    FROM (`produced_clips` `p`
      JOIN `masters_association` `m`
        ON (((`p`.`masters_id` = `m`.`id`)
        AND (`p`.`bitrate` = 1800))))
    WHERE ((`m`.`group_id` = 14)
    AND ((CONVERT(`m`.`id_mo` USING utf8) COLLATE utf8_general_ci) = (CONVERT(`bm_palinsesti`.`messa_in_onda_id` USING utf8) COLLATE utf8_general_ci))
    AND (`m`.`service_id` = `bm_palinsesti`.`channel_id`)) LIMIT 1) AS `epg_1800`,
  (SELECT
      `m`.`id`
    FROM (`produced_clips` `p`
      JOIN `masters_association` `m`
        ON (((`p`.`masters_id` = `m`.`id`)
        AND (`p`.`bitrate` = 1800))))
    WHERE ((`m`.`group_id` = 14)
    AND ((CONVERT(`m`.`id_mo` USING utf8) COLLATE utf8_general_ci) = (CONVERT(`bm_palinsesti`.`messa_in_onda_id` USING utf8) COLLATE utf8_general_ci))
    AND (`m`.`service_id` = `bm_palinsesti`.`channel_id`)) LIMIT 1) AS `asset_id`,
  (SELECT
      COUNT(`bmp`.`messa_in_onda_id`)
    FROM `bm_palinsesti` `bmp`
    WHERE ((`bmp`.`is_online` = 1)
    AND (ISNULL(`bmp`.`epg_tel_filename`)
    OR (`bmp`.`epg_tel_filename` = ''))
    AND (`bmp`.`messa_in_onda_id` = `bm_palinsesti`.`messa_in_onda_id`)
    AND (`bmp`.`ora` BETWEEN (CONCAT(CURDATE(), ' 00:00:00') - INTERVAL 8 DAY) AND CONCAT(CURDATE(), ' 23:59:59'))
    AND (`bmp`.`channel_id` IN (84, 87, 88))
    AND (`bmp`.`group_id` = 14))) AS `num_repliche`,
  (SELECT
      `t`.`business_ip`
    FROM (`services_route_table` `t`
      JOIN `services` `s`
        ON ((`s`.`services_route_table_id` = `t`.`id`)))
    WHERE (`s`.`id` = `bm_palinsesti`.`channel_id`) LIMIT 1) AS `ip_service`
FROM `bm_palinsesti`
WHERE ((`bm_palinsesti`.`is_online` = 1)
AND (ISNULL(`bm_palinsesti`.`epg_tel_filename`)
OR (`bm_palinsesti`.`epg_tel_filename` = ''))
AND (`bm_palinsesti`.`ora` BETWEEN (CONCAT(CURDATE(), ' 00:00:00') - INTERVAL 8 DAY) AND CONCAT(CURDATE(), ' 23:59:59'))
AND (`bm_palinsesti`.`channel_id` IN (84, 87, 88))
AND (`bm_palinsesti`.`group_id` = 14))
ORDER BY `bm_palinsesti`.`channel_id`, `bm_palinsesti`.`ora` DESC, `bm_palinsesti`.`messa_in_onda_id` DESC;

--
-- Create view `bm_view_smooth_urls`
--
CREATE 
VIEW bm_view_smooth_urls
AS
SELECT
  `m`.`event_id` AS `event_id`,
  `m`.`id_mo` AS `id_mo`,
  `m`.`source_generation_url` AS `source_generation_url`,
  TRIM(REPLACE(`services`.`channel_code`, '_bck', '')) AS `channel_code`,
  `m`.`group_id` AS `group_id`,
  `services`.`id` AS `id`,
  `smooth_streaming_asset_structure`.`mediapolis_url` AS `smooth_mediapolis_url`,
  `p`.`mediapolis_url` AS `master_mediapolis_url`,
  `m`.`id` AS `master_id`
FROM ((((`masters_association` `m`
  JOIN `produced_clips` `p`
    ON (((`m`.`id` = `p`.`masters_id`)
    AND (`p`.`published` = 'Y')
    AND (`m`.`is_raiplay_expired` = 'N'))))
  JOIN `services`
    ON (((`m`.`service_id` = `services`.`id`)
    AND (`p`.`service_id` = `services`.`id`))))
  JOIN `service_qualities`
    ON (((`service_qualities`.`service_id` = `services`.`id`)
    AND (`service_qualities`.`quality` = `p`.`bitrate`)
    AND (`service_qualities`.`master_quality` = 'Y'))))
  LEFT JOIN `smooth_streaming_asset_structure`
    ON ((`smooth_streaming_asset_structure`.`masters_id` = `m`.`id`)))
ORDER BY `m`.`creation_date` DESC, `smooth_streaming_asset_structure`.`mediapolis_url` DESC, `p`.`mediapolis_url` DESC;

--
-- Create view `bm_view_palinsesto_mediapolis_url2`
--
CREATE 
VIEW bm_view_palinsesto_mediapolis_url2
AS
SELECT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `produced_clips`.`mediapolis_url` AS `mediapolis_url`,
  `masters_association`.`clip_type` AS `clip_type`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `epg_tel_mediapolis_url`,
  `bm_palinsesti`.`epg_request_filename_status` AS `epg_request_filename_status`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `masters_association`.`service_id` AS `channel_id`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`fine` AS `fine`,
  `bm_palinsesti`.`exclusive_role_lock` AS `exclusive_role_lock`,
  `bm_palinsesti`.`make_ads` AS `make_ads`,
  `bm_palinsesti`.`duration` AS `duration`,
  `bm_palinsesti`.`forceRecordedButton` AS `forceRecordedButton`,
  `bm_palinsesti`.`cliptype_selection` AS `cliptype_selection`,
  `masters_association`.`source_generation_url` AS `source_generation_url`,
  `bm_palinsesti`.`cms_mediapolis_url` AS `cms_mediapolis_url`,
  `bm_palinsesti`.`is_from_archive` AS `is_from_archive`,
  `bm_palinsesti`.`drm_category_error` AS `drm_category_error`
FROM ((((`produced_clips`
  JOIN `masters_association`
    ON (((`produced_clips`.`masters_id` = `masters_association`.`id`)
    AND (`produced_clips`.`event_id` = `masters_association`.`event_id`))))
  JOIN `bm_palinsesti`
    ON ((((CONVERT(`bm_palinsesti`.`messa_in_onda_id` USING utf8) COLLATE utf8_general_ci) = (CONVERT(`masters_association`.`id_mo` USING utf8) COLLATE utf8_general_ci))
    AND (`bm_palinsesti`.`group_id` = `masters_association`.`group_id`))))
  JOIN `services`
    ON ((`produced_clips`.`service_id` = `services`.`id`)))
  JOIN `services` `services_1`
    ON (((`services_1`.`channel_code` = `services`.`channel_code`)
    OR (`services_1`.`channel_code` = CONCAT(`services`.`channel_code`, '_bck')))))
WHERE ((`masters_association`.`clip_online` = 'Y')
AND (`produced_clips`.`mediapolis_url` IS NOT NULL)
AND (`produced_clips`.`mediapolis_url` <> '')
AND (`masters_association`.`clip_type` LIKE '%INTEGRALE%'));

--
-- Create view `bm_view_palinsesto_mediapolis_url`
--
CREATE 
VIEW bm_view_palinsesto_mediapolis_url
AS
SELECT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `produced_clips`.`mediapolis_url` AS `mediapolis_url`,
  `masters_association`.`source_generation_url` AS `source_generation_url`,
  `masters_association`.`clip_type` AS `clip_type`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `epg_tel_mediapolis_url`,
  `bm_palinsesti`.`epg_request_filename_status` AS `epg_request_filename_status`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`fine` AS `fine`,
  `bm_palinsesti`.`exclusive_role_lock` AS `exclusive_role_lock`,
  `bm_palinsesti`.`make_ads` AS `make_ads`,
  `bm_palinsesti`.`forceRecordedButton` AS `forceRecordedButton`,
  `bm_palinsesti`.`cliptype_selection` AS `cliptype_selection`,
  `bm_palinsesti`.`cms_mediapolis_url` AS `cms_mediapolis_url`,
  `bm_palinsesti`.`duration` AS `duration`,
  `masters_association`.`creation_date` AS `creation_date`,
  `bm_palinsesti`.`is_from_archive` AS `is_from_archive`,
  `bm_palinsesti`.`drm_flag` AS `drm_flag`,
  `bm_palinsesti`.`drm_category_error` AS `drm_category_error`
FROM ((`produced_clips`
  JOIN `masters_association`
    ON ((`produced_clips`.`masters_id` = `masters_association`.`id`)))
  JOIN `bm_palinsesti`
    ON ((`bm_palinsesti`.`id` = `masters_association`.`rce_id`)))
WHERE ((`masters_association`.`clip_online` = 'Y')
AND (`masters_association`.`is_raiplay_expired` = 'N')
AND (`produced_clips`.`mediapolis_url` IS NOT NULL)
AND (`produced_clips`.`mediapolis_url` <> '')
AND (`masters_association`.`clip_type` LIKE '%INTEGRALE%'));

--
-- Create view `bm_view_palinsesto_cmsmediapolis_url`
--
CREATE 
VIEW bm_view_palinsesto_cmsmediapolis_url
AS
SELECT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `produced_clips`.`mediapolis_url` AS `mediapolis_url`,
  `masters_association`.`source_generation_url` AS `source_generation_url`,
  `masters_association`.`clip_type` AS `clip_type`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `epg_tel_mediapolis_url`,
  `bm_palinsesti`.`epg_request_filename_status` AS `epg_request_filename_status`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`fine` AS `fine`,
  `bm_palinsesti`.`duration` AS `duration`,
  `bm_palinsesti`.`exclusive_role_lock` AS `exclusive_role_lock`,
  `bm_palinsesti`.`make_ads` AS `make_ads`,
  `bm_palinsesti`.`forceRecordedButton` AS `forceRecordedButton`,
  `bm_palinsesti`.`cliptype_selection` AS `cliptype_selection`,
  `bm_palinsesti`.`cms_mediapolis_url` AS `cms_mediapolis_url`,
  `masters_association`.`creation_date` AS `creation_date`,
  `bm_palinsesti`.`is_from_archive` AS `is_from_archive`,
  `bm_palinsesti`.`drm_flag` AS `drm_flag`,
  `bm_palinsesti`.`drm_category_error` AS `drm_category_error`
FROM ((`produced_clips`
  JOIN `masters_association`
    ON ((`produced_clips`.`masters_id` = `masters_association`.`id`)))
  JOIN `bm_palinsesti`
    ON (((`bm_palinsesti`.`cms_mediapolis_url` = `masters_association`.`source_generation_url`)
    OR (`bm_palinsesti`.`cms_mediapolis_url` = `produced_clips`.`mediapolis_url`))))
WHERE ((`masters_association`.`clip_online` = 'Y')
AND (`produced_clips`.`mediapolis_url` IS NOT NULL)
AND (`produced_clips`.`mediapolis_url` <> '')
AND (`masters_association`.`clip_type` LIKE '%INTEGRALE%'));

--
-- Create view `bm_view_archives`
--
CREATE 
VIEW bm_view_archives
AS
SELECT
  `produced_clips`.`id` AS `clip_id`,
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`titolo` AS `title`,
  IF(ISNULL(`bm_palinsesti`.`originaFilename`), `produced_clips`.`filename`, `bm_palinsesti`.`originaFilename`) AS `filename`,
  CONCAT(`bm_exraisat_channels`.`channel_code`, `bm_palinsesti`.`id`) AS `code`,
  `produced_clips`.`bitrate` AS `bitrate`
FROM ((((`bm_schedule_palinsesto`
  JOIN `bm_palinsesti`
    ON (((`bm_schedule_palinsesto`.`group_id` = `bm_palinsesti`.`group_id`)
    AND (`bm_schedule_palinsesto`.`channel_id` = `bm_palinsesti`.`channel_id`))))
  JOIN `bm_exraisat_channels`
    ON ((`bm_schedule_palinsesto`.`channel_id` = `bm_exraisat_channels`.`service_id`)))
  JOIN `produced_clips`
    ON ((`bm_palinsesti`.`id` = `produced_clips`.`event_id`)))
  JOIN `service_qualities`
    ON (((`service_qualities`.`service_id` = `bm_palinsesti`.`channel_id`)
    AND (`service_qualities`.`quality` = `produced_clips`.`bitrate`))))
WHERE ((`bm_schedule_palinsesto`.`is_shared` = 1)
AND (`service_qualities`.`master_quality` = 'Y')
AND (`produced_clips`.`is_deleted` = 'N'))
ORDER BY `produced_clips`.`id` DESC;

--
-- Create table `produced_screenshots`
--
CREATE TABLE produced_screenshots (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  produced_clips_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  path VARCHAR(5000) NOT NULL DEFAULT '',
  filename VARCHAR(5000) NOT NULL DEFAULT '',
  mediapolis_url VARCHAR(5000) NOT NULL DEFAULT '',
  creation_date TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  distribution_date TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 117474,
AVG_ROW_LENGTH = 585,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `FK_produced_screenshots_1` on table `produced_screenshots`
--
ALTER TABLE produced_screenshots 
  ADD INDEX FK_produced_screenshots_1(produced_clips_id);

--
-- Create foreign key
--
ALTER TABLE produced_screenshots 
  ADD CONSTRAINT FK_produced_screenshots_produced_clips_id FOREIGN KEY (produced_clips_id)
    REFERENCES produced_clips(id) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create view `bm_produced_screenshot`
--
CREATE 
VIEW bm_produced_screenshot
AS
SELECT
  `produced_screenshots`.`mediapolis_url` AS `mediapolis_url`,
  `produced_screenshots`.`filename` AS `filename`,
  `produced_clips`.`masters_id` AS `masters_id`
FROM ((`produced_clips`
  JOIN `masters_association`
    ON ((`produced_clips`.`masters_id` = `masters_association`.`id`)))
  JOIN `produced_screenshots`
    ON ((`produced_screenshots`.`produced_clips_id` = `produced_clips`.`id`)));

--
-- Create table `produced_clips_metadata_attributes`
--
CREATE TABLE produced_clips_metadata_attributes (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  produced_clips_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  size VARCHAR(255) DEFAULT NULL,
  duration VARCHAR(255) DEFAULT NULL,
  bitrate VARCHAR(100) DEFAULT NULL,
  width VARCHAR(100) DEFAULT NULL,
  height VARCHAR(100) DEFAULT NULL,
  quality VARCHAR(100) DEFAULT NULL,
  aspect_ratio VARCHAR(255) NOT NULL DEFAULT 'ND:ND',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 535998,
AVG_ROW_LENGTH = 148,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `IX_produced_clips_metadata_attributes_quality` on table `produced_clips_metadata_attributes`
--
ALTER TABLE produced_clips_metadata_attributes 
  ADD INDEX IX_produced_clips_metadata_attributes_quality(quality);

--
-- Create index `produced_clips_id` on table `produced_clips_metadata_attributes`
--
ALTER TABLE produced_clips_metadata_attributes 
  ADD UNIQUE INDEX produced_clips_id(produced_clips_id);

--
-- Create foreign key
--
ALTER TABLE produced_clips_metadata_attributes 
  ADD CONSTRAINT FK_produced_clips_metadata_attributes_produced_clips_id FOREIGN KEY (produced_clips_id)
    REFERENCES produced_clips(id);

--
-- Create view `bm_view_produced_clips_copy`
--
CREATE 
VIEW bm_view_produced_clips_copy
AS
SELECT
  `produced_clips`.`service_id` AS `service_id`,
  `produced_clips`.`path` AS `path`,
  `produced_clips`.`filename` AS `filename`,
  `produced_clips`.`category` AS `category`,
  `produced_clips`.`event_id` AS `event_id`,
  `produced_clips`.`published` AS `published`,
  `produced_clips`.`mediapolis_url` AS `mediapolis_url`,
  `produced_clips`.`description` AS `description`,
  `produced_clips`.`description1` AS `description1`,
  `produced_clips`.`masters_id` AS `masters_id`,
  `produced_clips`.`description2` AS `description2`,
  `produced_clips`.`bitrate` AS `bitrate`,
  `service_qualities`.`quality` AS `quality`,
  `service_qualities`.`master_quality` AS `master_quality`,
  `services`.`alias` AS `alias`,
  `services`.`web_server_url` AS `web_server_url`,
  `services`.`channel_code` AS `channel_code`,
  `services`.`channel_description` AS `channel_description`,
  `masters_association`.`clip_online` AS `clip_online`,
  `masters_association`.`event_name` AS `event_name`,
  `produced_clips`.`id` AS `clip_id`,
  `masters_association`.`clip_type` AS `clip_type`,
  `produced_clips`.`request_date` AS `request_date`,
  `produced_clips`.`creation_date` AS `creation_date`,
  `produced_clips`.`distribution_date` AS `distribution_date`,
  (SELECT
      `a`.`filename`
    FROM (`produced_screenshots` `a`
      JOIN `produced_clips` `b`
        ON (((`a`.`produced_clips_id` = `b`.`id`)
        AND (`b`.`id` = `a`.`produced_clips_id`))))
    WHERE (`b`.`masters_id` = `produced_clips`.`masters_id`) LIMIT 1) AS `screenshot`,
  `masters_association`.`application_type` AS `application_type`,
  `produced_clips_metadata_attributes`.`size` AS `size`,
  `produced_clips_metadata_attributes`.`duration` AS `duration`,
  `produced_clips_metadata_attributes`.`width` AS `width`,
  `produced_clips_metadata_attributes`.`height` AS `height`
FROM ((((`produced_clips`
  JOIN `masters_association`
    ON ((`produced_clips`.`masters_id` = `masters_association`.`id`)))
  JOIN `services`
    ON ((`masters_association`.`service_id` = `services`.`id`)))
  JOIN `service_qualities`
    ON ((`services`.`id` = `service_qualities`.`service_id`)))
  JOIN `produced_clips_metadata_attributes`
    ON ((`produced_clips_metadata_attributes`.`produced_clips_id` = `produced_clips`.`id`)));

--
-- Create view `bm_view_epg_trasmissioni_info`
--
CREATE 
VIEW bm_view_epg_trasmissioni_info
AS
SELECT
  `masters_association`.`rce_id` AS `rce_id`,
  `masters_association`.`id_mo` AS `idmo`,
  `masters_association`.`service_id` AS `service_id`,
  `masters_association`.`group_id` AS `group_id`,
  IF((`masters_association`.`source_generation_url` LIKE '%relinker%'), `masters_association`.`source_generation_url`, '') AS `source_generation_url`,
  `produced_clips_metadata_attributes`.`id` AS `id`,
  `produced_clips_metadata_attributes`.`produced_clips_id` AS `produced_clips_id`,
  `produced_clips_metadata_attributes`.`size` AS `size`,
  `produced_clips_metadata_attributes`.`duration` AS `duration`,
  `produced_clips_metadata_attributes`.`bitrate` AS `bitrate`,
  `produced_clips_metadata_attributes`.`width` AS `width`,
  `produced_clips_metadata_attributes`.`height` AS `height`,
  `produced_clips_metadata_attributes`.`quality` AS `quality`,
  `produced_clips_metadata_attributes`.`aspect_ratio` AS `aspect_ratio`,
  REPLACE(REPLACE(ROUND(`produced_clips_metadata_attributes`.`duration`, 2), '.00', ''), '.', ',') AS `durationf`,
  `produced_clips`.`mediapolis_url` AS `mediapolis_url`,
  `smooth_streaming_asset_structure`.`direct_url` AS `direct_url`,
  `produced_srt_files`.`direct_url` AS `subtitle`,
  `xml_highlights`.`direct_url` AS `highlightUrl`
FROM ((((((`produced_clips_metadata_attributes`
  JOIN `produced_clips`
    ON ((`produced_clips_metadata_attributes`.`produced_clips_id` = `produced_clips`.`id`)))
  JOIN `masters_association`
    ON ((`produced_clips`.`masters_id` = `masters_association`.`id`)))
  LEFT JOIN `smooth_streaming_asset_structure`
    ON ((`smooth_streaming_asset_structure`.`masters_id` = `masters_association`.`id`)))
  LEFT JOIN `produced_srt_files`
    ON ((`produced_srt_files`.`masters_association_id` = `masters_association`.`id`)))
  LEFT JOIN `xml_highlights`
    ON (((`xml_highlights`.`event_id` = `masters_association`.`rce_id`)
    AND (`xml_highlights`.`group_id` = `masters_association`.`group_id`))))
  JOIN `service_qualities`
    ON (((`service_qualities`.`service_id` = `produced_clips`.`service_id`)
    AND (`service_qualities`.`quality` = `produced_clips`.`bitrate`))))
WHERE ((`masters_association`.`clip_online` = 'Y')
AND (`masters_association`.`is_raiplay_expired` = 'N')
AND (`masters_association`.`clip_type` LIKE 'INTEGRALE%')
AND (`service_qualities`.`master_quality` = 'Y'))
ORDER BY `produced_clips`.`id` DESC, CAST(`masters_association`.`rce_id` AS UNSIGNED) DESC;

--
-- Create table `service_audio_tracks_type`
--
CREATE TABLE service_audio_tracks_type (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  code VARCHAR(50) DEFAULT NULL,
  name VARCHAR(255) DEFAULT NULL,
  track_order INT(11) UNSIGNED DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 8,
AVG_ROW_LENGTH = 2730,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `language_codes`
--
CREATE TABLE language_codes (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  code VARCHAR(50) DEFAULT NULL,
  name VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 16,
AVG_ROW_LENGTH = 1820,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `service_audio_qualities`
--
CREATE TABLE service_audio_qualities (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  service_qualities_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  related_url VARCHAR(500) NOT NULL DEFAULT '',
  related_url_bitrate VARCHAR(255) DEFAULT NULL COMMENT 'bitrate relativo all''url associato al campo related_url',
  language_code_id INT(11) UNSIGNED NOT NULL,
  track_type INT(11) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 83,
AVG_ROW_LENGTH = 963,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create foreign key
--
ALTER TABLE service_audio_qualities 
  ADD CONSTRAINT FK_service_audio_qualities_language_codes_id FOREIGN KEY (language_code_id)
    REFERENCES language_codes(id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create foreign key
--
ALTER TABLE service_audio_qualities 
  ADD CONSTRAINT FK_service_audio_qualities_service_audio_tracks_type_id FOREIGN KEY (track_type)
    REFERENCES service_audio_tracks_type(id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create foreign key
--
ALTER TABLE service_audio_qualities 
  ADD CONSTRAINT FK_service_audio_qualities_service_qualities_id FOREIGN KEY (service_qualities_id)
    REFERENCES service_qualities(id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create view `view_audio_bitrates`
--
CREATE 
VIEW view_audio_bitrates
AS
SELECT
  `service_qualities`.`service_id` AS `service_id`,
  `services`.`alias` AS `service_alias`,
  `services`.`channel_code` AS `channel_code`,
  `service_qualities`.`quality` AS `bitrate`,
  `service_qualities`.`master_quality` AS `master_quality`,
  `service_audio_qualities`.`related_url` AS `track_url`,
  `service_audio_qualities`.`related_url_bitrate` AS `track_bitrate`,
  `service_audio_qualities`.`track_type` AS `track_type_id`,
  `service_audio_tracks_type`.`code` AS `track_type_code`,
  `service_audio_tracks_type`.`name` AS `track_type_name`,
  `service_audio_qualities`.`language_code_id` AS `lang_id`,
  `language_codes`.`name` AS `lang_label`,
  `language_codes`.`code` AS `lang_code`,
  `language_codes`.`name` AS `lang_name`,
  `service_audio_tracks_type`.`track_order` AS `track_order`
FROM ((((`service_audio_qualities`
  JOIN `service_audio_tracks_type`
    ON ((`service_audio_qualities`.`track_type` = `service_audio_tracks_type`.`id`)))
  JOIN `language_codes`
    ON ((`service_audio_qualities`.`language_code_id` = `language_codes`.`id`)))
  JOIN `service_qualities`
    ON ((`service_audio_qualities`.`service_qualities_id` = `service_qualities`.`id`)))
  JOIN `services`
    ON ((`service_qualities`.`service_id` = `services`.`id`)))
ORDER BY `services`.`alias`, `service_qualities`.`quality`, `service_audio_qualities`.`track_type`, `service_audio_tracks_type`.`track_order`;

--
-- Create table `bm_subtitle_companies`
--
CREATE TABLE bm_subtitle_companies (
  id INT(11) NOT NULL AUTO_INCREMENT,
  name TEXT DEFAULT NULL,
  description VARCHAR(255) DEFAULT NULL,
  userSubtitleAspx VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 3,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create view `bm_view_produced_clips`
--
CREATE 
VIEW bm_view_produced_clips
AS
SELECT
  `produced_clips`.`service_id` AS `service_id`,
  `services`.`path` AS `path`,
  `produced_clips`.`filename` AS `filename`,
  `produced_clips`.`category` AS `category`,
  `produced_clips`.`event_id` AS `event_id`,
  `produced_clips`.`published` AS `published`,
  `produced_clips`.`mediapolis_url` AS `mediapolis_url`,
  `produced_clips`.`description` AS `description`,
  `produced_clips`.`description1` AS `description1`,
  `produced_clips`.`description2` AS `description2`,
  `produced_clips`.`masters_id` AS `masters_id`,
  `produced_clips`.`bitrate` AS `bitrate`,
  `services`.`alias` AS `alias`,
  `services`.`web_server_url` AS `web_server_url`,
  `services`.`channel_code` AS `channel_code`,
  `services`.`channel_description` AS `channel_description`,
  `masters_association`.`clip_online` AS `clip_online`,
  `masters_association`.`event_name` AS `event_name`,
  `produced_clips`.`id` AS `clip_id`,
  `masters_association`.`id_mo` AS `id_mo`,
  `masters_association`.`clip_type` AS `clip_type`,
  `masters_association`.`group_id` AS `group_id`,
  `produced_clips`.`request_date` AS `request_date`,
  `masters_association`.`subtitle_company` AS `subtitle_company`,
  `masters_association`.`creation_date` AS `creation_date`,
  `produced_clips`.`distribution_date` AS `distribution_date`,
  `produced_clips_metadata_attributes`.`size` AS `size`,
  `produced_clips_metadata_attributes`.`duration` AS `duration`,
  `produced_clips_metadata_attributes`.`width` AS `width`,
  `produced_clips_metadata_attributes`.`height` AS `height`,
  `produced_screenshots`.`filename` AS `screenshot`,
  `produced_clips_metadata_attributes`.`quality` AS `quality`,
  `bm_subtitle_companies`.`name` AS `subtitle_company_name`,
  `service_qualities`.`master_quality` AS `master_quality`,
  `masters_association`.`is_raiplay_expired` AS `is_raiplay_expired`,
  `produced_clips`.`is_deleted` AS `is_deleted`
FROM ((((((`produced_clips`
  LEFT JOIN `produced_screenshots`
    ON ((`produced_screenshots`.`produced_clips_id` = `produced_clips`.`id`)))
  JOIN `services`
    ON ((`produced_clips`.`service_id` = `services`.`id`)))
  JOIN `masters_association`
    ON (((`produced_clips`.`masters_id` = `masters_association`.`id`)
    AND (`masters_association`.`service_id` = `services`.`id`))))
  JOIN `produced_clips_metadata_attributes`
    ON ((`produced_clips_metadata_attributes`.`produced_clips_id` = `produced_clips`.`id`)))
  LEFT JOIN `bm_subtitle_companies`
    ON ((`masters_association`.`subtitle_company` = `bm_subtitle_companies`.`id`)))
  JOIN `service_qualities`
    ON (((`service_qualities`.`service_id` = `services`.`id`)
    AND (`produced_clips`.`bitrate` = `service_qualities`.`quality`))));

--
-- Create view `bm_view_palinsesti_by_group_copy`
--
CREATE 
VIEW bm_view_palinsesti_by_group_copy
AS
SELECT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_channels`.`description` AS `channel_description`,
  `bm_palinsesti`.`evento_id` AS `evento_id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_palinsesti`.`programma_id` AS `programma_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`descrizione` AS `descrizione`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`datadisponibilita` AS `datadisponibilita`,
  `bm_palinsesti`.`datafinedisponibilita` AS `datafinedisponibilita`,
  `bm_palinsesti`.`image` AS `image`,
  `bm_palinsesti`.`web` AS `web`,
  `bm_palinsesti`.`mediapoliscategory` AS `mediapoliscategory`,
  `bm_palinsesti`.`diritti_1` AS `diritti_1`,
  `bm_palinsesti`.`diritti_2` AS `diritti_2`,
  `bm_palinsesti`.`diritti_3` AS `diritti_3`,
  `bm_palinsesti`.`diritti_4` AS `diritti_4`,
  `bm_palinsesti`.`diritti_5` AS `diritti_5`,
  `bm_palinsesti`.`lavorabile` AS `lavorabile`,
  `bm_palinsesti`.`status` AS `status`,
  `bm_palinsesti`.`is_online` AS `is_online`,
  `bm_palinsesti`.`is_live` AS `is_live`,
  `bm_palinsesti`.`special_event` AS `special_event`,
  `bm_palinsesti`.`feed_id` AS `feed_id`,
  `services`.`channel_code` AS `channel_code`,
  `services`.`alias` AS `channel_alias`,
  `bm_palinsesti`.`fascia_oraria` AS `fascia_oraria`,
  `bm_palinsesti`.`fascia_oraria_url` AS `fascia_oraria_url`,
  `bm_palinsesti`.`palinsesto_url` AS `palinsesto_url`,
  `bm_palinsesti`.`used_app` AS `used_app`,
  `bm_palinsesti`.`subtitle` AS `subtitle`,
  `bm_palinsesti`.`make_hl` AS `hl`,
  `bm_subtitle_companies`.`name` AS `subtitle_company_name`,
  `bm_subtitle_companies`.`description` AS `subtitle_company_description`,
  `bm_palinsesti`.`subtitle_company` AS `subtitle_company_id`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`creator` AS `creator`,
  `bm_palinsesti`.`last_modifier` AS `last_modifier`,
  `bm_channels_users_group`.`order` AS `channel_order`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`drm_category_error` AS `drm_category_error`,
  `bm_palinsesti`.`multiaudio` AS `multiaudio`,
  `bm_palinsesti`.`multiaudioError` AS `multiaudioError`
FROM ((((`bm_palinsesti`
  JOIN `bm_channels`
    ON ((`bm_palinsesti`.`channel_id` = `bm_channels`.`service_id`)))
  JOIN `services`
    ON ((`bm_channels`.`service_id` = `services`.`id`)))
  LEFT JOIN `bm_subtitle_companies`
    ON ((`bm_subtitle_companies`.`id` = `bm_palinsesti`.`subtitle_company`)))
  JOIN `bm_channels_users_group`
    ON (((`bm_channels_users_group`.`channel_id` = `bm_channels`.`service_id`)
    AND (`bm_palinsesti`.`group_id` = `bm_channels_users_group`.`group_id`))));

--
-- Create table `bm_mediapolis_categories`
--
CREATE TABLE bm_mediapolis_categories (
  category_id INT(11) UNSIGNED NOT NULL,
  description MEDIUMTEXT DEFAULT NULL,
  group_id INT(10) NOT NULL DEFAULT 1,
  PRIMARY KEY (group_id, category_id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'elenco delle categorie mediapolis';

--
-- Create index `category_id` on table `bm_mediapolis_categories`
--
ALTER TABLE bm_mediapolis_categories 
  ADD UNIQUE INDEX category_id(category_id, group_id);

DELIMITER $$

--
-- Create procedure `bm_insertUpdateMediapolisCategory`
--
CREATE PROCEDURE bm_insertUpdateMediapolisCategory(IN pCategoryId  INT(10),
                                                        IN pDescription TEXT,
                                                        IN pGroupId     INT(10)
                                                        )
BEGIN
  DECLARE bHssKey TINYINT(1) DEFAULT 0;

SELECT
  IF(category_id > 0, 1, 0) INTO bHssKey
FROM bm_mediapolis_categories
WHERE category_id = pCategoryId
AND group_id = pGroupId;

  IF bHssKey = 0 THEN
INSERT INTO bm_mediapolis_categories (category_id, group_id, description)
  VALUES (pCategoryId, pGroupId, pDescription);
ELSE
UPDATE bm_mediapolis_categories
SET description = pDescription
WHERE category_id = pCategoryId
AND group_id = pGroupId;
END IF;
END
$$

DELIMITER ;

--
-- Create view `view_exraisat_messainonda_ids_2`
--
CREATE 
VIEW view_exraisat_messainonda_ids_2
AS
SELECT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `id_messa_in_onda`,
  `services`.`id` AS `channel_id`,
  `getDataRicevuto`(`bm_palinsesti`.`messa_in_onda_id`, `bm_palinsesti`.`channel_id`, `bm_palinsesti`.`group_id`) AS `data_ricevuto`,
  `getDataInviato`(`bm_palinsesti`.`messa_in_onda_id`, `bm_palinsesti`.`channel_id`, `bm_palinsesti`.`group_id`) AS `data_inviato`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`mediapoliscategory` AS `mediapoliscategory`,
  `bm_palinsesti`.`is_online` AS `is_online`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`fine` AS `fine`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  '' AS `epg_tel_mediapolis_url`,
  `bm_channels`.`description` AS `description`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`code` AS `group_code`,
  `bm_mediapolis_categories`.`description` AS `mediapolisCategory_name`,
  `bm_schedule_palinsesto`.`id` AS `schedule_id`,
  '' AS `mediapolis_url_smooth`,
  `services`.`channel_code` AS `channel_code`
FROM (((((`bm_palinsesti`
  LEFT JOIN `bm_schedule_palinsesto`
    ON (((`bm_schedule_palinsesto`.`channel_id` = `bm_palinsesti`.`channel_id`)
    AND (`bm_schedule_palinsesto`.`group_id` = `bm_palinsesti`.`group_id`))))
  JOIN `bm_channels`
    ON ((`bm_palinsesti`.`channel_id` = `bm_channels`.`service_id`)))
  JOIN `services`
    ON ((`bm_palinsesti`.`channel_id` = `services`.`id`)))
  JOIN `bm_mediapolis_categories`
    ON (((`bm_mediapolis_categories`.`group_id` = `bm_palinsesti`.`group_id`)
    AND (`bm_palinsesti`.`mediapoliscategory` = `bm_mediapolis_categories`.`category_id`)
    AND (`services`.`id` = `bm_channels`.`service_id`))))
  JOIN `bm_groups`
    ON ((`bm_palinsesti`.`group_id` = `bm_groups`.`id`)));

--
-- Create view `view_exraisat_messainonda_ids`
--
CREATE 
VIEW view_exraisat_messainonda_ids
AS
SELECT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `id_messa_in_onda`,
  `services`.`id` AS `channel_id`,
  `getDataRicevuto`(`bm_palinsesti`.`messa_in_onda_id`, `bm_palinsesti`.`channel_id`, `bm_palinsesti`.`group_id`) AS `data_ricevuto`,
  `getDataInviato`(`bm_palinsesti`.`messa_in_onda_id`, `bm_palinsesti`.`channel_id`, `bm_palinsesti`.`group_id`) AS `data_inviato`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`mediapoliscategory` AS `mediapoliscategory`,
  `bm_palinsesti`.`is_online` AS `is_online`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`fine` AS `fine`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  `bm_palinsesti`.`cms_mediapolis_url` AS `cms_mediapolis_url`,
  '' AS `epg_tel_mediapolis_url`,
  `bm_channels`.`description` AS `description`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`code` AS `group_code`,
  `bm_mediapolis_categories`.`description` AS `mediapolisCategory_name`,
  `bm_schedule_palinsesto`.`id` AS `schedule_id`,
  '' AS `mediapolis_url_smooth`,
  `services`.`channel_code` AS `channel_code`
FROM (((((`bm_palinsesti`
  LEFT JOIN `bm_schedule_palinsesto`
    ON (((`bm_schedule_palinsesto`.`channel_id` = `bm_palinsesti`.`channel_id`)
    AND (`bm_schedule_palinsesto`.`group_id` = `bm_palinsesti`.`group_id`))))
  JOIN `bm_channels`
    ON ((`bm_palinsesti`.`channel_id` = `bm_channels`.`service_id`)))
  JOIN `services`
    ON ((`bm_palinsesti`.`channel_id` = `services`.`id`)))
  JOIN `bm_mediapolis_categories`
    ON (((`bm_mediapolis_categories`.`group_id` = `bm_palinsesti`.`group_id`)
    AND (`bm_palinsesti`.`mediapoliscategory` = `bm_mediapolis_categories`.`category_id`)
    AND (`services`.`id` = `bm_channels`.`service_id`))))
  JOIN `bm_groups`
    ON ((`bm_palinsesti`.`group_id` = `bm_groups`.`id`)));

--
-- Create view `bm_view_mediapoliscategory_by_group`
--
CREATE 
VIEW bm_view_mediapoliscategory_by_group
AS
SELECT
  `bm_mediapolis_categories`.`description` AS `description`,
  `bm_mediapolis_categories`.`category_id` AS `id`,
  `bm_mediapolis_categories`.`group_id` AS `group_id`
FROM `bm_mediapolis_categories`;

--
-- Create view `bm_view_mediapolis_category`
--
CREATE 
VIEW bm_view_mediapolis_category
AS
SELECT
  `bm_mediapolis_categories`.`category_id` AS `id`,
  `bm_mediapolis_categories`.`description` AS `description`
FROM `bm_mediapolis_categories`;

--
-- Create view `bm_view_epg_trasmissioni`
--
CREATE 
VIEW bm_view_epg_trasmissioni
AS
SELECT
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_palinsesti`.`id` AS `RceID`,
  `bm_palinsesti`.`titolo` AS `Trasmissione`,
  `bm_palinsesti`.`feed_id` AS `FEED_ID`,
  `bm_palinsesti`.`descrizione` AS `Descrizione`,
  `bm_palinsesti`.`datadisponibilita` AS `DataDisponibilita`,
  `bm_palinsesti`.`datafinedisponibilita` AS `DataFineDisponibilita`,
  `bm_palinsesti`.`epg_medipolis_url_changed` AS `epg_medipolis_url_changed`,
  `bm_palinsesti`.`cms_mediapolis_url` AS `cms_mediapolis_url`,
  `bm_palinsesti`.`mediapoliscategory` AS `mediapoliscategory`,
  DATE_FORMAT(`bm_palinsesti`.`ora`, '%d/%m/%Y %k.%i.%s') AS `Inizio`,
  `bm_palinsesti`.`ora` AS `ora`,
  '' AS `Durata`,
  'NULL' AS `EventId`,
  'NULL' AS `Stato`,
  DATE_FORMAT(`bm_palinsesti`.`fine`, '%d/%m/%Y %k.%i.%s') AS `Fine`,
  `bm_palinsesti`.`lavorabile` AS `Lavorabile`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `mediapolisUrl`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `mediapolisUrlSat`,
  `bm_palinsesti`.`epg_tel_filename` AS `filename`,
  '' AS `highlight`,
  '' AS `sottotitoli`,
  '' AS `tagli`,
  `bm_palinsesti`.`is_rce` AS `is_rce`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  'h264_torino' AS `txProfile`,
  'mp4' AS `format`,
  'ss' AS `formatSs`,
  `bm_palinsesti`.`is_online` AS `online`,
  `bm_palinsesti`.`drm_flag` AS `drm_flag`,
  `bm_palinsesti`.`drm_category_error` AS `drm_category_error`,
  IF((ISNULL(`bm_palinsesti`.`diritti_2`) OR (`bm_palinsesti`.`diritti_2` = '') OR (`bm_palinsesti`.`diritti_2` LIKE '%GEOPROTEZIONE:EVERYWHERE%') OR (`bm_palinsesti`.`diritti_2` LIKE 'FALSE')), FALSE, TRUE) AS `geoprotected`,
  `bm_mediapolis_categories`.`description` AS `category_description`
FROM (`bm_palinsesti`
  JOIN `bm_mediapolis_categories`
    ON (((`bm_palinsesti`.`mediapoliscategory` = `bm_mediapolis_categories`.`category_id`)
    AND (`bm_mediapolis_categories`.`group_id` = `bm_palinsesti`.`group_id`))))
WHERE ((`bm_palinsesti`.`status` > -(1))
AND (DATE_FORMAT(`bm_palinsesti`.`ora`, '%Y%m%d') > DATE_FORMAT((CURDATE() - INTERVAL 8 DAY), '%Y%m%d'))
AND (DATE_FORMAT(`bm_palinsesti`.`ora`, '%Y%m%d') <= DATE_FORMAT(CURDATE(), '%Y%m%d')))
ORDER BY `bm_palinsesti`.`ora`;

--
-- Create table `bm_category_pattern`
--
CREATE TABLE bm_category_pattern (
  id INT(11) NOT NULL AUTO_INCREMENT,
  pattern TEXT DEFAULT NULL,
  category_id INT(11) UNSIGNED NOT NULL,
  channel_id INT(11) UNSIGNED NOT NULL,
  group_id INT(11) NOT NULL,
  is_geoprotected TINYINT(1) NOT NULL DEFAULT 0,
  multiaudio TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 771,
AVG_ROW_LENGTH = 2048,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'relaziona le categorie specifiche';

--
-- Create foreign key
--
ALTER TABLE bm_category_pattern 
  ADD CONSTRAINT FK_bm_category_pattern_bm_channels_service_id FOREIGN KEY (channel_id)
    REFERENCES bm_channels(service_id);

--
-- Create foreign key
--
ALTER TABLE bm_category_pattern 
  ADD CONSTRAINT FK_bm_category_pattern_bm_groups_id FOREIGN KEY (group_id)
    REFERENCES bm_groups(id);

--
-- Create foreign key
--
ALTER TABLE bm_category_pattern 
  ADD CONSTRAINT FK_bm_category_pattern_bm_mediapolis_categories_category_id FOREIGN KEY (category_id)
    REFERENCES bm_mediapolis_categories(category_id);

--
-- Create table `bm_categories_trasmissions`
--
CREATE TABLE bm_categories_trasmissions (
  id INT(11) NOT NULL AUTO_INCREMENT,
  name TEXT DEFAULT NULL COMMENT 'nome della fascia oraria',
  category_id INT(11) UNSIGNED NOT NULL COMMENT 'id della categoria mediapolis',
  channel_id INT(11) UNSIGNED NOT NULL COMMENT 'id del canale',
  broadcast_name TEXT DEFAULT NULL COMMENT 'opzionale è il nome della trasmissione a cui associare la categoria',
  date_from TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'fascia oraria da',
  date_to TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01' COMMENT 'fascia oraria a',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'Contine le categorie di default necessarie al palinsesto';

--
-- Create foreign key
--
ALTER TABLE bm_categories_trasmissions 
  ADD CONSTRAINT FK_bm_categories_default_bm_channels_service_id FOREIGN KEY (channel_id)
    REFERENCES bm_channels(service_id);

--
-- Create foreign key
--
ALTER TABLE bm_categories_trasmissions 
  ADD CONSTRAINT FK_bm_categories_default_bm_mediapolis_categories_category_id FOREIGN KEY (category_id)
    REFERENCES bm_mediapolis_categories(category_id);

--
-- Create table `roles`
--
CREATE TABLE roles (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) DEFAULT NULL,
  description VARCHAR(255) DEFAULT NULL,
  code VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 9,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `bm_specialevents_groups`
--
CREATE TABLE bm_specialevents_groups (
  group_id INT(11) NOT NULL,
  role_id BIGINT(20) NOT NULL,
  special_event_id INT(11) NOT NULL,
  isDefault TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT '1 se lo special event è di default',
  channel_default VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (group_id, role_id, special_event_id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 481,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'setting ';

--
-- Create index `UK_bm_specialevents_groups` on table `bm_specialevents_groups`
--
ALTER TABLE bm_specialevents_groups 
  ADD UNIQUE INDEX UK_bm_specialevents_groups(group_id, role_id, special_event_id);

--
-- Create foreign key
--
ALTER TABLE bm_specialevents_groups 
  ADD CONSTRAINT FK_bm_specialevents_groups_bm_groups_id FOREIGN KEY (group_id)
    REFERENCES bm_groups(id);

--
-- Create foreign key
--
ALTER TABLE bm_specialevents_groups 
  ADD CONSTRAINT FK_bm_specialevents_groups_bm_specialEvents_id FOREIGN KEY (special_event_id)
    REFERENCES bm_specialEvents(id);

--
-- Create foreign key
--
ALTER TABLE bm_specialevents_groups 
  ADD CONSTRAINT FK_bm_specialevents_groups_roles_id FOREIGN KEY (role_id)
    REFERENCES roles(id);

--
-- Create view `bm_view_specialevents_groups`
--
CREATE 
VIEW bm_view_specialevents_groups
AS
SELECT
  `bm_specialevents_groups`.`group_id` AS `group_id`,
  `bm_specialevents_groups`.`role_id` AS `role_id`,
  `bm_specialevents_groups`.`special_event_id` AS `id`,
  `bm_specialevents_groups`.`channel_default` AS `channel_default`,
  `bm_specialEvents`.`description` AS `description`,
  `bm_specialEvents`.`code` AS `code`,
  `bm_specialEvents`.`bumper` AS `bumper`,
  `bm_specialEvents`.`showComboTime` AS `showComboTime`,
  `bm_specialEvents`.`support_service_alias` AS `support_service_alias`,
  `bm_specialEvents`.`time_part_in_hl` AS `time_part_in_hl`,
  `bm_specialevents_groups`.`isDefault` AS `specialevent_default`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`description` AS `group_description`,
  `bm_groups`.`code` AS `group_code`,
  `bm_groups`.`default_page_after_login` AS `default_page_after_login`,
  `roles`.`name` AS `role_name`,
  `roles`.`description` AS `role_description`,
  `roles`.`code` AS `role_code`,
  `bm_specialEvents`.`module` AS `module`,
  `bm_applications`.`name` AS `application_name`,
  `bm_applications`.`code` AS `application_code`,
  `bm_specialEvents`.`is_category_required` AS `is_category_required`
FROM ((((`bm_specialevents_groups`
  JOIN `bm_specialEvents`
    ON ((`bm_specialevents_groups`.`special_event_id` = `bm_specialEvents`.`id`)))
  JOIN `bm_groups`
    ON ((`bm_specialevents_groups`.`group_id` = `bm_groups`.`id`)))
  JOIN `roles`
    ON ((`bm_specialevents_groups`.`role_id` = `roles`.`id`)))
  JOIN `bm_applications`
    ON ((`bm_specialEvents`.`application_id` = `bm_applications`.`id`)));

--
-- Create table `bm_applications_group`
--
CREATE TABLE bm_applications_group (
  application_id INT(11) DEFAULT NULL,
  group_id INT(11) DEFAULT NULL,
  role_id BIGINT(20) DEFAULT NULL,
  isDefault TINYINT(1) UNSIGNED NOT NULL DEFAULT 0
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 496,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create foreign key
--
ALTER TABLE bm_applications_group 
  ADD CONSTRAINT FK_bm_applications_group_bm_applications_id FOREIGN KEY (application_id)
    REFERENCES bm_applications(id);

--
-- Create foreign key
--
ALTER TABLE bm_applications_group 
  ADD CONSTRAINT FK_bm_applications_group_bm_groups_id FOREIGN KEY (group_id)
    REFERENCES bm_groups(id);

--
-- Create foreign key
--
ALTER TABLE bm_applications_group 
  ADD CONSTRAINT FK_bm_applications_group_roles_id FOREIGN KEY (role_id)
    REFERENCES roles(id);

--
-- Create view `view_exraisat_metadata`
--
CREATE 
VIEW view_exraisat_metadata
AS
SELECT
  `bm_palinsesti`.`id` AS `event_id`,
  `bm_palinsesti`.`channel_id` AS `service_id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_palinsesti`.`feed_id` AS `feed_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`descrizione` AS `descrizione`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`web` AS `web`,
  `bm_palinsesti`.`image` AS `image`,
  `bm_palinsesti`.`mediapoliscategory` AS `mediapoliscategory`,
  `bm_palinsesti`.`diritti_1` AS `diritti_1`,
  `bm_palinsesti`.`diritti_2` AS `diritti_2`,
  `bm_palinsesti`.`diritti_3` AS `diritti_3`,
  `bm_palinsesti`.`diritti_4` AS `diritti_4`,
  `bm_palinsesti`.`diritti_5` AS `diritti_5`,
  `bm_palinsesti`.`fascia_oraria` AS `fascia_oraria`,
  `bm_palinsesti`.`lavorabile` AS `lavorabile`,
  `bm_palinsesti`.`subtitle_company` AS `subtitle_company`,
  `bm_applications`.`code` AS `application_code`
FROM (((`bm_schedule_palinsesto`
  JOIN `bm_palinsesti`
    ON (((`bm_schedule_palinsesto`.`channel_id` = `bm_palinsesti`.`channel_id`)
    AND (`bm_palinsesti`.`group_id` = `bm_schedule_palinsesto`.`group_id`))))
  JOIN `bm_applications_group`
    ON ((`bm_applications_group`.`group_id` = `bm_palinsesti`.`group_id`)))
  JOIN `bm_applications`
    ON (((`bm_applications_group`.`application_id` = `bm_applications`.`id`)
    AND (`bm_applications_group`.`group_id` = `bm_schedule_palinsesto`.`group_id`))))
WHERE ((`bm_schedule_palinsesto`.`schedule` = 1)
OR (`bm_schedule_palinsesto`.`generate_palinsesto_entry` = 1))
ORDER BY `bm_palinsesti`.`id` DESC;

--
-- Create view `bm_view_application_group`
--
CREATE 
VIEW bm_view_application_group
AS
SELECT
  `bm_applications_group`.`application_id` AS `application_id`,
  `bm_applications_group`.`group_id` AS `group_id`,
  `bm_applications_group`.`role_id` AS `role_id`,
  `bm_applications_group`.`isDefault` AS `isDefault`,
  `bm_applications`.`name` AS `application_name`,
  `bm_applications`.`code` AS `application_code`,
  `bm_applications`.`active` AS `application_active`,
  `bm_applications`.`descrizione` AS `application_description`,
  `bm_applications`.`showImage` AS `application_showImage`,
  `bm_applications`.`has_hl_live` AS `application_has_hl_live`,
  `bm_applications`.`summary` AS `application_summary`,
  `roles`.`name` AS `role_name`,
  `roles`.`description` AS `role_description`,
  `roles`.`code` AS `role_code`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`description` AS `group_description`,
  `bm_groups`.`code` AS `group_code`
FROM (((`bm_applications_group`
  JOIN `bm_applications`
    ON ((`bm_applications_group`.`application_id` = `bm_applications`.`id`)))
  JOIN `bm_groups`
    ON ((`bm_applications_group`.`group_id` = `bm_groups`.`id`)))
  JOIN `roles`
    ON ((`bm_applications_group`.`role_id` = `roles`.`id`)));

--
-- Create table `users`
--
CREATE TABLE users (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  first_name TEXT DEFAULT NULL,
  last_name TEXT DEFAULT NULL,
  email VARCHAR(255) NOT NULL DEFAULT '',
  username VARCHAR(255) NOT NULL,
  password VARCHAR(155) DEFAULT NULL,
  company_id INT(11) DEFAULT -1,
  enabled TINYINT(1) DEFAULT 1,
  alternate_mail_list VARCHAR(5000) NOT NULL DEFAULT '',
  temp_auth VARCHAR(255) DEFAULT NULL,
  temp_expire DATETIME DEFAULT NULL,
  system_user TINYINT(1) UNSIGNED DEFAULT 0,
  password_expiredate DATETIME DEFAULT NULL,
  last_login DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 280,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8,
COLLATE utf8_general_ci;

--
-- Create index `UK_users_email` on table `users`
--
ALTER TABLE users 
  ADD UNIQUE INDEX UK_users_email(email);

--
-- Create index `username` on table `users`
--
ALTER TABLE users 
  ADD UNIQUE INDEX username(username);

--
-- Create view `bm_view_events`
--
CREATE 
VIEW bm_view_events
AS
SELECT
  `bm_events`.`id` AS `id`,
  `bm_events`.`service_id` AS `service_id`,
  `services`.`alias` AS `alias`,
  `services`.`channel_code` AS `channel_code`,
  `services`.`channel_description` AS `channel_description`,
  `bm_events`.`mediapolis_category_id` AS `mediapolis_category_id`,
  `bm_mediapolis_categories`.`description` AS `mediapolis_description`,
  `bm_events`.`name` AS `name`,
  `bm_events`.`description` AS `description`,
  `bm_events`.`start_date` AS `start_date`,
  `bm_events`.`end_date` AS `end_date`,
  `bm_events`.`special_event` AS `special_event`,
  `bm_events`.`creation_date` AS `creation_date`,
  `bm_events`.`status` AS `status`,
  `bm_events`.`live` AS `is_live`,
  `bm_events`.`rec_from` AS `rec_from`,
  `bm_events`.`rec_to` AS `rec_to`,
  `bm_events`.`rec_id` AS `rec_id`,
  `bm_events`.`online` AS `online`,
  `bm_events`.`used_app` AS `used_app`,
  `bm_events`.`feedId` AS `feedId`,
  `bm_events`.`geoprotection` AS `geoprotection`,
  (SELECT
      `bm_applications`.`code` AS `application_code`
    FROM (`bm_specialEvents`
      JOIN `bm_applications`
        ON ((`bm_specialEvents`.`application_id` = `bm_applications`.`id`)))
    WHERE (`bm_specialEvents`.`code` = CONVERT(`bm_events`.`special_event` USING utf8mb4)) LIMIT 1) AS `application_code`,
  `bm_events`.`hl` AS `hl`,
  `bm_events`.`group_id` AS `group_id`,
  `bm_events`.`creator` AS `creator`,
  `bm_events`.`last_modifier` AS `last_modifier`,
  `bm_events`.`last_modified` AS `last_modified`,
  `users`.`first_name` AS `last_modifier_first_name`,
  `users`.`last_name` AS `last_modifier_last_name`,
  `creatorUser`.`first_name` AS `creator_user_first_name`,
  `creatorUser`.`last_name` AS `creator_user_last_name`,
  `bm_subtitle_companies`.`name` AS `subtitle_company_name`,
  `bm_subtitle_companies`.`description` AS `subtitle_company_description`,
  `bm_events`.`subtitle` AS `subtitle`,
  `bm_events`.`subtitle_company` AS `subtitle_company_id`,
  `bm_events`.`is_backup` AS `is_backup`,
  `bm_events`.`rec_status` AS `rec_status`,
  `bm_events`.`exclusive_role_lock` AS `exclusive_role_lock`,
  `bm_events`.`make_ads` AS `make_ads`,
  `bm_events`.`forceRecordedButton` AS `forceRecordedButton`,
  `bm_events`.`cliptype_selection` AS `cliptype_selection`,
  `bm_events`.`drm_flag` AS `drm_flag`,
  `bm_events`.`drm_category_error` AS `drm_category_error`,
  `bm_events`.`multiaudio` AS `multiaudio`,
  `bm_events`.`multiaudioError` AS `multiaudioError`
FROM (((((`bm_events`
  JOIN `services`
    ON ((`bm_events`.`service_id` = `services`.`id`)))
  JOIN `bm_mediapolis_categories`
    ON (((`bm_events`.`mediapolis_category_id` = `bm_mediapolis_categories`.`category_id`)
    AND (`bm_mediapolis_categories`.`group_id` = `bm_events`.`group_id`))))
  LEFT JOIN `bm_subtitle_companies`
    ON ((`bm_events`.`subtitle_company` = `bm_subtitle_companies`.`id`)))
  LEFT JOIN `users`
    ON ((`users`.`id` = `bm_events`.`last_modifier`)))
  LEFT JOIN `users` `creatorUser`
    ON ((`creatorUser`.`id` = `bm_events`.`creator`)));

--
-- Create table `bm_users_workgroups`
--
CREATE TABLE bm_users_workgroups (
  user_id BIGINT(20) NOT NULL,
  group_id INT(11) NOT NULL,
  `default` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (user_id, group_id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 3276,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'gruppi di lavoro (sottogruppi) che vengono gestiti dall''utente';

--
-- Create index `UK_bm_users_workgroups` on table `bm_users_workgroups`
--
ALTER TABLE bm_users_workgroups 
  ADD UNIQUE INDEX UK_bm_users_workgroups(group_id, user_id);

--
-- Create foreign key
--
ALTER TABLE bm_users_workgroups 
  ADD CONSTRAINT FK_bm_users_workgroups_bm_groups_id FOREIGN KEY (group_id)
    REFERENCES bm_groups(id);

--
-- Create foreign key
--
ALTER TABLE bm_users_workgroups 
  ADD CONSTRAINT FK_bm_users_workgroups_users_id FOREIGN KEY (user_id)
    REFERENCES users(id);

--
-- Create table `bm_users_groups`
--
CREATE TABLE bm_users_groups (
  user_id BIGINT(20) NOT NULL,
  group_id INT(11) NOT NULL,
  role_id BIGINT(20) NOT NULL,
  default_access TINYINT(1) UNSIGNED NOT NULL DEFAULT 1,
  PRIMARY KEY (user_id, group_id, role_id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 144,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create foreign key
--
ALTER TABLE bm_users_groups 
  ADD CONSTRAINT FK_bm_users_groups FOREIGN KEY (role_id)
    REFERENCES roles(id);

--
-- Create foreign key
--
ALTER TABLE bm_users_groups 
  ADD CONSTRAINT FK_bm_users_groups_bm_groups_id FOREIGN KEY (group_id)
    REFERENCES bm_groups(id);

--
-- Create foreign key
--
ALTER TABLE bm_users_groups 
  ADD CONSTRAINT FK_bm_users_groups_users_id FOREIGN KEY (user_id)
    REFERENCES users(id);

--
-- Create view `view_users_by_group_expressvideo`
--
CREATE 
VIEW view_users_by_group_expressvideo
AS
SELECT
  `users`.`first_name` AS `first_name`,
  `users`.`last_name` AS `last_name`,
  `users`.`email` AS `email`,
  `users`.`company_id` AS `company_id`,
  `users`.`username` AS `username`,
  `roles`.`code` AS `role`,
  `users`.`password` AS `password`,
  `users`.`enabled` AS `enabled`,
  `roles`.`name` AS `role_name`,
  `bm_users_groups`.`group_id` AS `group_id`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`description` AS `group_description`,
  `bm_groups`.`code` AS `group_code`,
  `bm_groups`.`default_page_after_login` AS `default_page_after_login`,
  `users`.`alternate_mail_list` AS `alternate_mail_list`,
  `bm_users_groups`.`default_access` AS `default_access`,
  `bm_users_groups`.`default_access` AS `default_role`,
  `bm_users_groups`.`role_id` AS `role_id`,
  `bm_users_groups`.`user_id` AS `user_id`,
  `bm_groups`.`visible_day_in_palinsesto` AS `visible_day_in_palinsesto`,
  `users`.`system_user` AS `system_user`
FROM (((`users`
  JOIN `bm_users_groups`
    ON ((`bm_users_groups`.`user_id` = `users`.`id`)))
  JOIN `bm_groups`
    ON ((`bm_users_groups`.`group_id` = `bm_groups`.`id`)))
  JOIN `roles`
    ON ((`bm_users_groups`.`role_id` = `roles`.`id`)))
WHERE (`bm_users_groups`.`default_access` = 1);

--
-- Create view `view_users_by_group`
--
CREATE 
VIEW view_users_by_group
AS
SELECT
  `users`.`first_name` AS `first_name`,
  `users`.`last_name` AS `last_name`,
  `users`.`email` AS `email`,
  `users`.`company_id` AS `company_id`,
  `users`.`username` AS `username`,
  `users`.`password` AS `password`,
  `roles`.`code` AS `role`,
  `users`.`enabled` AS `enabled`,
  `roles`.`name` AS `role_name`,
  `bm_users_groups`.`group_id` AS `group_id`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`description` AS `group_description`,
  `bm_groups`.`code` AS `group_code`,
  `bm_groups`.`default_page_after_login` AS `default_page_after_login`,
  `users`.`alternate_mail_list` AS `alternate_mail_list`,
  `bm_users_groups`.`default_access` AS `default_access`,
  `bm_users_groups`.`default_access` AS `default_role`,
  `bm_users_groups`.`role_id` AS `role_id`,
  `bm_users_groups`.`user_id` AS `user_id`,
  `bm_groups`.`visible_day_in_palinsesto` AS `visible_day_in_palinsesto`,
  `users`.`system_user` AS `system_user`
FROM (((`users`
  JOIN `bm_users_groups`
    ON ((`bm_users_groups`.`user_id` = `users`.`id`)))
  JOIN `bm_groups`
    ON ((`bm_users_groups`.`group_id` = `bm_groups`.`id`)))
  JOIN `roles`
    ON ((`bm_users_groups`.`role_id` = `roles`.`id`)));

--
-- Create view `view_users`
--
CREATE 
VIEW view_users
AS
SELECT
  `users`.`first_name` AS `first_name`,
  `users`.`last_name` AS `last_name`,
  `users`.`email` AS `email`,
  `users`.`alternate_mail_list` AS `alternate_mail_list`,
  `users`.`company_id` AS `company_id`,
  `users`.`username` AS `username`,
  `users`.`enabled` AS `enabled`,
  `users`.`password` AS `password`,
  `roles`.`code` AS `role`,
  `roles`.`name` AS `role_name`,
  `bm_users_groups`.`group_id` AS `group_id`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`description` AS `group_description`,
  `bm_groups`.`code` AS `group_code`,
  `bm_groups`.`default_page_after_login` AS `default_page_after_login`,
  `bm_users_groups`.`user_id` AS `user_id`,
  `bm_users_groups`.`role_id` AS `role_id`,
  `bm_users_groups`.`default_access` AS `default_access`,
  `bm_groups`.`visible_day_in_palinsesto` AS `visible_day_in_palinsesto`,
  `users`.`system_user` AS `system_user`
FROM (((`users`
  JOIN `bm_users_groups`
    ON ((`bm_users_groups`.`user_id` = `users`.`id`)))
  JOIN `bm_groups`
    ON ((`bm_users_groups`.`group_id` = `bm_groups`.`id`)))
  JOIN `roles`
    ON ((`bm_users_groups`.`role_id` = `roles`.`id`)))
WHERE (`bm_users_groups`.`default_access` = 1);

--
-- Create view `bm_view_workgroup`
--
CREATE 
VIEW bm_view_workgroup
AS
SELECT
  `bm_users_groups`.`user_id` AS `user_id`,
  `bm_users_groups`.`group_id` AS `group_id`,
  `bm_users_groups`.`default_access` AS `default_group`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`description` AS `group_description`,
  `bm_groups`.`code` AS `group_code`,
  `users`.`first_name` AS `first_name`,
  `users`.`last_name` AS `last_name`,
  `users`.`username` AS `username`,
  `bm_groups`.`default_page_after_login` AS `default_page_after_login`
FROM ((`bm_users_groups`
  JOIN `bm_groups`
    ON ((`bm_users_groups`.`group_id` = `bm_groups`.`id`)))
  JOIN `users`
    ON ((`bm_users_groups`.`user_id` = `users`.`id`)));

--
-- Create view `bm_view_users_list`
--
CREATE 
VIEW bm_view_users_list
AS
SELECT
  `users`.`first_name` AS `first_name`,
  `users`.`last_name` AS `last_name`,
  `users`.`email` AS `email`,
  `users`.`alternate_mail_list` AS `alternate_mail_list`,
  `users`.`company_id` AS `company_id`,
  `users`.`password` AS `password`,
  `users`.`username` AS `username`,
  `users`.`enabled` AS `enabled`,
  `roles`.`code` AS `role`,
  `roles`.`name` AS `role_name`,
  `bm_users_groups`.`group_id` AS `group_id`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`description` AS `group_description`,
  `bm_groups`.`code` AS `group_code`,
  `bm_groups`.`default_page_after_login` AS `default_page_after_login`,
  `bm_users_groups`.`user_id` AS `user_id`,
  `bm_users_groups`.`role_id` AS `role_id`,
  `bm_users_groups`.`default_access` AS `default_access`,
  `bm_groups`.`visible_day_in_palinsesto` AS `visible_day_in_palinsesto`,
  `users`.`system_user` AS `system_user`
FROM (((`users`
  JOIN `bm_users_groups`
    ON ((`bm_users_groups`.`user_id` = `users`.`id`)))
  JOIN `bm_groups`
    ON ((`bm_users_groups`.`group_id` = `bm_groups`.`id`)))
  JOIN `roles`
    ON ((`bm_users_groups`.`role_id` = `roles`.`id`)));

--
-- Create view `bm_view_scheduler_user_groups`
--
CREATE 
VIEW bm_view_scheduler_user_groups
AS
SELECT DISTINCT
  `services`.`id` AS `channel_id`,
  `services`.`channel_code` AS `channel_code`,
  `bm_schedule_palinsesto`.`group_id` AS `group_id`,
  `roles`.`code` AS `role_code`,
  `bm_users_groups`.`user_id` AS `user_id`
FROM ((((`bm_schedule_palinsesto`
  JOIN `services`
    ON ((`bm_schedule_palinsesto`.`channel_id` = `services`.`id`)))
  JOIN `bm_users_groups`
    ON ((`bm_users_groups`.`group_id` = `bm_schedule_palinsesto`.`group_id`)))
  JOIN `bm_users_groups` `bm_users_groups_1`
    ON (((`bm_users_groups_1`.`group_id` = `bm_users_groups`.`group_id`)
    AND (`bm_users_groups_1`.`user_id` = `bm_users_groups`.`user_id`))))
  JOIN `roles`
    ON ((`bm_users_groups_1`.`role_id` = `roles`.`id`)));

--
-- Create view `bm_view_channels_by_group_for_scheduler`
--
CREATE 
VIEW bm_view_channels_by_group_for_scheduler
AS
SELECT
  `bm_channels`.`service_id` AS `id`,
  `bm_channels`.`description` AS `description`,
  `services`.`alias` AS `alias`,
  `services`.`channel_code` AS `code`,
  IF(ISNULL(`bm_channels`.`description`), `services`.`channel_description`, `bm_channels`.`description`) AS `channel_description`,
  `bm_channels`.`palinsesto_url` AS `palinsesto_url`,
  `bm_mediapolis_categories`.`description` AS `mediapolis_description`,
  `services_types_typological`.`code` AS `type_code`,
  `bm_channels_users_group`.`default_category` AS `default_category`,
  `bm_channels_users_group`.`default_category` AS `default_mediapolis`,
  `bm_groups`.`id` AS `group_id`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`code` AS `group_code`,
  `bm_groups`.`description` AS `group_description`,
  `bm_channels_users_group`.`order` AS `order`,
  `bm_users_groups`.`user_id` AS `user_id`,
  `users`.`username` AS `username`
FROM (((((((`bm_channels`
  JOIN `services`
    ON ((`bm_channels`.`service_id` = `services`.`id`)))
  JOIN `services_types_typological`
    ON ((`services`.`services_type_typological_id` = `services_types_typological`.`id`)))
  JOIN `bm_channels_users_group`
    ON ((`bm_channels_users_group`.`channel_id` = `bm_channels`.`service_id`)))
  JOIN `bm_groups`
    ON ((`bm_channels_users_group`.`group_id` = `bm_groups`.`id`)))
  JOIN `bm_mediapolis_categories`
    ON (((`bm_channels_users_group`.`default_category` = `bm_mediapolis_categories`.`category_id`)
    AND (`bm_mediapolis_categories`.`group_id` = `bm_channels_users_group`.`group_id`))))
  JOIN `bm_users_groups`
    ON ((`bm_users_groups`.`group_id` = `bm_groups`.`id`)))
  JOIN `users`
    ON ((`bm_users_groups`.`user_id` = `users`.`id`)))
WHERE (`users`.`username` LIKE '%schedu%');

--
-- Create view `bm_view_all_roles`
--
CREATE 
VIEW bm_view_all_roles
AS
SELECT DISTINCT
  `roles`.`name` AS `name`,
  `roles`.`description` AS `description`,
  `roles`.`code` AS `code`,
  `bm_users_groups`.`user_id` AS `user_id`,
  `bm_users_groups`.`role_id` AS `role_id`,
  `bm_users_groups`.`default_access` AS `default_role`
FROM ((`users`
  JOIN `bm_users_groups`
    ON ((`bm_users_groups`.`user_id` = `users`.`id`)))
  JOIN `roles`
    ON ((`bm_users_groups`.`role_id` = `roles`.`id`)));

--
-- Create view `bm_view_all_groups`
--
CREATE 
VIEW bm_view_all_groups
AS
SELECT
  `bm_users_groups`.`user_id` AS `user_id`,
  `bm_users_groups`.`group_id` AS `id`,
  `bm_users_groups`.`default_access` AS `default_access`,
  `bm_groups`.`name` AS `name`,
  `bm_groups`.`description` AS `description`,
  `bm_groups`.`code` AS `code`,
  `users`.`first_name` AS `first_name`,
  `users`.`last_name` AS `last_name`,
  `users`.`username` AS `username`,
  `bm_groups`.`default_page_after_login` AS `default_page_after_login`,
  `roles`.`name` AS `role_name`,
  `roles`.`description` AS `role_description`,
  `bm_users_groups`.`role_id` AS `role_id`,
  `roles`.`code` AS `role_code`,
  `bm_groups`.`visible_day_in_palinsesto` AS `visible_day_in_palinsesto`
FROM (((`bm_users_groups`
  JOIN `bm_groups`
    ON ((`bm_users_groups`.`group_id` = `bm_groups`.`id`)))
  JOIN `users`
    ON ((`bm_users_groups`.`user_id` = `users`.`id`)))
  JOIN `roles`
    ON ((`bm_users_groups`.`role_id` = `roles`.`id`)));

--
-- Create table `washi_channels_categories`
--
CREATE TABLE washi_channels_categories (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'categorie canali washi',
  channel_code VARCHAR(50) DEFAULT NULL,
  washi_channel_name VARCHAR(255) DEFAULT NULL,
  washi_channel_category VARCHAR(500) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 30,
AVG_ROW_LENGTH = 963,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create index `UK_washi_channels_categories_channel_code` on table `washi_channels_categories`
--
ALTER TABLE washi_channels_categories 
  ADD UNIQUE INDEX UK_washi_channels_categories_channel_code(channel_code);

--
-- Create table `vds_archive`
--
CREATE TABLE vds_archive (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  title TEXT DEFAULT NULL,
  media TEXT DEFAULT NULL,
  creation_date TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  last_modify TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  group_id INT(11) UNSIGNED NOT NULL DEFAULT 0,
  user_id INT(11) UNSIGNED NOT NULL DEFAULT 0,
  status CHAR(4) NOT NULL DEFAULT 'N' COMMENT 'Y=>online,N=non lavorato,P=in attesa di pubblicazione',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 89,
AVG_ROW_LENGTH = 202,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'archivio indirizzi mediapolis';

--
-- Create view `view_vds_archive`
--
CREATE 
VIEW view_vds_archive
AS
SELECT
  `vds_archive`.`id` AS `id`,
  `vds_archive`.`title` AS `title`,
  `vds_archive`.`media` AS `media`,
  `vds_archive`.`creation_date` AS `creation_date`,
  `vds_archive`.`last_modify` AS `last_modify`,
  `vds_archive`.`group_id` AS `group_id`,
  `vds_archive`.`user_id` AS `user_id`,
  `vds_archive`.`status` AS `status`,
  `users`.`first_name` AS `first_name`,
  `users`.`last_name` AS `last_name`
FROM (`vds_archive`
  LEFT JOIN `users`
    ON ((`vds_archive`.`user_id` = `users`.`id`)));

--
-- Create table `service_watchfolder_qualities`
--
CREATE TABLE service_watchfolder_qualities (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  source_quality VARCHAR(5000) NOT NULL DEFAULT '',
  inner_path VARCHAR(5000) NOT NULL DEFAULT '',
  active VARCHAR(1) NOT NULL DEFAULT 'N',
  master_quality VARCHAR(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 813,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create view `view_master_service_qualities`
--
CREATE 
VIEW view_master_service_qualities
AS
SELECT
  `services`.`alias` AS `service_id`,
  `service_watchfolder_qualities`.`inner_path` AS `inner_path`,
  `service_watchfolder_qualities`.`active` AS `active`,
  `service_watchfolder_qualities`.`master_quality` AS `master_quality`,
  `service_watchfolder_qualities`.`source_quality` AS `source_quality`
FROM (`services`
  JOIN `service_watchfolder_qualities`
    ON ((`services`.`id` = `service_watchfolder_qualities`.`service_id`)));

--
-- Create table `editor_routing_configuration`
--
CREATE TABLE editor_routing_configuration (
  id INT(11) NOT NULL AUTO_INCREMENT,
  service_id INT(10) NOT NULL COMMENT 'id del canale -> tabella service',
  http_server_for_images TEXT NOT NULL COMMENT 'url della virtual directory dove verranno erogate le immagini dei markers',
  http_path_for_server_image TEXT NOT NULL COMMENT 'path della virtual directory dove saranno memorizzate le immagini dei markers',
  http_web_server TEXT NOT NULL COMMENT 'utilizzato per la sola visualizzazione dell''help o di future pagine web..',
  is_default TINYINT(1) NOT NULL DEFAULT 0,
  editor_ip TEXT DEFAULT NULL COMMENT 'indirizzo ip in cui e'' presente l''istanza dell''editor',
  PRIMARY KEY (id, service_id),
  UNIQUE INDEX id(id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 56,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create view `view_editor_routing`
--
CREATE 
VIEW view_editor_routing
AS
SELECT
  `editor_routing_configuration`.`service_id` AS `service_id`,
  IF((`services`.`channel_code` IS NOT NULL), `services`.`channel_code`, 'default') AS `channel_code`,
  `editor_routing_configuration`.`http_server_for_images` AS `http_server_for_images`,
  `editor_routing_configuration`.`http_path_for_server_image` AS `http_path_for_server_image`,
  `editor_routing_configuration`.`http_web_server` AS `http_web_server`,
  IF((`services_route_table`.`business_ip` IS NOT NULL), `services_route_table`.`business_ip`, (SELECT
      `services_route_table`.`business_ip`
    FROM `services_route_table`
    ORDER BY `services_route_table`.`id` LIMIT 1)) AS `business_ip`,
  `editor_routing_configuration`.`is_default` AS `default`,
  `editor_routing_configuration`.`editor_ip` AS `editor_ip`
FROM ((`editor_routing_configuration`
  LEFT JOIN `services`
    ON ((`editor_routing_configuration`.`service_id` = `services`.`id`)))
  LEFT JOIN `services_route_table`
    ON ((`services`.`services_route_table_id` = `services_route_table`.`id`)));

--
-- Create table `bm_subtitle_job_clip`
--
CREATE TABLE bm_subtitle_job_clip (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  master_id INT(11) NOT NULL,
  company_id INT(11) NOT NULL DEFAULT -1,
  upload_status VARCHAR(50) DEFAULT NULL COMMENT 'N=non upload,Y=upload',
  upload_update DATETIME DEFAULT NULL,
  upload_location_url TEXT DEFAULT NULL,
  srt_id INT(10) DEFAULT -1,
  original_ext VARCHAR(10) DEFAULT NULL,
  PRIMARY KEY (id, master_id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 21,
AVG_ROW_LENGTH = 963,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'Definisce il lavoro del job dei sottotitoli';

--
-- Create index `UK_bm_subtitle_job_event_id` on table `bm_subtitle_job_clip`
--
ALTER TABLE bm_subtitle_job_clip 
  ADD UNIQUE INDEX UK_bm_subtitle_job_event_id(master_id);

--
-- Create view `bm_view_subtitlejob_status_clip`
--
CREATE 
VIEW bm_view_subtitlejob_status_clip
AS
SELECT
  `masters_association`.`event_id` AS `event_id`,
  (CONVERT(`bm_palinsesti`.`titolo` USING utf8) COLLATE utf8_general_ci) AS `palinsesto_title`,
  `bm_palinsesti`.`ora` AS `palinsesto_time`,
  `bm_palinsesti`.`image` AS `palinesto_image`,
  `bm_palinsesti`.`web` AS `palinesto_web`,
  (CONVERT(`bm_palinsesti`.`special_event` USING utf8) COLLATE utf8_general_ci) AS `palinesto_special_event_code`,
  `bm_palinsesti`.`is_online` AS `palinesto_is_online`,
  `bm_palinsesti`.`status` AS `palinesto_status`,
  `bm_palinsesti`.`subtitle` AS `has_subtitle`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  (CONVERT(`bm_groups`.`name` USING utf8) COLLATE utf8_general_ci) AS `group_name`,
  (CONVERT(`bm_groups`.`code` USING utf8) COLLATE utf8_general_ci) AS `group_code`,
  (CONVERT(`bm_subtitle_companies`.`name` USING utf8) COLLATE utf8_general_ci) AS `company_name`,
  `masters_association`.`subtitle_company` AS `subtitle_company`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  (CONVERT(`bm_channels`.`description` USING utf8) COLLATE utf8_general_ci) AS `channel_name`,
  (CONVERT(`produced_srt_files`.`published` USING utf8) COLLATE utf8_general_ci) AS `is_online`,
  (CONVERT(`produced_srt_files`.`direct_url` USING utf8) COLLATE utf8_general_ci) AS `direct_url`,
  (CONVERT(IF(ISNULL(`bm_subtitle_job_clip`.`upload_status`), 'N', `bm_subtitle_job_clip`.`upload_status`) USING utf8) COLLATE utf8_general_ci) AS `upload_status`,
  `bm_subtitle_job_clip`.`upload_update` AS `upload_date`,
  (CONVERT(`bm_subtitle_job_clip`.`upload_location_url` USING utf8) COLLATE utf8_general_ci) AS `upload_location_url`,
  `bm_subtitle_job_clip`.`srt_id` AS `srt_id`,
  (CONVERT(`bm_subtitle_job_clip`.`original_ext` USING utf8) COLLATE utf8_general_ci) AS `original_ext`,
  `bm_subtitle_job_clip`.`id` AS `id`,
  `masters_association`.`id` AS `master_id`,
  (CONVERT(TRIM(SUBSTR(`masters_association`.`description`, ((LENGTH(`masters_association`.`description`) - LOCATE(' **** ', REVERSE(`masters_association`.`description`))) + 1))) USING utf8) COLLATE utf8_general_ci) AS `clip_description`,
  (CONVERT(`services`.`channel_code` USING utf8) COLLATE utf8_general_ci) AS `channel_code`
FROM (((((((`masters_association`
  JOIN `bm_palinsesti`
    ON ((`masters_association`.`event_id` = `bm_palinsesti`.`id`)))
  JOIN `bm_groups`
    ON ((`bm_palinsesti`.`group_id` = `bm_groups`.`id`)))
  JOIN `bm_subtitle_companies`
    ON ((`masters_association`.`subtitle_company` = `bm_subtitle_companies`.`id`)))
  JOIN `bm_channels`
    ON ((`bm_palinsesti`.`channel_id` = `bm_channels`.`service_id`)))
  LEFT JOIN `produced_srt_files`
    ON ((`produced_srt_files`.`masters_association_id` = `masters_association`.`id`)))
  LEFT JOIN `bm_subtitle_job_clip`
    ON ((`bm_subtitle_job_clip`.`master_id` = `masters_association`.`id`)))
  JOIN `services`
    ON ((`bm_channels`.`service_id` = `services`.`id`))) UNION SELECT
  `masters_association`.`event_id` AS `event_id`,
  (CONVERT(`bm_events`.`name` USING utf8) COLLATE utf8_general_ci) AS `palinsesto_title`,
  `bm_events`.`start_date` AS `palinsesto_time`,
  '' AS `palinesto_image`,
  '' AS `palinesto_web`,
  (CONVERT(`bm_events`.`special_event` USING utf8) COLLATE utf8_general_ci) AS `palinesto_special_event_code`,
  `bm_events`.`online` AS `palinesto_is_online`,
  `bm_events`.`status` AS `palinesto_status`,
  `bm_events`.`subtitle` AS `has_subtitle`,
  `bm_events`.`group_id` AS `group_id`,
  (CONVERT(`bm_groups`.`name` USING utf8) COLLATE utf8_general_ci) AS `group_name`,
  (CONVERT(`bm_groups`.`code` USING utf8) COLLATE utf8_general_ci) AS `group_code`,
  (CONVERT(`bm_subtitle_companies`.`name` USING utf8) COLLATE utf8_general_ci) AS `company_name`,
  `masters_association`.`subtitle_company` AS `subtitle_company`,
  `bm_events`.`service_id` AS `channel_id`,
  (CONVERT(`bm_channels`.`description` USING utf8) COLLATE utf8_general_ci) AS `channel_name`,
  (CONVERT(`produced_srt_files`.`published` USING utf8) COLLATE utf8_general_ci) AS `is_online`,
  (CONVERT(`produced_srt_files`.`direct_url` USING utf8) COLLATE utf8_general_ci) AS `direct_url`,
  (CONVERT(IF(ISNULL(`bm_subtitle_job_clip`.`upload_status`), 'N', `bm_subtitle_job_clip`.`upload_status`) USING utf8) COLLATE utf8_general_ci) AS `upload_status`,
  `bm_subtitle_job_clip`.`upload_update` AS `upload_date`,
  (CONVERT(`bm_subtitle_job_clip`.`upload_location_url` USING utf8) COLLATE utf8_general_ci) AS `upload_location_url`,
  `bm_subtitle_job_clip`.`srt_id` AS `srt_id`,
  (CONVERT(`bm_subtitle_job_clip`.`original_ext` USING utf8) COLLATE utf8_general_ci) AS `original_ext`,
  `bm_subtitle_job_clip`.`id` AS `id`,
  `masters_association`.`id` AS `master_id`,
  (CONVERT(TRIM(SUBSTR(`masters_association`.`description`, ((LENGTH(`masters_association`.`description`) - LOCATE(' **** ', REVERSE(`masters_association`.`description`))) + 1))) USING utf8) COLLATE utf8_general_ci) AS `clip_description`,
  (CONVERT(`services`.`channel_code` USING utf8) COLLATE utf8_general_ci) AS `channel_code`
FROM (((((((`masters_association`
  JOIN `bm_events`
    ON ((`masters_association`.`event_id` = `bm_events`.`id`)))
  JOIN `bm_groups`
    ON ((`bm_events`.`group_id` = `bm_groups`.`id`)))
  JOIN `bm_subtitle_companies`
    ON ((`masters_association`.`subtitle_company` = `bm_subtitle_companies`.`id`)))
  JOIN `bm_channels`
    ON ((`bm_events`.`service_id` = `bm_channels`.`service_id`)))
  LEFT JOIN `produced_srt_files`
    ON ((`produced_srt_files`.`masters_association_id` = `masters_association`.`id`)))
  LEFT JOIN `bm_subtitle_job_clip`
    ON ((`bm_subtitle_job_clip`.`master_id` = `masters_association`.`id`)))
  JOIN `services`
    ON ((`bm_channels`.`service_id` = `services`.`id`)));

--
-- Create table `bm_subtitle_job`
--
CREATE TABLE bm_subtitle_job (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  event_id INT(11) NOT NULL,
  company_id INT(11) NOT NULL DEFAULT -1,
  upload_status VARCHAR(50) DEFAULT NULL COMMENT 'N=non upload,Y=upload',
  upload_update DATETIME DEFAULT NULL,
  upload_location_url TEXT DEFAULT NULL,
  srt_id INT(10) DEFAULT -1,
  original_ext VARCHAR(10) DEFAULT NULL,
  PRIMARY KEY (id, event_id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 996,
AVG_ROW_LENGTH = 780,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'Definisce il lavoro del job dei sottotitoli';

--
-- Create index `UK_bm_subtitle_job_event_id` on table `bm_subtitle_job`
--
ALTER TABLE bm_subtitle_job 
  ADD UNIQUE INDEX UK_bm_subtitle_job_event_id(event_id);

--
-- Create view `bm_view_subtitlejob_status_for_events_aspx`
--
CREATE 
VIEW bm_view_subtitlejob_status_for_events_aspx
AS
SELECT
  `bm_subtitle_job`.`id` AS `subtitle_job_id`,
  `bm_subtitle_job`.`original_ext` AS `original_ext`,
  `bm_subtitle_job`.`upload_location_url` AS `upload_location_url`,
  `bm_events`.`id` AS `event_id`,
  `bm_events`.`name` AS `palinsesto_title`,
  `bm_events`.`start_date` AS `palinsesto_time`,
  (`bm_events`.`special_event` COLLATE utf8mb4_general_ci) AS `palinesto_special_event_code`,
  `bm_events`.`online` AS `palinesto_is_online`,
  `bm_events`.`status` AS `palinesto_status`,
  `bm_events`.`subtitle` AS `has_subtitle`,
  `bm_events`.`subtitle_company` AS `subtitle_company`,
  `bm_events`.`group_id` AS `group_id`,
  `bm_subtitle_job`.`upload_status` AS `upload_status`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`code` AS `group_code`,
  `bm_subtitle_companies`.`name` AS `company_name`,
  `bm_subtitle_companies`.`userSubtitleAspx` AS `userSubtitleAspx`,
  `bm_subtitle_job`.`upload_update` AS `upload_date`,
  `bm_events`.`service_id` AS `channel_id`,
  `bm_channels`.`description` AS `channel_name`,
  `bm_channels`.`order` AS `order`,
  `produced_srt_files`.`published` AS `is_online`,
  `produced_srt_files`.`direct_url` AS `direct_url`,
  (SELECT
      `sv`.`channel_code`
    FROM `services` `sv`
    WHERE (`bm_channels`.`service_id` = `sv`.`id`) LIMIT 1) AS `channel_code`
FROM ((((`bm_events`
  LEFT JOIN (`bm_subtitle_job`
    LEFT JOIN `produced_srt_files`
      ON ((`bm_subtitle_job`.`srt_id` = `produced_srt_files`.`id`)))
    ON (((`bm_subtitle_job`.`event_id` = `bm_events`.`id`)
    AND (`bm_events`.`subtitle_company` = `bm_subtitle_job`.`company_id`))))
  JOIN `bm_channels`
    ON ((`bm_events`.`service_id` = `bm_channels`.`service_id`)))
  JOIN `bm_subtitle_companies`
    ON ((`bm_events`.`subtitle_company` = `bm_subtitle_companies`.`id`)))
  JOIN `bm_groups`
    ON ((`bm_events`.`group_id` = `bm_groups`.`id`)))
WHERE ((`bm_events`.`online` = 1)
AND (DATE_FORMAT(`bm_events`.`start_date`, '%Y%m%d') > DATE_FORMAT((CURDATE() - INTERVAL 16 DAY), '%Y%m%d')));

--
-- Create view `bm_view_subtitlejob_status_for_events`
--
CREATE 
VIEW bm_view_subtitlejob_status_for_events
AS
SELECT
  `bm_subtitle_job`.`id` AS `id`,
  `bm_subtitle_job`.`event_id` AS `event_id`,
  `bm_subtitle_job`.`upload_status` AS `upload_status`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`code` AS `group_code`,
  `bm_subtitle_companies`.`name` AS `company_name`,
  `bm_subtitle_job`.`upload_update` AS `upload_date`,
  `bm_channels`.`description` AS `channel_name`,
  `produced_srt_files`.`published` AS `is_online`,
  `bm_events`.`service_id` AS `channel_id`,
  `bm_events`.`name` AS `palinsesto_title`,
  `bm_events`.`start_date` AS `palinsesto_time`,
  `bm_events`.`online` AS `palinesto_is_online`,
  `bm_events`.`status` AS `palinesto_status`,
  `bm_events`.`special_event` AS `palinesto_special_event_code`,
  `bm_events`.`subtitle` AS `has_subtitle`,
  `bm_events`.`subtitle_company` AS `subtitle_company`,
  `bm_events`.`group_id` AS `group_id`,
  `bm_subtitle_job`.`original_ext` AS `original_ext`,
  `produced_srt_files`.`direct_url` AS `direct_url`
FROM (((((`bm_subtitle_job`
  LEFT JOIN `produced_srt_files`
    ON ((`bm_subtitle_job`.`srt_id` = `produced_srt_files`.`id`)))
  JOIN `bm_events`
    ON (((`bm_subtitle_job`.`event_id` = `bm_events`.`id`)
    AND (`bm_events`.`subtitle_company` = `bm_subtitle_job`.`company_id`))))
  JOIN `bm_channels`
    ON ((`bm_events`.`service_id` = `bm_channels`.`service_id`)))
  JOIN `bm_subtitle_companies`
    ON ((`bm_events`.`subtitle_company` = `bm_subtitle_companies`.`id`)))
  JOIN `bm_groups`
    ON ((`bm_events`.`group_id` = `bm_groups`.`id`)))
WHERE (`bm_events`.`online` = 1);

--
-- Create view `bm_view_subtitlejob_status_aspx`
--
CREATE 
VIEW bm_view_subtitlejob_status_aspx
AS
SELECT
  `bm_subtitle_job`.`id` AS `subtitle_job_id`,
  `bm_subtitle_job`.`original_ext` AS `original_ext`,
  `bm_subtitle_job`.`upload_location_url` AS `upload_location_url`,
  `bm_palinsesti`.`id` AS `event_id`,
  `bm_palinsesti`.`titolo` AS `palinsesto_title`,
  `bm_palinsesti`.`ora` AS `palinsesto_time`,
  `bm_palinsesti`.`special_event` AS `palinesto_special_event_code`,
  `bm_palinsesti`.`is_online` AS `palinesto_is_online`,
  `bm_palinsesti`.`status` AS `palinesto_status`,
  `bm_palinsesti`.`subtitle` AS `has_subtitle`,
  `bm_palinsesti`.`subtitle_company` AS `subtitle_company`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_subtitle_job`.`upload_status` AS `upload_status`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`code` AS `group_code`,
  `bm_subtitle_companies`.`name` AS `company_name`,
  `bm_subtitle_companies`.`userSubtitleAspx` AS `userSubtitleAspx`,
  `bm_subtitle_job`.`upload_update` AS `upload_date`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_channels`.`description` AS `channel_name`,
  `bm_channels`.`order` AS `order`,
  `produced_srt_files`.`published` AS `is_online`,
  `produced_srt_files`.`direct_url` AS `direct_url`,
  (SELECT
      `sv`.`channel_code`
    FROM `services` `sv`
    WHERE (`bm_channels`.`service_id` = `sv`.`id`) LIMIT 1) AS `channel_code`
FROM (((((`bm_palinsesti`
  LEFT JOIN `bm_subtitle_job`
    ON (((`bm_subtitle_job`.`event_id` = `bm_palinsesti`.`id`)
    AND (`bm_subtitle_job`.`company_id` = `bm_palinsesti`.`subtitle_company`))))
  JOIN `bm_groups`
    ON ((`bm_groups`.`id` = `bm_palinsesti`.`group_id`)))
  JOIN `bm_subtitle_companies`
    ON ((`bm_palinsesti`.`subtitle_company` = `bm_subtitle_companies`.`id`)))
  JOIN `bm_channels`
    ON ((`bm_palinsesti`.`channel_id` = `bm_channels`.`service_id`)))
  LEFT JOIN `produced_srt_files`
    ON ((`bm_subtitle_job`.`srt_id` = `produced_srt_files`.`id`)))
WHERE ((`bm_palinsesti`.`is_online` = 1)
AND (DATE_FORMAT(`bm_palinsesti`.`ora`, '%Y%m%d') > DATE_FORMAT((CURDATE() - INTERVAL 16 DAY), '%Y%m%d')));

--
-- Create view `bm_view_subtitlejob_status`
--
CREATE 
VIEW bm_view_subtitlejob_status
AS
SELECT
  `bm_subtitle_job`.`id` AS `id`,
  `bm_subtitle_job`.`event_id` AS `event_id`,
  `bm_palinsesti`.`titolo` AS `palinsesto_title`,
  `bm_palinsesti`.`ora` AS `palinsesto_time`,
  `bm_palinsesti`.`image` AS `palinesto_image`,
  `bm_palinsesti`.`web` AS `palinesto_web`,
  `bm_palinsesti`.`special_event` AS `palinesto_special_event_code`,
  `bm_palinsesti`.`is_online` AS `palinesto_is_online`,
  `bm_palinsesti`.`status` AS `palinesto_status`,
  `bm_palinsesti`.`subtitle` AS `has_subtitle`,
  `bm_palinsesti`.`subtitle_company` AS `subtitle_company`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_subtitle_job`.`upload_status` AS `upload_status`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`code` AS `group_code`,
  `bm_subtitle_companies`.`name` AS `company_name`,
  `bm_subtitle_job`.`upload_update` AS `upload_date`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_channels`.`description` AS `channel_name`,
  `produced_srt_files`.`published` AS `is_online`,
  `produced_srt_files`.`direct_url` AS `direct_url`,
  `bm_subtitle_job`.`original_ext` AS `original_ext`,
  `produced_srt_files`.`masters_association_id` AS `master_id`
FROM (((((`bm_subtitle_job`
  JOIN `bm_palinsesti`
    ON (((`bm_subtitle_job`.`event_id` = `bm_palinsesti`.`id`)
    AND (`bm_subtitle_job`.`company_id` = `bm_palinsesti`.`subtitle_company`))))
  JOIN `bm_groups`
    ON ((`bm_groups`.`id` = `bm_palinsesti`.`group_id`)))
  JOIN `bm_subtitle_companies`
    ON ((`bm_palinsesti`.`subtitle_company` = `bm_subtitle_companies`.`id`)))
  JOIN `bm_channels`
    ON ((`bm_palinsesti`.`channel_id` = `bm_channels`.`service_id`)))
  LEFT JOIN `produced_srt_files`
    ON ((`bm_subtitle_job`.`srt_id` = `produced_srt_files`.`id`)))
WHERE (`bm_palinsesti`.`is_online` = 1);

--
-- Create table `push_notification_file`
--
CREATE TABLE push_notification_file (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  push_notification_file_element_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  path VARCHAR(500) NOT NULL DEFAULT '',
  filename VARCHAR(500) NOT NULL DEFAULT '',
  xml_value TEXT NOT NULL,
  service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  online VARCHAR(1) NOT NULL DEFAULT '',
  event_name VARCHAR(500) NOT NULL DEFAULT '',
  xml_direct_url VARCHAR(500) DEFAULT '',
  xml_mediapolis_url VARCHAR(500) DEFAULT '',
  json_direct_url VARCHAR(500) DEFAULT '',
  json_mediapolis_url VARCHAR(500) DEFAULT '',
  category VARCHAR(500) NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `push_notification_file_element`
--
CREATE TABLE push_notification_file_element (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(2000) NOT NULL DEFAULT '',
  description VARCHAR(2000) NOT NULL DEFAULT '',
  img_url VARCHAR(2000) DEFAULT '',
  push_notification_file_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  sports_type VARCHAR(500) NOT NULL DEFAULT '',
  is_ita VARCHAR(1) NOT NULL DEFAULT '',
  sub_description VARCHAR(2000) NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `bm_push_notification_messages`
--
CREATE TABLE bm_push_notification_messages (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  push_id INT(11) UNSIGNED DEFAULT NULL,
  event_id VARCHAR(255) NOT NULL,
  date_send DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 45,
AVG_ROW_LENGTH = 372,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create view `bm_view_push_notification_messages`
--
CREATE 
VIEW bm_view_push_notification_messages
AS
SELECT
  `push_notification_file_element`.`id` AS `id`,
  `push_notification_file_element`.`name` AS `name`,
  `push_notification_file_element`.`description` AS `description`,
  `push_notification_file_element`.`img_url` AS `img_url`,
  `bm_push_notification_messages`.`event_id` AS `event_id`,
  `bm_push_notification_messages`.`date_send` AS `date_send`,
  `push_notification_file`.`online` AS `online`
FROM ((`bm_push_notification_messages`
  JOIN `push_notification_file_element`
    ON ((`bm_push_notification_messages`.`push_id` = `push_notification_file_element`.`id`)))
  JOIN `push_notification_file`
    ON ((`push_notification_file_element`.`push_notification_file_id` = `push_notification_file`.`id`)));

--
-- Create table `produced_clips_delete_mark`
--
CREATE TABLE produced_clips_delete_mark (
  asset_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  date_2 TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  PRIMARY KEY (asset_id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create view `bm_view_event_to_delete`
--
CREATE 
VIEW bm_view_event_to_delete
AS
SELECT
  REPLACE(`b`.`id`, '_RCE', '') AS `event_id`,
  `p`.`id` AS `master_id`,
  `b`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `b`.`channel_id` AS `channel_id`,
  `b`.`group_id` AS `group_id`,
  'PAL' AS `table_from`
FROM ((`masters_association` `p`
  JOIN `bm_palinsesti` `b`)
  JOIN `produced_clips_delete_mark` `d`)
WHERE ((`p`.`event_id` = `b`.`id`)
AND (`d`.`asset_id` = `p`.`id`)
AND (`p`.`service_id` = `b`.`channel_id`)) UNION SELECT
  REPLACE(`e`.`id`, '_RCE', '') AS `event_id`,
  `p`.`id` AS `master_id`,
  '' AS `messa_in_onda_id`,
  `e`.`service_id` AS `channel_id`,
  `e`.`group_id` AS `group_id`,
  'EVN' AS `table_from`
FROM ((`masters_association` `p`
  JOIN `bm_events` `e`)
  JOIN `produced_clips_delete_mark` `d2`)
WHERE ((`p`.`event_id` = `e`.`id`)
AND (`d2`.`asset_id` = `p`.`id`)
AND (`p`.`service_id` = `e`.`service_id`)) UNION SELECT
  REPLACE(`m`.`event_id`, '_RCE', '') AS `event_id`,
  `m`.`id` AS `master_id`,
  `m`.`id_mo` AS `messa_in_onda_id`,
  `m`.`service_id` AS `channel_id`,
  -(1) AS `group_id`,
  'PCLIP' AS `table_from`
FROM (`masters_association` `m`
  JOIN `produced_clips_delete_mark` `k`)
WHERE (`k`.`asset_id` = `m`.`id`);

--
-- Create table `bm_events_multiaudio`
--
CREATE TABLE bm_events_multiaudio (
  event_id INT(11) DEFAULT NULL,
  track_type INT(11) UNSIGNED DEFAULT NULL,
  track_lang INT(11) UNSIGNED DEFAULT NULL
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 82,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create index `UK_bm_events_multiaudio` on table `bm_events_multiaudio`
--
ALTER TABLE bm_events_multiaudio 
  ADD UNIQUE INDEX UK_bm_events_multiaudio(event_id, track_lang, track_type);

--
-- Create view `bm_view_events_multiaudio`
--
CREATE 
VIEW bm_view_events_multiaudio
AS
SELECT
  `bm_events_multiaudio`.`event_id` AS `event_id`,
  `bm_events_multiaudio`.`track_type` AS `track_type`,
  `bm_events_multiaudio`.`track_lang` AS `track_lang`,
  `language_codes`.`code` AS `lang_code`,
  `service_audio_tracks_type`.`code` AS `type_code`,
  `service_audio_tracks_type`.`name` AS `track_type_name`,
  `service_audio_tracks_type`.`track_order` AS `track_order`,
  `language_codes`.`name` AS `lang_name`
FROM (((`bm_events_multiaudio`
  JOIN `language_codes`
    ON ((`bm_events_multiaudio`.`track_lang` = `language_codes`.`id`)))
  JOIN `service_audio_tracks_type`
    ON ((`bm_events_multiaudio`.`track_type` = `service_audio_tracks_type`.`id`)))
  JOIN `bm_events`
    ON ((`bm_events_multiaudio`.`event_id` = `bm_events`.`id`))) UNION SELECT
  `bm_events_multiaudio`.`event_id` AS `event_id`,
  `bm_events_multiaudio`.`track_type` AS `track_type`,
  `bm_events_multiaudio`.`track_lang` AS `track_lang`,
  `language_codes`.`code` AS `lang_code`,
  `service_audio_tracks_type`.`code` AS `type_code`,
  `service_audio_tracks_type`.`name` AS `track_type_name`,
  `service_audio_tracks_type`.`track_order` AS `track_order`,
  `language_codes`.`name` AS `lang_name`
FROM (((`bm_events_multiaudio`
  JOIN `language_codes`
    ON ((`bm_events_multiaudio`.`track_lang` = `language_codes`.`id`)))
  JOIN `service_audio_tracks_type`
    ON ((`bm_events_multiaudio`.`track_type` = `service_audio_tracks_type`.`id`)))
  JOIN `bm_palinsesti`
    ON ((`bm_events_multiaudio`.`event_id` = `bm_palinsesti`.`id`)));

--
-- Create table `video_manage_runtime_values`
--
CREATE TABLE video_manage_runtime_values (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(500) NOT NULL DEFAULT '',
  value_2 VARCHAR(500) NOT NULL DEFAULT '',
  description TEXT DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 44,
AVG_ROW_LENGTH = 496,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `IX_video_manage_runtime_values_name` on table `video_manage_runtime_values`
--
ALTER TABLE video_manage_runtime_values 
  ADD INDEX IX_video_manage_runtime_values_name(name);

--
-- Create index `IX_video_manage_runtime_values_value_2` on table `video_manage_runtime_values`
--
ALTER TABLE video_manage_runtime_values 
  ADD INDEX IX_video_manage_runtime_values_value_2(value_2);

--
-- Create view `bm_view_sottotitoli_aspx`
--
CREATE 
VIEW bm_view_sottotitoli_aspx
AS
SELECT
  (SELECT
      `video_manage_runtime_values`.`value_2`
    FROM `video_manage_runtime_values`
    WHERE (`video_manage_runtime_values`.`name` = 'SUBTITLE_MP4_BITRATE') LIMIT 1) AS `bitratedef`,
  (SELECT
      `service_qualities`.`quality`
    FROM `service_qualities`
    WHERE ((`service_qualities`.`master_quality` = 'Y')
    AND (`service_qualities`.`service_id` = `bm_view_subtitlejob_status_for_events_aspx`.`channel_id`))) AS `masterbitrate`,
  `bm_view_subtitlejob_status_for_events_aspx`.`original_ext` AS `original_ext`,
  `bm_view_subtitlejob_status_for_events_aspx`.`subtitle_job_id` AS `subtitle_job_id`,
  `bm_view_subtitlejob_status_for_events_aspx`.`upload_location_url` AS `upload_location_url`,
  `bm_view_subtitlejob_status_for_events_aspx`.`event_id` AS `event_id`,
  `bm_view_subtitlejob_status_for_events_aspx`.`palinsesto_title` AS `palinsesto_title`,
  `bm_view_subtitlejob_status_for_events_aspx`.`palinsesto_time` AS `palinsesto_time`,
  `bm_view_subtitlejob_status_for_events_aspx`.`palinesto_special_event_code` AS `palinesto_special_event_code`,
  `bm_view_subtitlejob_status_for_events_aspx`.`palinesto_is_online` AS `palinesto_is_online`,
  `bm_view_subtitlejob_status_for_events_aspx`.`palinesto_status` AS `palinesto_status`,
  `bm_view_subtitlejob_status_for_events_aspx`.`has_subtitle` AS `has_subtitle`,
  `bm_view_subtitlejob_status_for_events_aspx`.`subtitle_company` AS `subtitle_company`,
  `bm_view_subtitlejob_status_for_events_aspx`.`group_id` AS `group_id`,
  `bm_view_subtitlejob_status_for_events_aspx`.`upload_status` AS `upload_status`,
  `bm_view_subtitlejob_status_for_events_aspx`.`group_name` AS `group_name`,
  `bm_view_subtitlejob_status_for_events_aspx`.`group_code` AS `group_code`,
  `bm_view_subtitlejob_status_for_events_aspx`.`company_name` AS `company_name`,
  `bm_view_subtitlejob_status_for_events_aspx`.`upload_date` AS `upload_date`,
  `bm_view_subtitlejob_status_for_events_aspx`.`channel_id` AS `channel_id`,
  `bm_view_subtitlejob_status_for_events_aspx`.`channel_name` AS `channel_name`,
  `bm_view_subtitlejob_status_for_events_aspx`.`is_online` AS `is_online`,
  `bm_view_subtitlejob_status_for_events_aspx`.`channel_code` AS `channel_code`,
  `bm_view_subtitlejob_status_for_events_aspx`.`userSubtitleAspx` AS `userSubtitleAspx`,
  `bm_view_subtitlejob_status_for_events_aspx`.`order` AS `order`,
  `bm_view_subtitlejob_status_for_events_aspx`.`direct_url` AS `direct_url`
FROM `bm_view_subtitlejob_status_for_events_aspx` UNION SELECT
  (SELECT
      `video_manage_runtime_values`.`value_2`
    FROM `video_manage_runtime_values`
    WHERE (`video_manage_runtime_values`.`name` = 'SUBTITLE_MP4_BITRATE') LIMIT 1) AS `bitratedef`,
  (SELECT
      `service_qualities`.`quality`
    FROM `service_qualities`
    WHERE ((`service_qualities`.`master_quality` = 'Y')
    AND (`service_qualities`.`service_id` = `bm_view_subtitlejob_status_aspx`.`channel_id`))) AS `masterbitrate`,
  `bm_view_subtitlejob_status_aspx`.`original_ext` AS `original_ext`,
  `bm_view_subtitlejob_status_aspx`.`subtitle_job_id` AS `subtitle_job_id`,
  `bm_view_subtitlejob_status_aspx`.`upload_location_url` AS `upload_location_url`,
  `bm_view_subtitlejob_status_aspx`.`event_id` AS `event_id`,
  `bm_view_subtitlejob_status_aspx`.`palinsesto_title` AS `palinsesto_title`,
  `bm_view_subtitlejob_status_aspx`.`palinsesto_time` AS `palinsesto_time`,
  `bm_view_subtitlejob_status_aspx`.`palinesto_special_event_code` AS `palinesto_special_event_code`,
  `bm_view_subtitlejob_status_aspx`.`palinesto_is_online` AS `palinesto_is_online`,
  `bm_view_subtitlejob_status_aspx`.`palinesto_status` AS `palinesto_status`,
  `bm_view_subtitlejob_status_aspx`.`has_subtitle` AS `has_subtitle`,
  `bm_view_subtitlejob_status_aspx`.`subtitle_company` AS `subtitle_company`,
  `bm_view_subtitlejob_status_aspx`.`group_id` AS `group_id`,
  `bm_view_subtitlejob_status_aspx`.`upload_status` AS `upload_status`,
  `bm_view_subtitlejob_status_aspx`.`group_name` AS `group_name`,
  `bm_view_subtitlejob_status_aspx`.`group_code` AS `group_code`,
  `bm_view_subtitlejob_status_aspx`.`company_name` AS `company_name`,
  `bm_view_subtitlejob_status_aspx`.`upload_date` AS `upload_date`,
  `bm_view_subtitlejob_status_aspx`.`channel_id` AS `channel_id`,
  `bm_view_subtitlejob_status_aspx`.`channel_name` AS `channel_name`,
  `bm_view_subtitlejob_status_aspx`.`is_online` AS `is_online`,
  `bm_view_subtitlejob_status_aspx`.`channel_code` AS `channel_code`,
  `bm_view_subtitlejob_status_aspx`.`userSubtitleAspx` AS `userSubtitleAspx`,
  `bm_view_subtitlejob_status_aspx`.`order` AS `order`,
  `bm_view_subtitlejob_status_aspx`.`direct_url` AS `direct_url`
FROM `bm_view_subtitlejob_status_aspx`;

--
-- Create view `bm_view_epg_channels`
--
CREATE 
VIEW bm_view_epg_channels
AS
SELECT
  `bm_channels_users_group`.`channel_id` AS `Id`,
  `bm_channels`.`description` AS `description`,
  `bm_channels`.`epgname` AS `name`,
  `bm_channels_users_group`.`order` AS `order`,
  `bm_channels_users_group`.`epg` AS `epg`,
  `bm_channels_users_group`.`epg_cubo` AS `epg_cubo`,
  `bm_channels_users_group`.`group_id` AS `group_id`,
  `sv`.`channel_code` AS `chcode`,
  'EPG_CHANNEL_MYSQL' AS `dbtypenew`,
  (SELECT
      `video_manage_runtime_values`.`name`
    FROM `video_manage_runtime_values`
    WHERE (`video_manage_runtime_values`.`value_2` LIKE CONCAT('%,', `sv`.`channel_code`, ',%')) LIMIT 1) AS `dbtype`,
  (SELECT
      `bm_groups`.`code`
    FROM `bm_groups`
    WHERE (`bm_groups`.`id` = `bm_channels_users_group`.`group_id`)) AS `groupcode`
FROM ((`bm_channels`
  JOIN `bm_channels_users_group`
    ON ((`bm_channels`.`service_id` = `bm_channels_users_group`.`channel_id`)))
  JOIN `services` `sv`
    ON ((`sv`.`id` = `bm_channels`.`service_id`)))
ORDER BY `bm_channels_users_group`.`order`;

--
-- Create table `bm_permissions`
--
CREATE TABLE bm_permissions (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  code VARCHAR(255) DEFAULT NULL,
  description VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 69,
AVG_ROW_LENGTH = 297,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `bm_roles_permissions`
--
CREATE TABLE bm_roles_permissions (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  role_id BIGINT(20) NOT NULL,
  group_id INT(11) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'id del gruppo 0 indica regola valida per tutti i gruppi',
  permission_id INT(10) UNSIGNED NOT NULL,
  value TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 368,
AVG_ROW_LENGTH = 73,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create foreign key
--
ALTER TABLE bm_roles_permissions 
  ADD CONSTRAINT FK_bm_roles_permissions_bm_permissions_id FOREIGN KEY (permission_id)
    REFERENCES bm_permissions(id);

--
-- Create foreign key
--
ALTER TABLE bm_roles_permissions 
  ADD CONSTRAINT FK_bm_roles_permissions_roles_id FOREIGN KEY (role_id)
    REFERENCES roles(id);

--
-- Create view `bm_view_roles_permissions`
--
CREATE 
VIEW bm_view_roles_permissions
AS
SELECT
  `bm_roles_permissions`.`id` AS `id`,
  `bm_roles_permissions`.`role_id` AS `role_id`,
  `bm_roles_permissions`.`permission_id` AS `permission_id`,
  `bm_permissions`.`code` AS `permission_code`,
  `bm_roles_permissions`.`group_id` AS `group_id`,
  `bm_permissions`.`description` AS `permission_description`,
  `roles`.`name` AS `role_name`,
  `roles`.`description` AS `role_description`,
  `roles`.`code` AS `role_code`,
  `bm_roles_permissions`.`value` AS `value`
FROM ((`bm_roles_permissions`
  JOIN `bm_permissions`
    ON ((`bm_roles_permissions`.`permission_id` = `bm_permissions`.`id`)))
  JOIN `roles`
    ON ((`bm_roles_permissions`.`role_id` = `roles`.`id`)));

--
-- Create view `bm_view_drm_errors_for_scheduler`
--
CREATE 
VIEW bm_view_drm_errors_for_scheduler
AS
SELECT DISTINCT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`drm_category_error` AS `drm_category_error`
FROM (((`bm_palinsesti`
  LEFT JOIN `bm_roles_permissions`
    ON ((`bm_palinsesti`.`group_id` = `bm_roles_permissions`.`group_id`)))
  JOIN `bm_permissions`
    ON (((`bm_roles_permissions`.`permission_id` = `bm_permissions`.`id`)
    AND (`bm_roles_permissions`.`value` = 1)
    AND (`bm_permissions`.`code` = 'LOCK_DRM_ERROR'))))
  JOIN `roles`
    ON (((`bm_roles_permissions`.`role_id` = `roles`.`id`)
    AND (`roles`.`code` = 'ROLE_SCHEDULER'))));

--
-- Create table `bm_distribution_types_groupings`
--
CREATE TABLE bm_distribution_types_groupings (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  label VARCHAR(255) DEFAULT NULL COMMENT 'nome da impostare al raggruppamento',
  code VARCHAR(255) DEFAULT NULL COMMENT 'codice univoco del raggruppamento',
  `order` INT(11) NOT NULL DEFAULT 0,
  required TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 5,
AVG_ROW_LENGTH = 4096,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create index `UK_bm_distribution_types_groupings_code` on table `bm_distribution_types_groupings`
--
ALTER TABLE bm_distribution_types_groupings 
  ADD UNIQUE INDEX UK_bm_distribution_types_groupings_code(code);

--
-- Create table `bm_clips_distribution_types`
--
CREATE TABLE bm_clips_distribution_types (
  id INT(11) NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(5000) NOT NULL,
  image_uri VARCHAR(5000) DEFAULT NULL,
  module_name VARCHAR(255) DEFAULT NULL,
  display TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'mostra nella combo di ricerca o meno',
  grouping INT(11) UNSIGNED NOT NULL DEFAULT 0,
  grouping2 INT(11) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 431,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create foreign key
--
ALTER TABLE bm_clips_distribution_types 
  ADD CONSTRAINT FK_bm_clips_distribution_types2 FOREIGN KEY (grouping2)
    REFERENCES bm_distribution_types_groupings(id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create foreign key
--
ALTER TABLE bm_clips_distribution_types 
  ADD CONSTRAINT FK_types_groupings_id FOREIGN KEY (grouping)
    REFERENCES bm_distribution_types_groupings(id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create view `bm_view_distribution_types`
--
CREATE 
VIEW bm_view_distribution_types
AS
SELECT
  `bm_clips_distribution_types`.`id` AS `id`,
  `bm_clips_distribution_types`.`name` AS `name`,
  `bm_clips_distribution_types`.`description` AS `description`,
  `bm_clips_distribution_types`.`image_uri` AS `image_uri`,
  `bm_clips_distribution_types`.`module_name` AS `module_name`,
  `bm_clips_distribution_types`.`display` AS `display`,
  `bm_clips_distribution_types`.`grouping` AS `grouping_id`,
  `bm_clips_distribution_types`.`grouping2` AS `grouping2`,
  IF((`bm_clips_distribution_types`.`grouping` > 0), `bm_distribution_types_groupings`.`label`, '') AS `grouping_label`,
  IF((`bm_clips_distribution_types`.`grouping` > 0), `bm_distribution_types_groupings`.`code`, '') AS `grouping_code`,
  IF((`bm_clips_distribution_types`.`grouping2` > 0), `bm_distribution_types_groupings2`.`code`, '') AS `grouping2_code`,
  IF((`bm_clips_distribution_types`.`grouping2` > 0), `bm_distribution_types_groupings2`.`label`, '') AS `grouping2_label`,
  `bm_distribution_types_groupings`.`required` AS `grouping_required_select`,
  `bm_distribution_types_groupings2`.`required` AS `grouping_required_select2`,
  `bm_distribution_types_groupings2`.`order` AS `grouping_order2`,
  `bm_distribution_types_groupings`.`order` AS `grouping_order`
FROM ((`bm_clips_distribution_types`
  JOIN `bm_distribution_types_groupings`
    ON ((`bm_clips_distribution_types`.`grouping` = `bm_distribution_types_groupings`.`id`)))
  JOIN `bm_distribution_types_groupings` `bm_distribution_types_groupings2`
    ON ((`bm_clips_distribution_types`.`grouping2` = `bm_distribution_types_groupings2`.`id`)))
ORDER BY `bm_distribution_types_groupings`.`order`, `bm_clips_distribution_types`.`id`;

--
-- Create table `channels`
--
CREATE TABLE channels (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  name TEXT NOT NULL,
  description TEXT NOT NULL,
  image_url TEXT NOT NULL,
  code TEXT DEFAULT NULL,
  active VARCHAR(1) NOT NULL DEFAULT '',
  admin_color VARCHAR(255) DEFAULT '',
  position_order INT(10) UNSIGNED NOT NULL DEFAULT 1,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 58,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create view `view_washi_channels`
--
CREATE 
VIEW view_washi_channels
AS
SELECT
  `channels`.`id` AS `channel_id`,
  `channels`.`code` AS `code`,
  `washi_channels_categories`.`washi_channel_name` AS `washi_channel_name`,
  `washi_channels_categories`.`washi_channel_category` AS `washi_channel_category`
FROM ((`channels`
  LEFT JOIN `washi_channels_categories`
    ON (((`washi_channels_categories`.`channel_code` COLLATE utf8mb4_general_ci) = (`channels`.`code` COLLATE utf8mb4_general_ci))))
  JOIN `services`
    ON ((`channels`.`code` = `services`.`channel_code`)))
WHERE ((`services`.`active` = 'Y')
AND (`services`.`services_type_typological_id` = 1)
AND (NOT ((`channels`.`code` LIKE '%_bck'))));

--
-- Create view `bm_view_channels_by_group`
--
CREATE 
VIEW bm_view_channels_by_group
AS
SELECT
  `bm_channels`.`service_id` AS `id`,
  `bm_channels`.`description` AS `description`,
  `services`.`alias` AS `alias`,
  `services`.`channel_code` AS `code`,
  IF(ISNULL(`bm_channels`.`description`), `services`.`channel_description`, `bm_channels`.`description`) AS `channel_description`,
  `bm_channels`.`palinsesto_url` AS `palinsesto_url`,
  `bm_mediapolis_categories`.`description` AS `mediapolis_description`,
  `services_types_typological`.`code` AS `type_code`,
  `bm_channels_users_group`.`default_category` AS `default_category`,
  `bm_channels_users_group`.`default_category` AS `default_mediapolis`,
  `bm_groups`.`id` AS `group_id`,
  `bm_groups`.`name` AS `group_name`,
  `bm_groups`.`code` AS `group_code`,
  `bm_groups`.`description` AS `group_description`,
  `bm_channels_users_group`.`order` AS `order`,
  `bm_channels_users_group`.`epg` AS `epg`,
  `bm_channels_users_group`.`epg_cubo` AS `epg_tel`,
  `channels`.`image_url` AS `image_url`,
  `bm_exraisat_channels`.`channel_code` AS `channel_wf_code`,
  `bm_exraisat_channels`.`channel_name` AS `channel_epg_name`,
  `services`.`external_encoding_wf_url` AS `external_encoding_wf_url`
FROM (((((((`bm_channels`
  JOIN `services`
    ON ((`bm_channels`.`service_id` = `services`.`id`)))
  JOIN `services_types_typological`
    ON ((`services`.`services_type_typological_id` = `services_types_typological`.`id`)))
  JOIN `bm_channels_users_group`
    ON ((`bm_channels_users_group`.`channel_id` = `bm_channels`.`service_id`)))
  JOIN `bm_groups`
    ON ((`bm_channels_users_group`.`group_id` = `bm_groups`.`id`)))
  JOIN `bm_mediapolis_categories`
    ON (((`bm_channels_users_group`.`default_category` = `bm_mediapolis_categories`.`category_id`)
    AND (`bm_mediapolis_categories`.`group_id` = `bm_channels_users_group`.`group_id`))))
  JOIN `channels`
    ON ((`services`.`channel_code` = `channels`.`code`)))
  LEFT JOIN `bm_exraisat_channels`
    ON ((`bm_exraisat_channels`.`service_id` = `services`.`id`)));

--
-- Create view `bm_view_channels`
--
CREATE 
VIEW bm_view_channels
AS
SELECT
  `bm_channels`.`service_id` AS `id`,
  `bm_channels`.`description` AS `description`,
  `services`.`alias` AS `alias`,
  `services`.`channel_code` AS `code`,
  IF(ISNULL(`bm_channels`.`description`), `services`.`channel_description`, `bm_channels`.`description`) AS `channel_description`,
  `bm_channels`.`palinsesto_url` AS `palinsesto_url`,
  `bm_channels`.`mediapolis_category` AS `default_mediapolis`,
  `bm_channels`.`order` AS `order`,
  0 AS `epg`,
  0 AS `epg_tel`,
  `bm_mediapolis_categories`.`description` AS `mediapolis_description`,
  `services_types_typological`.`code` AS `type_code`,
  `channels`.`image_url` AS `image_url`,
  `bm_exraisat_channels`.`channel_code` AS `channel_wf_code`,
  `bm_exraisat_channels`.`channel_name` AS `channel_epg_name`,
  `services`.`external_encoding_wf_url` AS `external_encoding_wf_url`
FROM (((((`bm_channels`
  JOIN `services`
    ON ((`bm_channels`.`service_id` = `services`.`id`)))
  JOIN `bm_mediapolis_categories`
    ON ((`bm_mediapolis_categories`.`category_id` = `bm_channels`.`mediapolis_category`)))
  JOIN `services_types_typological`
    ON ((`services`.`services_type_typological_id` = `services_types_typological`.`id`)))
  JOIN `channels`
    ON ((`services`.`channel_code` = `channels`.`code`)))
  LEFT JOIN `bm_exraisat_channels`
    ON ((`bm_exraisat_channels`.`service_id` = `services`.`id`)));

--
-- Create table `bm_time_slot`
--
CREATE TABLE bm_time_slot (
  id INT(11) NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) DEFAULT NULL,
  `from` INT(11) DEFAULT NULL,
  `to` INT(11) DEFAULT NULL,
  order_time INT(11) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 6,
AVG_ROW_LENGTH = 3276,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'tabella fascia oraria';

--
-- Create table `bm_category_time`
--
CREATE TABLE bm_category_time (
  id INT(11) NOT NULL AUTO_INCREMENT,
  category_id INT(11) UNSIGNED NOT NULL,
  channel_id INT(11) UNSIGNED NOT NULL,
  group_id INT(11) NOT NULL,
  time INT(11) NOT NULL,
  geolocalization TINYINT(1) NOT NULL DEFAULT 0,
  multiaudio TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 120,
AVG_ROW_LENGTH = 303,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'relazione categorie fasce orarie';

--
-- Create foreign key
--
ALTER TABLE bm_category_time 
  ADD CONSTRAINT FK_bm_category_time_bm_channels_service_id FOREIGN KEY (channel_id)
    REFERENCES bm_channels(service_id);

--
-- Create foreign key
--
ALTER TABLE bm_category_time 
  ADD CONSTRAINT FK_bm_category_time_bm_groups_id FOREIGN KEY (group_id)
    REFERENCES bm_groups(id);

--
-- Create foreign key
--
ALTER TABLE bm_category_time 
  ADD CONSTRAINT FK_bm_category_time_bm_mediapolis_categories_category_id FOREIGN KEY (category_id)
    REFERENCES bm_mediapolis_categories(category_id);

--
-- Create foreign key
--
ALTER TABLE bm_category_time 
  ADD CONSTRAINT FK_bm_category_time_bm_time_slot_id FOREIGN KEY (time)
    REFERENCES bm_time_slot(id);

--
-- Create view `bm_view_category_trasmissions`
--
CREATE 
VIEW bm_view_category_trasmissions
AS
SELECT
  `bm_category_pattern`.`pattern` AS `pattern`,
  `bm_category_time`.`time` AS `time`,
  `bm_category_pattern`.`category_id` AS `specified_category`,
  `bm_category_time`.`category_id` AS `category_id`,
  `bm_category_pattern`.`channel_id` AS `channel_id`,
  `bm_category_pattern`.`group_id` AS `group_id`,
  `bm_category_time`.`geolocalization` AS `geolocalization`,
  `bm_time_slot`.`name` AS `time_name`,
  `bm_time_slot`.`from` AS `time_from`,
  `bm_time_slot`.`to` AS `time_to`
FROM ((`bm_category_pattern`
  JOIN `bm_category_time`
    ON (((`bm_category_pattern`.`channel_id` = `bm_category_time`.`channel_id`)
    AND (`bm_category_pattern`.`group_id` = `bm_category_time`.`group_id`))))
  JOIN `bm_time_slot`
    ON ((`bm_category_time`.`time` = `bm_time_slot`.`id`)));

--
-- Create view `bm_view_category_time_slot`
--
CREATE 
VIEW bm_view_category_time_slot
AS
SELECT
  `bm_category_time`.`id` AS `id`,
  `bm_category_time`.`category_id` AS `category_id`,
  `bm_mediapolis_categories`.`description` AS `category_description`,
  `bm_category_time`.`channel_id` AS `channel_id`,
  `bm_channels`.`description` AS `channel_name`,
  `bm_category_time`.`group_id` AS `group_id`,
  `bm_groups`.`name` AS `group_name`,
  `bm_time_slot`.`name` AS `time_name`,
  `bm_time_slot`.`from` AS `time_from`,
  `bm_time_slot`.`to` AS `time_to`,
  `bm_category_time`.`geolocalization` AS `geolocalization`,
  `bm_category_time`.`multiaudio` AS `multiaudio`
FROM (((((`bm_category_time`
  JOIN `bm_mediapolis_categories`
    ON (((`bm_category_time`.`category_id` = `bm_mediapolis_categories`.`category_id`)
    AND (`bm_mediapolis_categories`.`group_id` = `bm_category_time`.`group_id`))))
  JOIN `bm_channels`
    ON ((`bm_category_time`.`channel_id` = `bm_channels`.`service_id`)))
  JOIN `bm_groups`
    ON ((`bm_category_time`.`group_id` = `bm_groups`.`id`)))
  JOIN `bm_time_slot`
    ON ((`bm_category_time`.`time` = `bm_time_slot`.`id`)))
  JOIN `bm_channels_users_group`
    ON (((`bm_channels_users_group`.`channel_id` = `bm_channels`.`service_id`)
    AND (`bm_channels_users_group`.`group_id` = `bm_groups`.`id`))));

--
-- Create table `bm_backup_range`
--
CREATE TABLE bm_backup_range (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  dateFrom DATETIME NOT NULL,
  dateTo DATETIME NOT NULL,
  channel_id INT(11) UNSIGNED NOT NULL,
  enabled TINYINT(1) UNSIGNED NOT NULL DEFAULT 1,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 51,
AVG_ROW_LENGTH = 1260,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `FK_bm_backup_range_channels_id` on table `bm_backup_range`
--
ALTER TABLE bm_backup_range 
  ADD INDEX FK_bm_backup_range_channels_id(channel_id);

--
-- Create view `bm_view_backup_time_slots`
--
CREATE 
VIEW bm_view_backup_time_slots
AS
SELECT
  `bm_backup_range`.`id` AS `id`,
  `bm_backup_range`.`dateFrom` AS `dateFrom`,
  `bm_backup_range`.`dateTo` AS `dateTo`,
  `bm_backup_range`.`channel_id` AS `channel_id`,
  `bm_backup_range`.`enabled` AS `enabled`,
  `bm_channels`.`description` AS `channel_name`,
  `bm_channels`.`order` AS `order`
FROM (`bm_backup_range`
  JOIN `bm_channels`
    ON ((`bm_backup_range`.`channel_id` = `bm_channels`.`service_id`)));

--
-- Create table `bm_bookmarks`
--
CREATE TABLE bm_bookmarks (
  id INT(11) NOT NULL AUTO_INCREMENT,
  code VARCHAR(255) DEFAULT NULL,
  name MEDIUMTEXT DEFAULT NULL,
  image VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 24,
AVG_ROW_LENGTH = 744,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `bm_applications_bookmarks`
--
CREATE TABLE bm_applications_bookmarks (
  application_id INT(11) NOT NULL,
  bookmark_id INT(11) NOT NULL,
  `order` INT(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (application_id, bookmark_id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 606,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create foreign key
--
ALTER TABLE bm_applications_bookmarks 
  ADD CONSTRAINT FK_bm_applications_bookmarks FOREIGN KEY (bookmark_id)
    REFERENCES bm_bookmarks(id);

--
-- Create foreign key
--
ALTER TABLE bm_applications_bookmarks 
  ADD CONSTRAINT FK_bm_applications_id FOREIGN KEY (application_id)
    REFERENCES bm_applications(id);

--
-- Create view `bm_view_application_bookmarks`
--
CREATE 
VIEW bm_view_application_bookmarks
AS
SELECT
  `bm_applications`.`name` AS `application_name`,
  `bm_applications`.`code` AS `application_code`,
  `bm_bookmarks`.`id` AS `id`,
  `bm_bookmarks`.`code` AS `code`,
  `bm_bookmarks`.`name` AS `name`,
  `bm_bookmarks`.`image` AS `image`
FROM ((`bm_applications_bookmarks`
  JOIN `bm_applications`
    ON ((`bm_applications_bookmarks`.`application_id` = `bm_applications`.`id`)))
  JOIN `bm_bookmarks`
    ON ((`bm_applications_bookmarks`.`bookmark_id` = `bm_bookmarks`.`id`)))
ORDER BY `bm_applications_bookmarks`.`order`;

--
-- Create table `vds_works`
--
CREATE TABLE vds_works (
  id INT(11) NOT NULL AUTO_INCREMENT,
  title VARCHAR(155) DEFAULT NULL COMMENT 'titolo del lavoro',
  media VARCHAR(2048) DEFAULT NULL COMMENT 'url del media',
  status CHAR(4) NOT NULL DEFAULT 'N' COMMENT 'Y=>online,N=non lavorato,P=in attesa di pubblicazione',
  creation_date TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  last_modify TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  group_id INT(11) UNSIGNED NOT NULL DEFAULT 0,
  user_id INT(11) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 46,
AVG_ROW_LENGTH = 3276,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create view `view_vds_works`
--
CREATE 
VIEW view_vds_works
AS
SELECT
  `users`.`first_name` AS `first_name`,
  `users`.`last_name` AS `last_name`,
  `vds_works`.`id` AS `id`,
  `vds_works`.`title` AS `title`,
  `vds_works`.`media` AS `media`,
  `vds_works`.`status` AS `status`,
  `vds_works`.`creation_date` AS `creation_date`,
  `vds_works`.`last_modify` AS `last_modify`,
  `vds_works`.`group_id` AS `group_id`,
  `vds_works`.`user_id` AS `user_id`
FROM (`vds_works`
  JOIN `users`
    ON ((`vds_works`.`user_id` = `users`.`id`)));

--
-- Create table `vds_works_spots`
--
CREATE TABLE vds_works_spots (
  id INT(11) NOT NULL AUTO_INCREMENT,
  code VARCHAR(500) DEFAULT NULL,
  description VARCHAR(255) DEFAULT NULL,
  time INT(11) UNSIGNED NOT NULL,
  works_id INT(11) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 135,
AVG_ROW_LENGTH = 2730,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create foreign key
--
ALTER TABLE vds_works_spots 
  ADD CONSTRAINT FK_vds_works_spots_vds_works_id FOREIGN KEY (works_id)
    REFERENCES vds_works(id);

--
-- Create table `highlights_data_cue`
--
CREATE TABLE highlights_data_cue (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  id_hl_data BIGINT(20) DEFAULT NULL,
  clip_url LONGTEXT DEFAULT NULL,
  last_update DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 20325,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `highlights_data`
--
CREATE TABLE highlights_data (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  category VARCHAR(255) DEFAULT NULL,
  event_id VARCHAR(100) DEFAULT NULL,
  service_id VARCHAR(100) DEFAULT NULL,
  hl_id BIGINT(20) NOT NULL COMMENT 'id del db presente nel servizio di pubblicazione',
  xml LONGTEXT DEFAULT NULL COMMENT 'xml inviato',
  public TINYINT(1) NOT NULL DEFAULT 0,
  pending TINYINT(1) NOT NULL DEFAULT 0,
  is_live TINYINT(1) NOT NULL DEFAULT 0 COMMENT '1 se la l''hl si riferisce ad una trasmisisone live',
  hl_direct_url LONGTEXT DEFAULT NULL COMMENT 'url diretto al file xml degli hl',
  appType VARCHAR(50) DEFAULT NULL,
  last_send TINYINT(1) DEFAULT 0 COMMENT 'true se si tratta di ultimo invio',
  last_update TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  group_id INT(11) DEFAULT -1,
  user_id INT(11) DEFAULT -1,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 5308,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `event_id` on table `highlights_data`
--
ALTER TABLE highlights_data 
  ADD UNIQUE INDEX event_id(event_id, service_id);

DELIMITER $$

--
-- Create procedure `insertUpdateHLData`
--
CREATE PROCEDURE insertUpdateHLData(IN pClipurl LONGTEXT, IN pServiceId VARCHAR(255), IN pEventId VARCHAR(255), IN pHLId VARCHAR(255), IN pCategory VARCHAR(255), IN pXmlData LONGTEXT, IN pPublic TINYINT(1), IN pPending TINYINT(1), IN pIsLive TINYINT(1), IN pIsLastsend TINYINT(1))
BEGIN
  DECLARE hasData BIGINT DEFAULT 0;
  DECLARE done    TINYINT(1) DEFAULT 0;
  DECLARE lastId  BIGINT DEFAULT 0;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

SELECT
  id INTO hasData
FROM highlights_data
WHERE event_id COLLATE utf8mb4_general_ci = pEventId COLLATE utf8mb4_general_ci
LIMIT
1;
  IF hasData = 0 THEN

INSERT INTO highlights_data (category, event_id, service_id, hl_id, xml, public, pending, is_live, last_send)
  VALUES (pCategory, pEventId, pServiceId, pHLId, pXmlData, pPublic, pPending, pIsLive, pIsLastsend);
SELECT
  id INTO lastId
FROM highlights_data
WHERE event_id COLLATE utf8mb4_general_ci = pEventId COLLATE utf8mb4_general_ci
LIMIT
1;
    IF pPending = 1 THEN

INSERT INTO highlights_data_cue (id_hl_data, last_update, clip_url)
  VALUES (lastId, NOW(), pClipurl);
END IF;
ELSE

UPDATE highlights_data
SET category = pCategory,
    last_send = IF(last_send = 0, pIsLastsend, last_send),
    hl_id = pHLId,
    public = pPublic,
    pending = pPending,
    xml = pXmlData,
    is_live = pIsLive
WHERE event_id COLLATE utf8mb4_general_ci = pEventId COLLATE utf8mb4_general_ci;
    IF pPending = 1 THEN

SELECT
  id INTO lastId
FROM highlights_data
WHERE event_id COLLATE utf8mb4_general_ci = pEventId COLLATE utf8mb4_general_ci
LIMIT
1;
        if lastId>0 THEN
DELETE
  FROM highlights_data_cue
WHERE id_hl_data = lastId;
END IF;
INSERT INTO highlights_data_cue (id_hl_data, last_update, clip_url)
  VALUES (hasData, NOW(), pClipurl);
END IF;
END IF;
END
$$

DELIMITER ;

--
-- Create view `view_clip_in_cue`
--
CREATE 
VIEW view_clip_in_cue
AS
SELECT
  `highlights_data`.`id` AS `id`,
  `highlights_data`.`category` AS `category`,
  `highlights_data`.`event_id` AS `event_id`,
  `highlights_data`.`service_id` AS `service_id`,
  `highlights_data`.`hl_id` AS `hl_id`,
  `highlights_data`.`xml` AS `xml`,
  `highlights_data`.`public` AS `public`,
  `highlights_data`.`pending` AS `pending`,
  `highlights_data_cue`.`clip_url` AS `clip_url`,
  `highlights_data_cue`.`last_update` AS `last_update`,
  `highlights_data`.`is_live` AS `is_live`,
  `highlights_data`.`hl_direct_url` AS `hl_direct_url`,
  `highlights_data`.`last_send` AS `last_send`,
  `highlights_data`.`group_id` AS `group_id`,
  `highlights_data`.`user_id` AS `user_id`
FROM (`highlights_data`
  LEFT JOIN `highlights_data_cue`
    ON ((`highlights_data_cue`.`id_hl_data` = `highlights_data`.`id`)));

--
-- Create view `bm_view_palinsesti_by_group_copy2`
--
CREATE 
VIEW bm_view_palinsesti_by_group_copy2
AS
SELECT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_channels`.`description` AS `channel_description`,
  `bm_palinsesti`.`evento_id` AS `evento_id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_palinsesti`.`programma_id` AS `programma_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`descrizione` AS `descrizione`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`fine` AS `fine`,
  `bm_palinsesti`.`datadisponibilita` AS `datadisponibilita`,
  `bm_palinsesti`.`datafinedisponibilita` AS `datafinedisponibilita`,
  `bm_palinsesti`.`image` AS `image`,
  `bm_palinsesti`.`web` AS `web`,
  `bm_palinsesti`.`mediapoliscategory` AS `mediapoliscategory`,
  `bm_palinsesti`.`diritti_1` AS `diritti_1`,
  `bm_palinsesti`.`diritti_2` AS `diritti_2`,
  `bm_palinsesti`.`diritti_3` AS `diritti_3`,
  `bm_palinsesti`.`diritti_4` AS `diritti_4`,
  `bm_palinsesti`.`diritti_5` AS `diritti_5`,
  `bm_palinsesti`.`lavorabile` AS `lavorabile`,
  `bm_palinsesti`.`status` AS `status`,
  `bm_palinsesti`.`is_online` AS `is_online`,
  `bm_palinsesti`.`is_live` AS `is_live`,
  `bm_palinsesti`.`special_event` AS `special_event`,
  `bm_palinsesti`.`feed_id` AS `feed_id`,
  `services`.`channel_code` AS `channel_code`,
  `services`.`alias` AS `channel_alias`,
  `bm_palinsesti`.`fascia_oraria` AS `fascia_oraria`,
  `bm_palinsesti`.`fascia_oraria_url` AS `fascia_oraria_url`,
  `bm_palinsesti`.`palinsesto_url` AS `palinsesto_url`,
  `bm_palinsesti`.`used_app` AS `used_app`,
  `bm_palinsesti`.`subtitle` AS `subtitle`,
  `bm_palinsesti`.`make_hl` AS `hl`,
  `bm_subtitle_companies`.`name` AS `subtitle_company_name`,
  `bm_subtitle_companies`.`description` AS `subtitle_company_description`,
  `bm_palinsesti`.`subtitle_company` AS `subtitle_company_id`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`creator` AS `creator`,
  `bm_palinsesti`.`last_modifier` AS `last_modifier`,
  `users`.`first_name` AS `last_modifier_first_name`,
  `users`.`last_name` AS `last_modifier_last_name`,
  `creatorUser`.`first_name` AS `creator_user_first_name`,
  `creatorUser`.`last_name` AS `creator_user_last_name`,
  `bm_channels_users_group`.`order` AS `channel_order`,
  `bm_palinsesti`.`rec_from` AS `rec_from`,
  `bm_palinsesti`.`rec_to` AS `rec_to`,
  `bm_palinsesti`.`rec_id` AS `rec_id`,
  `highlights_data`.`hl_direct_url` AS `direct_url`,
  `bm_applications`.`code` AS `application_code`,
  `bm_channels_users_group`.`automatic_update` AS `automatic_update`,
  `bm_channels_users_group`.`scheduler_lasttime` AS `scheduler_lasttime`,
  `bm_channels_users_group`.`scheduling_type` AS `scheduling_type`,
  `bm_channels_users_group`.`scheduler_hour` AS `scheduler_hour`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`is_rce` AS `is_rce`,
  `bm_palinsesti`.`is_backup` AS `is_backup`,
  `bm_palinsesti`.`rec_status` AS `rec_status`,
  `bm_palinsesti`.`exclusive_role_lock` AS `exclusive_role_lock`,
  `bm_palinsesti`.`make_ads` AS `make_ads`,
  `bm_palinsesti`.`drm_category_error` AS `drm_category_error`,
  `bm_palinsesti`.`multiaudio` AS `multiaudio`,
  `bm_palinsesti`.`multiaudioError` AS `multiaudioError`
FROM (((((((((`bm_palinsesti`
  JOIN `bm_channels`
    ON ((`bm_palinsesti`.`channel_id` = `bm_channels`.`service_id`)))
  JOIN `services`
    ON ((`bm_channels`.`service_id` = `services`.`id`)))
  LEFT JOIN `bm_subtitle_companies`
    ON ((`bm_subtitle_companies`.`id` = `bm_palinsesti`.`subtitle_company`)))
  JOIN `bm_channels_users_group`
    ON (((`bm_channels_users_group`.`channel_id` = `bm_channels`.`service_id`)
    AND (`bm_palinsesti`.`group_id` = `bm_channels_users_group`.`group_id`))))
  LEFT JOIN `highlights_data`
    ON ((REPLACE(`highlights_data`.`event_id`, 'RCE', '') LIKE `bm_palinsesti`.`id`)))
  LEFT JOIN `bm_specialEvents`
    ON ((`bm_palinsesti`.`special_event` = `bm_specialEvents`.`code`)))
  LEFT JOIN `bm_applications`
    ON ((`bm_specialEvents`.`application_id` = `bm_applications`.`id`)))
  LEFT JOIN `users`
    ON ((`users`.`id` = `bm_palinsesti`.`last_modifier`)))
  LEFT JOIN `users` `creatorUser`
    ON ((`creatorUser`.`id` = `bm_palinsesti`.`creator`)));

--
-- Create view `bm_view_palinsesti_by_group`
--
CREATE 
VIEW bm_view_palinsesti_by_group
AS
SELECT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_channels`.`description` AS `channel_description`,
  `bm_palinsesti`.`evento_id` AS `evento_id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_palinsesti`.`programma_id` AS `programma_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`descrizione` AS `descrizione`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`fine` AS `fine`,
  `bm_palinsesti`.`datadisponibilita` AS `datadisponibilita`,
  `bm_palinsesti`.`datafinedisponibilita` AS `datafinedisponibilita`,
  `bm_palinsesti`.`image` AS `image`,
  `bm_palinsesti`.`web` AS `web`,
  `bm_palinsesti`.`mediapoliscategory` AS `mediapoliscategory`,
  `bm_palinsesti`.`diritti_1` AS `diritti_1`,
  `bm_palinsesti`.`diritti_2` AS `diritti_2`,
  `bm_palinsesti`.`diritti_3` AS `diritti_3`,
  `bm_palinsesti`.`diritti_4` AS `diritti_4`,
  `bm_palinsesti`.`diritti_5` AS `diritti_5`,
  `bm_palinsesti`.`lavorabile` AS `lavorabile`,
  `bm_palinsesti`.`status` AS `status`,
  `bm_palinsesti`.`is_online` AS `is_online`,
  `bm_palinsesti`.`is_live` AS `is_live`,
  `bm_palinsesti`.`special_event` AS `special_event`,
  `bm_palinsesti`.`feed_id` AS `feed_id`,
  `bm_palinsesti`.`duration` AS `duration`,
  `services`.`channel_code` AS `channel_code`,
  `services`.`alias` AS `channel_alias`,
  `bm_palinsesti`.`fascia_oraria` AS `fascia_oraria`,
  `bm_palinsesti`.`fascia_oraria_url` AS `fascia_oraria_url`,
  `bm_palinsesti`.`palinsesto_url` AS `palinsesto_url`,
  `bm_palinsesti`.`used_app` AS `used_app`,
  `bm_palinsesti`.`subtitle` AS `subtitle`,
  `bm_palinsesti`.`make_hl` AS `hl`,
  `bm_subtitle_companies`.`name` AS `subtitle_company_name`,
  `bm_subtitle_companies`.`description` AS `subtitle_company_description`,
  `bm_palinsesti`.`subtitle_company` AS `subtitle_company_id`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`creator` AS `creator`,
  `bm_palinsesti`.`last_modifier` AS `last_modifier`,
  `users`.`first_name` AS `last_modifier_first_name`,
  `users`.`last_name` AS `last_modifier_last_name`,
  `creatorUser`.`first_name` AS `creator_user_first_name`,
  `creatorUser`.`last_name` AS `creator_user_last_name`,
  `bm_channels_users_group`.`order` AS `channel_order`,
  `bm_palinsesti`.`rec_from` AS `rec_from`,
  `bm_palinsesti`.`rec_to` AS `rec_to`,
  `bm_palinsesti`.`rec_id` AS `rec_id`,
  `highlights_data`.`hl_direct_url` AS `direct_url`,
  `bm_applications`.`code` AS `application_code`,
  `bm_channels_users_group`.`automatic_update` AS `automatic_update`,
  `bm_channels_users_group`.`scheduler_lasttime` AS `scheduler_lasttime`,
  `bm_channels_users_group`.`scheduling_type` AS `scheduling_type`,
  `bm_channels_users_group`.`scheduler_hour` AS `scheduler_hour`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`is_rce` AS `is_rce`,
  `bm_palinsesti`.`is_backup` AS `is_backup`,
  `bm_palinsesti`.`rec_status` AS `rec_status`,
  `bm_palinsesti`.`exclusive_role_lock` AS `exclusive_role_lock`,
  `bm_palinsesti`.`make_ads` AS `make_ads`,
  `bm_palinsesti`.`forceRecordedButton` AS `forceRecordedButton`,
  `bm_palinsesti`.`cliptype_selection` AS `cliptype_selection`,
  `bm_palinsesti`.`epg_request_filename_status` AS `epg_request_filename_status`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `epg_tel_mediapolis_url`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  `bm_palinsesti`.`cms_mediapolis_url` AS `cms_mediapolis_url`,
  `bm_palinsesti`.`is_from_archive` AS `is_from_archive`,
  `bm_palinsesti`.`drm_flag` AS `drm_flag`,
  `bm_palinsesti`.`drm_category_error` AS `drm_category_error`,
  `bm_palinsesti`.`archiveCode` AS `archiveCode`,
  `bm_palinsesti`.`editable` AS `editable`,
  `bm_palinsesti`.`multiaudio` AS `multiaudio`,
  `bm_palinsesti`.`multiaudioError` AS `multiaudioError`
FROM (((((((((`bm_palinsesti`
  JOIN `bm_channels`
    ON ((`bm_palinsesti`.`channel_id` = `bm_channels`.`service_id`)))
  JOIN `services`
    ON ((`bm_channels`.`service_id` = `services`.`id`)))
  LEFT JOIN `bm_subtitle_companies`
    ON ((`bm_subtitle_companies`.`id` = `bm_palinsesti`.`subtitle_company`)))
  JOIN `bm_channels_users_group`
    ON (((`bm_channels_users_group`.`channel_id` = `bm_channels`.`service_id`)
    AND (`bm_palinsesti`.`group_id` = `bm_channels_users_group`.`group_id`))))
  LEFT JOIN `highlights_data`
    ON ((REPLACE(`highlights_data`.`event_id`, 'RCE', '') LIKE `bm_palinsesti`.`id`)))
  LEFT JOIN `bm_specialEvents`
    ON ((`bm_palinsesti`.`special_event` = `bm_specialEvents`.`code`)))
  LEFT JOIN `bm_applications`
    ON ((`bm_specialEvents`.`application_id` = `bm_applications`.`id`)))
  LEFT JOIN `users`
    ON ((`users`.`id` = `bm_palinsesti`.`last_modifier`)))
  LEFT JOIN `users` `creatorUser`
    ON ((`creatorUser`.`id` = `bm_palinsesti`.`creator`)));

--
-- Create view `bm_view_palinsesti`
--
CREATE 
VIEW bm_view_palinsesti
AS
SELECT
  `bm_palinsesti`.`id` AS `id`,
  `bm_palinsesti`.`channel_id` AS `channel_id`,
  `bm_channels`.`description` AS `channel_description`,
  `bm_channels`.`order` AS `channel_order`,
  `bm_palinsesti`.`evento_id` AS `evento_id`,
  `bm_palinsesti`.`messa_in_onda_id` AS `messa_in_onda_id`,
  `bm_palinsesti`.`programma_id` AS `programma_id`,
  `bm_palinsesti`.`titolo` AS `titolo`,
  `bm_palinsesti`.`descrizione` AS `descrizione`,
  `bm_palinsesti`.`ora` AS `ora`,
  `bm_palinsesti`.`fine` AS `fine`,
  `bm_palinsesti`.`feed_id` AS `feed_id`,
  `bm_palinsesti`.`datadisponibilita` AS `datadisponibilita`,
  `bm_palinsesti`.`datafinedisponibilita` AS `datafinedisponibilita`,
  `bm_palinsesti`.`image` AS `image`,
  `bm_palinsesti`.`web` AS `web`,
  `bm_palinsesti`.`mediapoliscategory` AS `mediapoliscategory`,
  `bm_palinsesti`.`diritti_1` AS `diritti_1`,
  `bm_palinsesti`.`diritti_2` AS `diritti_2`,
  `bm_palinsesti`.`diritti_3` AS `diritti_3`,
  `bm_palinsesti`.`diritti_4` AS `diritti_4`,
  `bm_palinsesti`.`diritti_5` AS `diritti_5`,
  `bm_palinsesti`.`lavorabile` AS `lavorabile`,
  `bm_palinsesti`.`status` AS `status`,
  `bm_palinsesti`.`is_online` AS `is_online`,
  `bm_palinsesti`.`is_live` AS `is_live`,
  `bm_palinsesti`.`special_event` AS `special_event`,
  `bm_palinsesti`.`creator` AS `creator`,
  `bm_palinsesti`.`last_modifier` AS `last_modifier`,
  `bm_palinsesti`.`duration` AS `duration`,
  `services`.`channel_code` AS `channel_code`,
  `services`.`alias` AS `channel_alias`,
  `users`.`first_name` AS `last_modifier_first_name`,
  `users`.`last_name` AS `last_modifier_last_name`,
  `creatorUser`.`first_name` AS `creator_user_first_name`,
  `creatorUser`.`last_name` AS `creator_user_last_name`,
  `bm_palinsesti`.`fascia_oraria` AS `fascia_oraria`,
  `bm_palinsesti`.`fascia_oraria_url` AS `fascia_oraria_url`,
  `bm_palinsesti`.`palinsesto_url` AS `palinsesto_url`,
  `bm_palinsesti`.`used_app` AS `used_app`,
  `bm_palinsesti`.`subtitle` AS `subtitle`,
  `bm_palinsesti`.`make_hl` AS `hl`,
  `bm_palinsesti`.`rec_from` AS `rec_from`,
  `bm_palinsesti`.`rec_to` AS `rec_to`,
  `bm_subtitle_companies`.`name` AS `subtitle_company_name`,
  `bm_subtitle_companies`.`description` AS `subtitle_company_description`,
  `bm_palinsesti`.`subtitle_company` AS `subtitle_company_id`,
  `highlights_data`.`hl_direct_url` AS `direct_url`,
  `bm_applications`.`code` AS `application_code`,
  `bm_palinsesti`.`is_rce` AS `is_rce`,
  `bm_palinsesti`.`rec_id` AS `rec_id`,
  `bm_palinsesti`.`group_id` AS `group_id`,
  `bm_palinsesti`.`rec_status` AS `rec_status`,
  0 AS `automatic_update`,
  NOW() AS `scheduler_lasttime`,
  NULL AS `scheduling_type`,
  '' AS `scheduler_hour`,
  `bm_palinsesti`.`is_backup` AS `is_backup`,
  `bm_palinsesti`.`exclusive_role_lock` AS `exclusive_role_lock`,
  `bm_palinsesti`.`make_ads` AS `make_ads`,
  `bm_palinsesti`.`forceRecordedButton` AS `forceRecordedButton`,
  `bm_palinsesti`.`cliptype_selection` AS `cliptype_selection`,
  `bm_palinsesti`.`epg_request_filename_status` AS `epg_request_filename_status`,
  `bm_palinsesti`.`epg_tel_mediapolis_url` AS `epg_tel_mediapolis_url`,
  `bm_palinsesti`.`epg_tel_filename` AS `epg_tel_filename`,
  `bm_palinsesti`.`cms_mediapolis_url` AS `cms_mediapolis_url`,
  `bm_palinsesti`.`media_url` AS `media_url`,
  `bm_palinsesti`.`is_from_archive` AS `is_from_archive`,
  `bm_palinsesti`.`drm_flag` AS `drm_flag`,
  `bm_palinsesti`.`drm_category_error` AS `drm_category_error`,
  `bm_palinsesti`.`archiveCode` AS `archiveCode`,
  `bm_palinsesti`.`editable` AS `editable`,
  `bm_palinsesti`.`multiaudio` AS `multiaudio`,
  `bm_palinsesti`.`multiaudioError` AS `multiaudioError`
FROM ((((((((`bm_palinsesti`
  JOIN `bm_channels`
    ON ((`bm_palinsesti`.`channel_id` = `bm_channels`.`service_id`)))
  JOIN `services`
    ON ((`bm_channels`.`service_id` = `services`.`id`)))
  LEFT JOIN `bm_subtitle_companies`
    ON ((`bm_subtitle_companies`.`id` = `bm_palinsesti`.`subtitle_company`)))
  LEFT JOIN `highlights_data`
    ON ((REPLACE(`highlights_data`.`event_id`, 'RCE', '') LIKE `bm_palinsesti`.`id`)))
  LEFT JOIN `bm_specialEvents`
    ON ((`bm_palinsesti`.`special_event` = `bm_specialEvents`.`code`)))
  LEFT JOIN `bm_applications`
    ON ((`bm_specialEvents`.`application_id` = `bm_applications`.`id`)))
  LEFT JOIN `users`
    ON ((`users`.`id` = `bm_palinsesti`.`last_modifier`)))
  LEFT JOIN `users` `creatorUser`
    ON ((`creatorUser`.`id` = `bm_palinsesti`.`creator`)));

--
-- Create view `bm_view_events_copy`
--
CREATE 
VIEW bm_view_events_copy
AS
SELECT
  `bm_events`.`id` AS `id`,
  `bm_events`.`service_id` AS `service_id`,
  `services`.`alias` AS `alias`,
  `services`.`channel_code` AS `channel_code`,
  `services`.`channel_description` AS `channel_description`,
  `bm_events`.`mediapolis_category_id` AS `mediapolis_category_id`,
  `bm_mediapolis_categories`.`description` AS `mediapolis_description`,
  `bm_events`.`name` AS `name`,
  `bm_events`.`description` AS `description`,
  `bm_events`.`start_date` AS `start_date`,
  `bm_events`.`end_date` AS `end_date`,
  `bm_events`.`special_event` AS `special_event`,
  `bm_events`.`creation_date` AS `creation_date`,
  `bm_events`.`status` AS `status`,
  `bm_events`.`live` AS `is_live`,
  `bm_events`.`online` AS `online`,
  `bm_events`.`used_app` AS `used_app`,
  (SELECT
      `highlights_data`.`hl_direct_url`
    FROM `highlights_data`
    WHERE (`highlights_data`.`event_id` = `bm_events`.`id`) LIMIT 1) AS `direct_url`,
  (SELECT
      `bm_applications`.`code` AS `application_code`
    FROM (`bm_specialEvents`
      JOIN `bm_applications`
        ON ((`bm_specialEvents`.`application_id` = `bm_applications`.`id`)))
    WHERE (`bm_specialEvents`.`code` = CONVERT(`bm_events`.`special_event` USING utf8mb4)) LIMIT 1) AS `application_code`,
  `bm_events`.`hl` AS `hl`,
  `bm_events`.`group_id` AS `group_id`,
  `bm_events`.`creator` AS `creator`,
  `bm_events`.`last_modified` AS `last_modified`,
  `bm_subtitle_companies`.`name` AS `subtitle_company_name`,
  `bm_subtitle_companies`.`description` AS `subtitle_company_description`,
  `bm_events`.`subtitle` AS `subtitle`,
  `bm_events`.`subtitle_company` AS `subtitle_company_id`,
  `bm_events`.`drm_flag` AS `drm_flag`,
  `bm_events`.`drm_category_error` AS `drm_category_error`,
  `bm_events`.`multiaudio` AS `multiaudio`
FROM (((`bm_events`
  JOIN `services`
    ON ((`bm_events`.`service_id` = `services`.`id`)))
  JOIN `bm_mediapolis_categories`
    ON (((`bm_events`.`mediapolis_category_id` = `bm_mediapolis_categories`.`category_id`)
    AND (`bm_mediapolis_categories`.`group_id` = `bm_events`.`group_id`))))
  LEFT JOIN `bm_subtitle_companies`
    ON ((`bm_events`.`subtitle_company` = `bm_subtitle_companies`.`id`)));

--
-- Create table `broadcast_files`
--
CREATE TABLE broadcast_files (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  event_id VARCHAR(255) NOT NULL DEFAULT '',
  service_id VARCHAR(255) NOT NULL DEFAULT '',
  application_type VARCHAR(255) NOT NULL DEFAULT '',
  event_name TEXT DEFAULT NULL,
  creation_date DATETIME NOT NULL,
  last_modified DATETIME NOT NULL,
  content LONGTEXT DEFAULT NULL,
  source LONGTEXT DEFAULT NULL COMMENT 'url del vod che ha fatto da sorgente per gli hl in diratta',
  `lock` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'se 1 blocca il record per l''accesso all''applicazione',
  start DATETIME DEFAULT NULL COMMENT 'data inizio trasmissione solo per hl live',
  end DATETIME DEFAULT NULL COMMENT 'data fine trasmissione solo per hl live',
  is_preview_progress TINYINT(1) DEFAULT 0 COMMENT 'true se la preview e'' in corso',
  make_hl_live TINYINT(1) DEFAULT 0,
  is_backup TINYINT(1) DEFAULT 0 COMMENT 'true se il flusso e'' di backup',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 499,
AVG_ROW_LENGTH = 9362,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'contiene i file delle lavorazioni';

DELIMITER $$

--
-- Create procedure `insertUpdateBroadcastFile`
--
CREATE PROCEDURE insertUpdateBroadcastFile(IN pEventId VARCHAR(255), IN pServiceId VARCHAR(255), IN pApplicationType VARCHAR(255), IN pContent LONGTEXT, IN pMakeHL TINYINT(1), IN pEventName TEXT)
BEGIN
  DECLARE hasFile TINYINT(1) DEFAULT 0;

SELECT
  IF(id > 0, 1, 0) INTO hasFile
FROM broadcast_files
WHERE event_id COLLATE utf8mb4_general_ci = pEventId COLLATE utf8mb4_general_ci
AND service_id COLLATE utf8mb4_general_ci = pServiceId COLLATE utf8mb4_general_ci
AND application_type COLLATE utf8mb4_general_ci = pApplicationType COLLATE utf8mb4_general_ci LIMIT 1;
  
  IF hasFile = 0 THEN
INSERT INTO broadcast_files (event_id, service_id, application_type, creation_date, last_modified, content, `source`, make_hl_live, event_name)
  VALUES (pEventId, pServiceId, pApplicationType, NOW(), NOW(), pContent, NULL, pMakeHL, pEventName);
ELSE
UPDATE broadcast_files
SET last_modified = NOW(),
    content = pContent,
    make_hl_live = pMakeHL
WHERE event_id COLLATE utf8mb4_general_ci = pEventId COLLATE utf8mb4_general_ci
AND service_id COLLATE utf8mb4_general_ci = pServiceId COLLATE utf8mb4_general_ci
AND application_type COLLATE utf8mb4_general_ci = pApplicationType COLLATE utf8mb4_general_ci;
END IF;
END
$$

DELIMITER ;

--
-- Create table `broadcasts_vod`
--
CREATE TABLE broadcasts_vod (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  event_id VARCHAR(255) DEFAULT NULL,
  rce_id VARCHAR(255) NOT NULL,
  service_id VARCHAR(255) DEFAULT NULL,
  clip_id VARCHAR(255) DEFAULT NULL,
  clip_url MEDIUMTEXT DEFAULT NULL,
  hl_id BIGINT(20) NOT NULL DEFAULT 0,
  hl_xml LONGTEXT DEFAULT NULL COMMENT 'xml degli hl',
  xml_file LONGTEXT DEFAULT NULL COMMENT 'xml dei markers lavorati ',
  public TINYINT(1) DEFAULT NULL,
  mediapolis_public TINYINT(1) NOT NULL DEFAULT 0,
  last_update TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 44653,
AVG_ROW_LENGTH = 3276,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'Contiene la lista delle trasmissionio lavorate';

DELIMITER $$

--
-- Create procedure `insertUpdateBroadcastsVod`
--
CREATE PROCEDURE insertUpdateBroadcastsVod(IN pEventId VARCHAR(255), IN pService VARCHAR(255), IN pClipId VARCHAR(255), IN pClipUrl TEXT, IN pXmlData LONGTEXT, IN pPublic TINYINT(1), IN pRceId VARCHAR(255), IN pXmlFile LONGTEXT)
BEGIN
  DECLARE hasData TINYINT(1) DEFAULT 0;
  DECLARE done    TINYINT(1) DEFAULT 0;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

SELECT
  IF(id > 0, 1, 0) INTO hasData
FROM broadcasts_vod
WHERE event_id COLLATE utf8mb4_general_ci = pEventId COLLATE utf8mb4_general_ci
AND service_id COLLATE utf8mb4_general_ci = pService COLLATE utf8mb4_general_ci
LIMIT
1;

  IF hasData THEN

UPDATE broadcasts_vod
SET xml_file = pXmlFile,
    clip_id = pClipId,
    clip_url = pClipUrl,
    hl_xml = pXmlData,
    public = pPublic,
    rce_id = pRceId
WHERE event_id COLLATE utf8mb4_general_ci = pEventId COLLATE utf8mb4_general_ci
AND service_id COLLATE utf8mb4_general_ci = pService COLLATE utf8mb4_general_ci;
ELSE

INSERT INTO broadcasts_vod (event_id, service_id, clip_id, clip_url, hl_xml, public, rce_id, xml_file)
  VALUES (pEventId, pService, pClipId, pClipUrl, pXmlData, pPublic, pRceId, pXmlFile);
END IF;
END
$$

--
-- Create procedure `deleteBroadcast`
--
CREATE PROCEDURE deleteBroadcast(IN pEventId VARCHAR(255), IN pServiceId VARCHAR(255))
BEGIN
DELETE
  FROM broadcasts_vod
WHERE service_id COLLATE utf8mb4_general_ci = pServiceId COLLATE utf8mb4_general_ci
  AND event_id COLLATE utf8mb4_general_ci = pEventId COLLATE utf8mb4_general_ci;
END
$$

DELIMITER ;

--
-- Create table `clip_status`
--
CREATE TABLE clip_status (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  clip_id BIGINT(20) NOT NULL COMMENT 'id della clip da monitorare',
  marker_id VARCHAR(190) NOT NULL COMMENT 'id del marker',
  serviceId VARCHAR(255) DEFAULT NULL,
  event_id VARCHAR(255) DEFAULT NULL,
  file LONGTEXT DEFAULT NULL COMMENT 'percorso del file della clip',
  source VARCHAR(500) DEFAULT NULL COMMENT 'url del flusso sorgente',
  anteprima TINYINT(1) NOT NULL COMMENT 'status dell''anteprima true se generata',
  pubblicazione TINYINT(1) NOT NULL COMMENT 'Status della pubblicazione true se generata',
  pending TINYINT(1) DEFAULT NULL,
  data_pubblicazione DATETIME NOT NULL COMMENT 'data di pubblicazione',
  data_aggiornamento DATETIME DEFAULT NULL,
  screenshotUrl TEXT DEFAULT NULL COMMENT 'url dello screenshot prodotto',
  imageUri TEXT DEFAULT NULL COMMENT 'nome dell''immagine associata come screenshot',
  mediapolis_url VARCHAR(1000) DEFAULT '',
  PRIMARY KEY (id, clip_id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 95118,
AVG_ROW_LENGTH = 1365,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'gestisce lo status di pubblicazione delle clip';

--
-- Create index `marker_id` on table `clip_status`
--
ALTER TABLE clip_status 
  ADD UNIQUE INDEX marker_id(marker_id);

DELIMITER $$

--
-- Create procedure `updateClipFlag`
--
CREATE PROCEDURE updateClipFlag(IN clipId         BIGINT,
                                IN pPubllicazione TINYINT(2),
                                IN pAnteprima     TINYINT(2),
                                IN pPending       TINYINT(2)
                                )
BEGIN
  DECLARE done    TINYINT(1) DEFAULT 0;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
  IF pPubllicazione = 1 OR pPubllicazione = 0 THEN
UPDATE clip_status
SET pubblicazione = pPubllicazione
WHERE clip_id = clipId;
END IF;
  IF pAnteprima = 1 OR pAnteprima = 0 THEN
UPDATE clip_status
SET anteprima = pAnteprima
WHERE clip_id = clipId;
END IF;

  IF pPending = 1 OR pPending = 0 THEN
UPDATE clip_status
SET pending = pPending
WHERE clip_id = clipId;
END IF;

END
$$

--
-- Create procedure `updateClipByMarker`
--
CREATE PROCEDURE updateClipByMarker(IN markerId VARCHAR(255), IN eventId VARCHAR(255), IN pPubblicata TINYINT(1), IN pAnteprima TINYINT(1), IN pPending TINYINT(1))
BEGIN
DECLARE done    TINYINT(1) DEFAULT 0;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
UPDATE clip_status
SET pubblicazione = pPubblicata,
    anteprima = pAnteprima,
    pending = pPending
WHERE marker_id COLLATE utf8mb4_general_ci = markerId COLLATE utf8mb4_general_ci
AND event_id COLLATE utf8mb4_general_ci = eventId COLLATE utf8mb4_general_ci;

END
$$

--
-- Create procedure `deleteClip`
--
CREATE PROCEDURE deleteClip(IN clipId BIGINT)
BEGIN
DELETE
  FROM clip_status
WHERE clip_id = clipId;
END
$$

--
-- Create procedure `createUpdateClip`
--
CREATE PROCEDURE createUpdateClip(IN pClipId BIGINT, IN pMarkId VARCHAR(255), IN pServiceId VARCHAR(255), IN pEventId VARCHAR(255), IN pFile LONGTEXT, IN pSource VARCHAR(500), IN pAnteprima TINYINT(1), IN pPubblicazione TINYINT(1), IN pPending TINYINT(1))
  COMMENT 'inserisce o fa un update di una clip'
BEGIN
  DECLARE pClip BIGINT DEFAULT 0;
   DECLARE done    TINYINT(1) DEFAULT 0;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;


SELECT
  clip_id INTO pClip
FROM clip_status
WHERE marker_id COLLATE utf8mb4_general_ci = pMarkId COLLATE utf8mb4_general_ci
AND serviceId COLLATE utf8mb4_general_ci = pServiceId COLLATE utf8mb4_general_ci
AND event_id COLLATE utf8mb4_general_ci = pEventId COLLATE utf8mb4_general_ci
LIMIT
1;

  IF pClip > 0 THEN
UPDATE clip_status
SET clip_id = pClipId,
    marker_id = pMarkId,
    serviceId = pServiceId,
    event_id = pEventId,
    `file` = pFile,
    `source` = pSource,
    anteprima = pAnteprima,
    pubblicazione = pPubblicazione,
    pending = pPending,
    data_aggiornamento = NOW()
WHERE marker_id COLLATE utf8mb4_general_ci = pMarkId COLLATE utf8mb4_general_ci
AND serviceId COLLATE utf8mb4_general_ci = pServiceId COLLATE utf8mb4_general_ci
AND event_id COLLATE utf8mb4_general_ci = pEventId COLLATE utf8mb4_general_ci;
ELSE
INSERT INTO clip_status (clip_id, marker_id, serviceId, event_id, `file`, `source`, anteprima, pubblicazione, pending, data_pubblicazione, data_aggiornamento)
  VALUES (pClipId, pMarkId, pServiceId, pEventId, pFile, pSource, pAnteprima, pPubblicazione, pPending, NOW(), NOW())
ON DUPLICATE KEY UPDATE
clip_id = pClipId,
event_id = pEventId,
serviceId = pServiceId,
`file` = pFile,
`source` = pSource,
anteprima = pAnteprima,
pubblicazione = pPubblicazione,
pending = pPending,
data_aggiornamento = NOW();
END IF;

END
$$

DELIMITER ;

--
-- Create table `_tmp_table_filename`
--
CREATE TABLE _tmp_table_filename (
  messa_in_onda_id VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci DEFAULT NULL,
  epg_1800 LONGTEXT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  asset_id BIGINT(10) UNSIGNED DEFAULT NULL,
  num_repliche BIGINT(21) DEFAULT NULL,
  ip_service TEXT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 353,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create table `workflows`
--
CREATE TABLE workflows (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(5000) NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 3,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `watchfolder_director_singleton`
--
CREATE TABLE watchfolder_director_singleton (
  key_2 VARCHAR(190) NOT NULL DEFAULT '',
  value_2 BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (key_2, value_2)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `video_metadata_attributes`
--
CREATE TABLE video_metadata_attributes (
  path VARCHAR(500) NOT NULL DEFAULT '',
  filename VARCHAR(500) NOT NULL DEFAULT '',
  local VARCHAR(1) NOT NULL DEFAULT '',
  bitrate VARCHAR(500) NOT NULL DEFAULT '',
  start_time TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  end_time TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  duration DECIMAL(10, 3) NOT NULL DEFAULT 0.000,
  service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  source_quality VARCHAR(5000) NOT NULL DEFAULT '',
  langcode VARCHAR(10) DEFAULT 'ita',
  PRIMARY KEY (filename, service_id, path)
)
ENGINE = INNODB,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create table `videocut_services_activity`
--
CREATE TABLE videocut_services_activity (
  id BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  title VARCHAR(5000) DEFAULT NULL COMMENT 'titolo dell''evento',
  userIdentity VARCHAR(1000) DEFAULT NULL COMMENT 'identità dell''utente',
  contentItem VARCHAR(255) DEFAULT NULL COMMENT 'content item dell''evento',
  serviceName VARCHAR(255) DEFAULT NULL COMMENT 'nome del servizio',
  startCall TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'timestamp di inizio della chiamata',
  endCall TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'timestamp di fine della chiamata',
  results TEXT DEFAULT NULL COMMENT 'json dell''oggetto risultato del servizio',
  idMo VARCHAR(255) DEFAULT NULL COMMENT 'id di messa in onda',
  mediapolisCategoryId VARCHAR(255) DEFAULT NULL COMMENT 'id della categoria mediapolis',
  drm TINYINT(1) UNSIGNED DEFAULT 0 COMMENT 'true se impostato flag drm sull''evento',
  hasDrmError TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'true se il flag drm della categoria non coincide con l''imput del servizio',
  geoprotection TINYINT(1) UNSIGNED DEFAULT 0 COMMENT 'true se geoprotetto',
  lavorabile TINYINT(1) UNSIGNED DEFAULT 0 COMMENT 'true se lavorabile',
  archiveCode VARCHAR(255) DEFAULT NULL COMMENT 'codice dell''archivio',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 198,
AVG_ROW_LENGTH = 499,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `vds_login_token`
--
CREATE TABLE vds_login_token (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  token VARCHAR(5000) DEFAULT NULL,
  media TEXT DEFAULT NULL,
  data TEXT DEFAULT NULL,
  return_url TEXT DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 147,
AVG_ROW_LENGTH = 2340,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `users_tmp`
--
CREATE TABLE users_tmp (
  id BIGINT(20) NOT NULL DEFAULT 0,
  first_name TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  last_name TEXT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  email VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  username VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  password VARCHAR(155) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  company_id INT(11) DEFAULT -1,
  enabled TINYINT(1) DEFAULT 1,
  alternate_mail_list VARCHAR(5000) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  temp_auth VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  temp_expire DATETIME DEFAULT NULL,
  system_user TINYINT(1) UNSIGNED DEFAULT 0,
  password_expiredate DATETIME DEFAULT NULL,
  last_login DATETIME DEFAULT NULL
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 1260,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `users_roles`
--
CREATE TABLE users_roles (
  user_id BIGINT(20) NOT NULL,
  role_id BIGINT(20) NOT NULL,
  default_role TINYINT(1) UNSIGNED NOT NULL DEFAULT 1,
  PRIMARY KEY (user_id, role_id, default_role)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `FK_users_roles_roles_id` on table `users_roles`
--
ALTER TABLE users_roles 
  ADD INDEX FK_users_roles_roles_id(role_id);

--
-- Create table `tmp_users_data`
--
CREATE TABLE tmp_users_data (
  user_id BIGINT(20) NOT NULL
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 2048,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create table `test_tasks_servlet_proxy`
--
CREATE TABLE test_tasks_servlet_proxy (
  id INT(11) NOT NULL AUTO_INCREMENT,
  name VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 2,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `test_tasks`
--
CREATE TABLE test_tasks (
  id INT(11) NOT NULL AUTO_INCREMENT,
  name VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 2,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `tasks_parameters`
--
CREATE TABLE tasks_parameters (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  tasks_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  position INT(10) UNSIGNED NOT NULL DEFAULT 0,
  parameter_class VARCHAR(5000) NOT NULL DEFAULT '',
  parameter_value VARCHAR(5000) NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 14,
AVG_ROW_LENGTH = 1638,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `tasks`
--
CREATE TABLE tasks (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  workflows_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  position INT(10) UNSIGNED NOT NULL DEFAULT 0,
  class VARCHAR(5000) NOT NULL DEFAULT '',
  method VARCHAR(5000) NOT NULL DEFAULT '',
  spring_name VARCHAR(5000) NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 6,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `summary`
--
CREATE TABLE summary (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  eventId VARCHAR(100) NOT NULL,
  summary_data TEXT NOT NULL COMMENT 'contiene il json sel dommario',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 61,
AVG_ROW_LENGTH = 468,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `UK_summary_eventId` on table `summary`
--
ALTER TABLE summary 
  ADD UNIQUE INDEX UK_summary_eventId(eventId);

--
-- Create table `services_special_events_bumpers`
--
CREATE TABLE services_special_events_bumpers (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  services_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  special_events_code VARCHAR(500) NOT NULL DEFAULT '',
  bumpers_name VARCHAR(500) NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 15,
AVG_ROW_LENGTH = 1260,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `programmed_work_requests`
--
CREATE TABLE programmed_work_requests (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  xml VARCHAR(5000) NOT NULL DEFAULT '',
  complete VARCHAR(1) NOT NULL DEFAULT 'N',
  result_url VARCHAR(5000) DEFAULT NULL,
  timestamp_request TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  timestamp_end_request TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `programmed_cdn_work_request`
--
CREATE TABLE programmed_cdn_work_request (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  operation_name VARCHAR(500) NOT NULL DEFAULT '',
  clips_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  complete VARCHAR(1) NOT NULL DEFAULT 'N',
  service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  operation_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 652699,
AVG_ROW_LENGTH = 292,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create index `Index_2` on table `programmed_cdn_work_request`
--
ALTER TABLE programmed_cdn_work_request 
  ADD UNIQUE INDEX Index_2(clips_id, operation_name);

--
-- Create table `produced_dvr_vod_working_files`
--
CREATE TABLE produced_dvr_vod_working_files (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  bitrate VARCHAR(5000) NOT NULL DEFAULT '',
  path VARCHAR(5000) NOT NULL DEFAULT '',
  filename VARCHAR(5000) NOT NULL DEFAULT '',
  start_request_date TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  end_request_date TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  delay_before_in_millis INT(10) UNSIGNED NOT NULL DEFAULT 0,
  delay_after_in_millis INT(10) UNSIGNED NOT NULL DEFAULT 0,
  service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  master_file_id INT(11) NOT NULL DEFAULT 0,
  date_2 TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  multiaudio TINYINT(1) UNSIGNED DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `pending_watchfolder_control`
--
CREATE TABLE pending_watchfolder_control (
  service_id INT(11) NOT NULL DEFAULT 0,
  filename VARCHAR(500) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT '',
  size BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
  date_2 TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  PRIMARY KEY (service_id, filename)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `palinsestos_metadata_history`
--
CREATE TABLE palinsestos_metadata_history (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  document_id VARCHAR(767) NOT NULL DEFAULT '',
  id_mo VARCHAR(767) NOT NULL DEFAULT '',
  ebucore_value LONGTEXT NOT NULL,
  adi_xml_value LONGTEXT NOT NULL,
  ingestion_date VARCHAR(45) NOT NULL DEFAULT '',
  status VARCHAR(1) NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `palinsestos_metadata`
--
CREATE TABLE palinsestos_metadata (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  id_mo VARCHAR(767) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT '',
  document_id VARCHAR(767) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT '',
  ebucore_value LONGTEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  adi_xml_value LONGTEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  title_label TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  title TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  alternative_title_label TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  alternative_title TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  description_label TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  description TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  date_2 TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  start_avaliability_label TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  start_avaliability TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  end_avaliability_label TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  end_avaliability TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  start_schedule_label TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  start_schedule TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  end_schedule_label TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  end_schedule TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  copyrighted TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  genre TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  subgenre TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  mediapolis_category TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  channel TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  final_url TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  organizations_name TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  status VARCHAR(1) BINARY CHARACTER SET latin1 COLLATE latin1_bin NOT NULL DEFAULT 'N',
  adi_name TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  is_fp VARCHAR(1) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT 'N',
  ebucore_distribution_url TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 1350119,
AVG_ROW_LENGTH = 482192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `UK_palinsestos_metadata_document_id` on table `palinsestos_metadata`
--
ALTER TABLE palinsestos_metadata 
  ADD INDEX UK_palinsestos_metadata_document_id(document_id);

--
-- Create index `UK_palinsestos_metadata_id_mo` on table `palinsestos_metadata`
--
ALTER TABLE palinsestos_metadata 
  ADD INDEX UK_palinsestos_metadata_id_mo(id_mo);

--
-- Create table `mail_templates`
--
CREATE TABLE mail_templates (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  code VARCHAR(500) NOT NULL DEFAULT '',
  subject VARCHAR(500) NOT NULL DEFAULT '',
  message VARCHAR(5000) NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 23,
AVG_ROW_LENGTH = 1489,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `highlights_cue_lock`
--
CREATE TABLE highlights_cue_lock (
  is_locked TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (is_locked)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `file_archives`
--
CREATE TABLE file_archives (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  path MEDIUMTEXT DEFAULT NULL,
  alarm_size_percentage MEDIUMTEXT DEFAULT NULL,
  actual_size_percentage MEDIUMTEXT DEFAULT NULL,
  current VARCHAR(1) NOT NULL DEFAULT 'N',
  http_url MEDIUMTEXT DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `ex_raisat_programmed_requests`
--
CREATE TABLE ex_raisat_programmed_requests (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  idMo VARCHAR(500) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT '',
  date_2 TIMESTAMP NULL DEFAULT '1970-01-01 01:00:01',
  acquiring_status VARCHAR(1) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT 'N',
  service_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  asset_id INT(10) UNSIGNED NOT NULL DEFAULT 0,
  master_physical_path VARCHAR(5000) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 6329,
AVG_ROW_LENGTH = 1638,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `exraisat_watch_folder`
--
CREATE TABLE exraisat_watch_folder (
  idexraisat_watch_folder INT(11) NOT NULL AUTO_INCREMENT,
  hostname VARCHAR(45) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL,
  user VARCHAR(45) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL,
  password VARCHAR(45) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL,
  path VARCHAR(45) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL,
  subpath VARCHAR(45) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  PRIMARY KEY (idexraisat_watch_folder)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `deployments`
--
CREATE TABLE deployments (
  id INT(11) NOT NULL AUTO_INCREMENT,
  release_date DATETIME DEFAULT NULL,
  active TINYINT(1) NOT NULL DEFAULT 0,
  note MEDIUMTEXT DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `cubovision_xml_storage`
--
CREATE TABLE cubovision_xml_storage (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  rce_id MEDIUMTEXT DEFAULT NULL,
  event_id MEDIUMTEXT DEFAULT NULL,
  xml MEDIUMTEXT DEFAULT NULL,
  status MEDIUMTEXT DEFAULT NULL,
  date_2 DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 46513,
AVG_ROW_LENGTH = 2048,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `bumpers`
--
CREATE TABLE bumpers (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(500) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT '',
  path VARCHAR(500) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT '',
  filename VARCHAR(500) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT '',
  quality VARCHAR(500) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 4,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `Index_2` on table `bumpers`
--
ALTER TABLE bumpers 
  ADD UNIQUE INDEX Index_2(name, quality);

--
-- Create table `bm_watchfolder_metadata`
--
CREATE TABLE bm_watchfolder_metadata (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  filename TEXT DEFAULT NULL,
  size BIGINT(20) UNSIGNED DEFAULT NULL,
  dataRicevuto DATETIME DEFAULT NULL,
  filekey VARCHAR(150) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 9,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create index `UK_pp_watchfolder_metadata_filekey` on table `bm_watchfolder_metadata`
--
ALTER TABLE bm_watchfolder_metadata 
  ADD UNIQUE INDEX UK_pp_watchfolder_metadata_filekey(filekey);

--
-- Create table `bm_subtitle_job_status`
--
CREATE TABLE bm_subtitle_job_status (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  code VARCHAR(50) DEFAULT NULL,
  description VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 5,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `bm_status_palinsesto`
--
CREATE TABLE bm_status_palinsesto (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) DEFAULT NULL,
  value INT(4) DEFAULT NULL,
  comment VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 9,
AVG_ROW_LENGTH = 2340,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create table `bm_scheduler`
--
CREATE TABLE bm_scheduler (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  scheduler_name VARCHAR(255) NOT NULL,
  last_scheduler DATETIME DEFAULT NULL,
  is_scheduling TINYINT(1) NOT NULL DEFAULT 0,
  description VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 5,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `bm_release_application`
--
CREATE TABLE bm_release_application (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  message TEXT DEFAULT NULL,
  application VARCHAR(50) NOT NULL,
  showMessage TINYINT(1) NOT NULL DEFAULT 0,
  polling_time INT(2) UNSIGNED NOT NULL DEFAULT 1 COMMENT 'polling time espresso in minuti',
  current_version VARCHAR(255) DEFAULT NULL,
  next_version VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 3,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `bm_push_notification_images`
--
CREATE TABLE bm_push_notification_images (
  id INT(11) NOT NULL AUTO_INCREMENT,
  url TEXT DEFAULT NULL,
  description TEXT DEFAULT NULL,
  module_name VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 172,
AVG_ROW_LENGTH = 264,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `bm_game_parts`
--
CREATE TABLE bm_game_parts (
  id INT(11) NOT NULL AUTO_INCREMENT,
  name MEDIUMTEXT DEFAULT NULL,
  show_time TINYINT(1) DEFAULT NULL,
  `order` INT(11) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 13,
AVG_ROW_LENGTH = 2048,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

--
-- Create table `bm_epg_filename_cue`
--
CREATE TABLE bm_epg_filename_cue (
  id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  filename TEXT DEFAULT NULL,
  mediapolis_url TEXT DEFAULT NULL,
  ip_addrs VARCHAR(500) DEFAULT NULL,
  last_modified TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci;

DELIMITER $$

--
-- Create procedure `bm_insertUpdateDefaultCategories`
--
CREATE PROCEDURE bm_insertUpdateDefaultCategories(IN pId            INT(11),
                                                              IN pCategoryId    INT(11),
                                                              IN pChannelId     INT(11),
                                                              IN pBroadcastName TEXT,
                                                              IN pFromDate          TIMESTAMP,
                                                              IN pToDate            TIMESTAMP,
                                                              IN pFasciaOrariaName TEXT
                                                              )
BEGIN
  DECLARE idToUpdate INT(11) DEFAULT -1;

SELECT
  id INTO idToUpdate
FROM bm_categories_default
WHERE id = pId;

  IF idToUpdate > 0 THEN
UPDATE bm_categories_default
SET category_id = pCategoryId,
    channel_id = pChannelId,
    broadcast_name = pBroadcastName,
    date_from = pFromDate,
    date_to = pToDate,
    name = pFasciaOrariaName
WHERE id = idToUpdate;
ELSE
INSERT INTO bm_categories_default (channel_id, category_id, date_from, date_to, broadcast_name, name)
  VALUES (pChannelId, pCategoryId, pFromDate, pToDate, pBroadcastName, pFasciaOrariaName);
END IF;
END
$$

DELIMITER ;

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;