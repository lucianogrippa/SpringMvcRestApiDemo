<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
							http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
							http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
							http://www.springframework.org/schema/context 
							http://www.springframework.org/schema/context/spring-context-4.0.xsd
						    http://www.springframework.org/schema/jee 
						    http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
						    http://www.springframework.org/schema/tx
						    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- Supporto per le annotazioni -->
	<context:annotation-config></context:annotation-config>
	<mvc:annotation-driven></mvc:annotation-driven>

	<!-- scan dei componenti -->
	<context:component-scan
		base-package="controllers,entities,dtos,helpers,exceptions,security,repositories,dao,services" />

	<!-- configurazione del file di properties -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>file:${SERVER_BASE_DIR}/configuration/webapps/application.springrestdemo.properties
			</value>
		</property>
	</bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<mvc:resources order="1" location="/resources/"
		mapping="/resources/**" />
	<mvc:resources mapping="swagger-ui.html"
		location="classpath:/META-INF/resources/" />
	<mvc:resources mapping="/webjars/**"
		location="classpath:/META-INF/resources/webjars/" />

	<!-- Configura il plugin json -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- Configure bean per convertire json to pojo e vice versa -->
	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>

	<context:component-scan
		base-package="com.journaldev.spring.controller" />

	<!-- Use in-memory embedded H2 database usa il default di jboss -->
	<jee:jndi-lookup id="h2dataSource"
		jndi-name="java:jboss/datasources/ExampleDS" lookup-on-startup="false"
		proxy-interface="javax.sql.DataSource" />

	<bean id="mysqlDS" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="jdbc/mysqldb" />
    </bean>
    
	<!--JPA HIBERNATE CONFIGURATION -->
	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		
	<!-- Configurazione JPA Hibernate -->
	<bean id="appEntityManager" name="appEntityManager"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
<!-- 		<property name="persistenceXmlLocation" value="/META-INF/persistence.xml"/> -->
		<property name="persistenceUnitName" value="restApiJPAUnit" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="persistenceUnitManager">
            <bean
                class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
                <property name="defaultDataSource" ref="mysqlDS" />
            </bean>
        </property>
		<property name="dataSource" ref="mysqlDS" />
	</bean>

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="true" />
		<property name="generateDdl" value="true" />
		<property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect" />
	</bean>

	<!-- Definisce il transaction manager -->
	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="appEntityManager" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<bean id="persistenceExceptionTranslationPostProcessor"  class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />


	<!-- SpringContextProvider -->
	<bean id="springContextProvider"
		class="helpers.SpringContextProvider"></bean>

	<!-- SWAGGER -->
	<bean id="swagger2Config"
		class="springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration">
	</bean>

</beans>